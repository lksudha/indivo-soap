<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="09b6cf62-2b53-4f97-8276-a43019686f8c" activeEnvironment="Default" name="IndivoTest" soapui-version="5.2.0" abortOnError="false" runType="SEQUENTIAL" resourceRoot="" xmlns:con="http://eviware.com/soapui/config"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.actions.iface.tools.soapui.TestRunnerAction@values-local"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Environment" value="Default"/>
  <con:entry key="Global Properties" value=""/>
  <con:entry key="TestSuite" value="Account"/>
  <con:entry key="Password" value=""/>
  <con:entry key="TestRunner Path" value=""/>
  <con:entry key="Tool Args" value=""/>
  <con:entry key="Ignore Errors" value="false"/>
  <con:entry key="Host:Port" value=""/>
  <con:entry key="user-settings.xml Password" value=""/>
  <con:entry key="WSS Password Type" value=""/>
  <con:entry key="Save Project" value="false"/>
  <con:entry key="Enable UI" value="false"/>
  <con:entry key="System Properties" value=""/>
  <con:entry key="Domain" value=""/>
  <con:entry key="Coverage Report" value="false"/>
  <con:entry key="Export JUnit Results" value="false"/>
  <con:entry key="Open Report" value="false"/>
  <con:entry key="Project Properties" value=""/>
  <con:entry key="Export All" value="false"/>
  <con:entry key="Project Password" value=""/>
  <con:entry key="Report Format(s)" value=""/>
  <con:entry key="TestCase" value="&lt;all>"/>
  <con:entry key="Print Report" value="false"/>
  <con:entry key="Username" value=""/>
  <con:entry key="Root Folder" value=""/>
  <con:entry key="Save After" value="false"/>
  <con:entry key="Add Settings" value="false"/>
  <con:entry key="Endpoint" value=""/>
  <con:entry key="Select Report Type" value=""/>
</xml-fragment>]]></con:setting></con:settings><con:testSuite id="a20e2ecd-113d-416f-877b-d1f6d05177fb" name="App Flow"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="be0cb084-bb6e-4b01-bfc9-4a209f251157" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Login" searchProperties="true"><con:settings/><con:testStep type="groovy" name="setHeader" id="21f2ffc5-3c54-463f-af02-c295ba222e28"><con:settings/><con:config><script>//def project = com.eviware.soapui.model.support.ModelSupport.getModelItemProject( request )
//import oauth.signpost.commonshttp;

import org.apache.http.HttpResponse
import org.apache.http.HttpEntity;
import org.apache.http.client.methods.HttpGet
import org.apache.http.client.methods.HttpPost
import org.apache.http.impl.client.DefaultHttpClient
import org.apache.http.util.EntityUtils;
import org.apache.commons.httpclient.NameValuePair
import org.apache.http.message.BasicNameValuePair
import org.apache.http.client.entity.UrlEncodedFormEntity

import oauth.signpost.OAuth
import oauth.signpost.OAuthConsumer
import oauth.signpost.OAuthProvider
import oauth.signpost.commonshttp.CommonsHttpOAuthConsumer
import oauth.signpost.commonshttp.CommonsHttpOAuthProvider
import java.net.URLDecoder

import java.util.ArrayList

	OAuthProvider provider;
	OAuthConsumer consumer;
	def project = context.testCase.testSuite.project
	def suite = context.testCase.testSuite;
	key = project.getPropertyValue('oauth_consumer_key')
	secret = project.getPropertyValue('oauth_consumer_secret')
	

	consumer = new CommonsHttpOAuthConsumer(key, secret);
//	HttpPost request = new HttpPost("http://128.199.234.192:8000/oauth/internal/session_create");
	HttpPost request = new HttpPost("http://localhost:8000/oauth/internal/session_create");
	request.setHeader("Content-Type" ,"application/x-www-form-urlencoded")
	ArrayList&lt;NameValuePair>  postParameters = new ArrayList&lt;NameValuePair>();
     postParameters.add(new BasicNameValuePair("username", "jsmith"));
     postParameters.add(new BasicNameValuePair("password", "password.example"));
//     postParameters.add(new BasicNameValuePair("username", "test3@gmail.com"));
//     postParameters.add(new BasicNameValuePair("password", "password"));

     request.setEntity(new UrlEncodedFormEntity(postParameters));

	consumer.sign(request)
 	DefaultHttpClient httpClient = new DefaultHttpClient();
 	log.info '-'*80 + '\n'
 	log.info 'Test Case Name: '+ testRunner.testCase.name + '\n'
 	log.info 'Start Test Step: ' + context.testCase.getTestStepAt(context.getCurrentStepIndex()).getLabel() + '\n'
     log.info(request)
     HttpResponse response = httpClient.execute(request);
//     log.info testRunner.status 
	HttpEntity entity = response.getEntity()
	String responseString = EntityUtils.toString(entity, "UTF-8")
	log.info 'Response: ' + responseString
	def map = [:]
	def data = responseString
	data.split("&amp;").each {param ->
     	def nameAndValue = param.split("=")
     	map[nameAndValue[0]] = nameAndValue[1]
	}
	token = map.get('oauth_token')
	token_secret = map.get('oauth_token_secret')
	account_id = map.get('account_id')
//	log.info('token:'+token)
//	log.info('token secret:'+token_secret)
//	log.info('account id:'+ account_id)
	project.setPropertyValue("token", token)
	project.setPropertyValue("token_secret", token_secret)
	project.setPropertyValue("account_id", URLDecoder.decode(account_id, 'utf-8'))
	log.info 'End Test Step: ' + context.testCase.getTestStepAt(context.getCurrentStepIndex()).getLabel() + '\n'
	log.info 'End Test Case: ' + testRunner.testCase.name + '\n'
	log.info '-'*80 + '\n'	</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="c8421fac-880c-4735-8bd7-16007a419fbb" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="GetAccount" searchProperties="true"><con:settings/><con:testStep type="groovy" name="account_info" id="acc0bb50-a637-4a5f-9db3-780d6a823474"><con:settings/><con:config><script>import org.apache.http.HttpResponse
import org.apache.http.HttpEntity;
import org.apache.http.client.methods.HttpGet
import org.apache.http.util.EntityUtils;
import com.soapui.scripts

log.info '-'*80 + '\n'
log.info 'Test Step Name: ' + context.testCase.getTestStepAt(context.getCurrentStepIndex()).getLabel() + '\n'

def project = context.testCase.testSuite.project

key = project.getPropertyValue('oauth_consumer_key')
secret = project.getPropertyValue('oauth_consumer_secret')
token = project.getPropertyValue('token')
token_secret = project.getPropertyValue('token_secret')
urlBase = 'http://' + project.getPropertyValue('host') + ':' + project.getPropertyValue('port') + '/'
def url = urlBase + 'accounts/johnsmith@indivo.org'
HttpGet request = new HttpGet(url);

HttpResponse response = new scripts().executeGET(key, secret, token, token_secret, request)
log.info 'Response: ' + response + '\n'
HttpEntity entity = response.getEntity()
def out = EntityUtils.toString(entity)
log.info 'Response String: ' + out + '\n'

log.info '-'*80 + '\n'</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="e4093a1f-e6b6-49fb-8bc9-3eb6ee63d37d" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getNotifications" searchProperties="true"><con:settings/><con:testStep type="groovy" name="account_notifications" id="5ca0117b-a670-43b7-ba30-02db56c44863"><con:settings/><con:config><script>import org.apache.http.client.methods.HttpGet
import org.apache.http.HttpResponse
import org.apache.http.HttpEntity
import org.apache.http.util.EntityUtils
import com.soapui.scripts

log.info '-'*80 + '\n'
log.info 'Test Step Name: ' + context.testCase.getTestStepAt(context.getCurrentStepIndex()).getLabel() + '\n'

def project = context.testCase.testSuite.project;
key = project.getPropertyValue('oauth_consumer_key')
secret = project.getPropertyValue('oauth_consumer_secret')
token = project.getPropertyValue('token')
token_secret = project.getPropertyValue('token_secret')

def request = new HttpGet("http://localhost:8000/accounts/johnsmith@indivo.org/notifications/")
def response = new scripts().executeGET(key, secret, token, token_secret, request)	

log.info 'Response: ' + response + '\n'
HttpEntity entity = response.getEntity()
def out = EntityUtils.toString(entity)
log.info 'Response String: ' + out + '\n'

log.info '-'*80 + '\n'</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="5b88f261-4662-4f86-a785-1155edeba5b3" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Inbox" searchProperties="true"><con:settings/><con:testStep type="groovy" name="account_inbox" id="4ea9dbcf-ed9e-461f-af93-8da0a37c938a"><con:settings/><con:config><script>import org.apache.http.HttpResponse
import org.apache.http.HttpEntity;
import org.apache.http.client.methods.HttpGet
import org.apache.http.util.EntityUtils
import com.soapui.scripts

log.info '-'*80 + '\n'
log.info 'Test Step Name: ' + context.testCase.getTestStepAt(context.getCurrentStepIndex()).getLabel() + '\n'
	
def project = context.testCase.testSuite.project;
key = project.getPropertyValue('oauth_consumer_key')
secret = project.getPropertyValue('oauth_consumer_secret')
token = project.getPropertyValue('token')
token_secret = project.getPropertyValue('token_secret')

	
HttpGet request = new HttpGet("http://localhost:8000/accounts/johnsmith@indivo.org/inbox/")	
HttpResponse response = new scripts().executeGET(key, secret, token, token_secret, request)

log.info 'Response: ' + response + '\n'
HttpEntity entity = response.getEntity()
def out = EntityUtils.toString(entity)
log.info 'Response String: ' + out + '\n'

log.info '-'*80 + '\n'</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="fed64271-33bc-4c5c-80ef-62e71e8824bb" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Demographics" searchProperties="true"><con:settings/><con:testStep type="groovy" name="getDemographics" id="329ef2b2-8b47-4334-9a83-55edd4072fdc"><con:settings/><con:config><script>import org.apache.http.HttpResponse
import org.apache.http.HttpEntity;
import org.apache.http.client.methods.HttpGet
import org.apache.http.util.EntityUtils;
import com.soapui.scripts

log.info '-'*80 + '\n'
log.info 'Test Step Name: ' + context.testCase.getTestStepAt(context.getCurrentStepIndex()).getLabel() + '\n'

def project = context.testCase.testSuite.project;
key = project.getPropertyValue('oauth_consumer_key')
secret = project.getPropertyValue('oauth_consumer_secret')
token = project.getPropertyValue('token')
token_secret = project.getPropertyValue('token_secret')
recordId = project.getPropertyValue('recordId')

def url = 'http://localhost:8000/records/' + recordId + '/demographics?response_format=' + 'application%2Fjson'
HttpGet request = new HttpGet(url);
HttpResponse response = new scripts().executeGET(key, secret, token, token_secret, request)

log.info 'Response: ' + response + '\n'
HttpEntity entity = response.getEntity()
def out = EntityUtils.toString(entity)
log.info 'Response String: ' + out + '\n'

log.info '-'*80 + '\n'</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="1aacb489-3db0-473b-a214-3fbcca964ff6" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Records" searchProperties="true"><con:settings/><con:testStep type="groovy" name="record_list" id="53438e7a-fb61-4d82-b69a-c9a7d897e185"><con:settings/><con:config><script>import org.apache.http.HttpResponse
import org.apache.http.HttpEntity;
import org.apache.http.client.methods.HttpGet
import org.apache.http.util.EntityUtils;
import groovy.util.XmlSlurper
import com.soapui.scripts

log.info '-'*80 + '\n'
log.info 'Test Step Name: ' + context.testCase.getTestStepAt(context.getCurrentStepIndex()).getLabel() + '\n'

def project = context.testCase.testSuite.project;
key = project.getPropertyValue('oauth_consumer_key')
secret = project.getPropertyValue('oauth_consumer_secret')
token = project.getPropertyValue('token')
token_secret = project.getPropertyValue('token_secret')
accountId = project.getPropertyValue('account_id')
urlBase = 'http://' + project.getPropertyValue('host') + ':' + project.getPropertyValue('port') + '/'
url = urlBase + 'accounts/' + accountId + '/records/'
HttpGet request = new HttpGet(url);
HttpResponse response = new scripts().executeGET(key, secret, token, token_secret, request)
log.info 'Response: ' + response + '\n'
HttpEntity entity = response.getEntity()
def out = EntityUtils.toString(entity)
log.info 'Response Out: ' + out + '\n'
def records = new XmlSlurper().parseText(out)
def recordId = records.Record[0].@id
log.info "recordId: " + recordId + '\n'
project.setPropertyValue('recordId', recordId.toString())

log.info '-'*80 + '\n'</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="8d77c505-5727-414e-a5bd-465bcbf8d16a" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Apps" searchProperties="true"><con:settings/><con:testStep type="groovy" name="record_phas" id="2460c49c-b1f2-48d8-8e7a-849d226c32e8"><con:settings/><con:config><script>import org.apache.http.HttpResponse
import org.apache.http.HttpEntity;
import org.apache.http.client.methods.HttpGet
import org.apache.http.util.EntityUtils;
import com.soapui.scripts

log.info '-'*80 + '\n'
log.info 'Test Step Name: ' + context.testCase.getTestStepAt(context.getCurrentStepIndex()).getLabel() + '\n'

def project = context.testCase.testSuite.project;
key = project.getPropertyValue('oauth_consumer_key')
secret = project.getPropertyValue('oauth_consumer_secret')
token = project.getPropertyValue('token')
token_secret = project.getPropertyValue('token_secret')
recordId = project.getPropertyValue('recordId')
urlBase = 'http://' + project.getPropertyValue('host') + ':' + project.getPropertyValue('port') + '/'
def url = urlBase + 'records/' + recordId + '/apps/'
HttpGet request = new HttpGet(url);
HttpResponse response = new scripts().executeGET(key, secret, token, token_secret, request)
log.info 'Response: ' + response + '\n'
HttpEntity entity = response.getEntity()
def out = EntityUtils.toString(entity)
log.info 'Response String: ' + out + '\n'

log.info '-'*80 + '\n'
</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="2c3ba517-f3e8-4d53-84c6-dd6fbb780465" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="carenets" searchProperties="true"><con:settings/><con:testStep type="groovy" name="carenet_list" id="93f050c6-a5c4-45f0-a321-7ac4c3f77401"><con:settings/><con:config><script>import org.apache.http.HttpResponse
import org.apache.http.HttpEntity;
import org.apache.http.client.methods.HttpGet
import org.apache.http.util.EntityUtils
import groovy.util.XmlSlurper
import com.soapui.scripts

log.info '-'*80 + '\n'
log.info 'Test Step Name: ' + context.testCase.getTestStepAt(context.getCurrentStepIndex()).getLabel() + '\n'

def project = context.testCase.testSuite.project;
key = project.getPropertyValue('oauth_consumer_key')
secret = project.getPropertyValue('oauth_consumer_secret')
token = project.getPropertyValue('token')
token_secret = project.getPropertyValue('token_secret')
recordId = project.getPropertyValue('recordId')
urlBase = 'http://' + project.getPropertyValue('host') + ':' + project.getPropertyValue('port') + '/'
def url = urlBase + 'records/' + recordId + '/carenets/'
HttpGet request = new HttpGet(url);
HttpResponse response = new scripts().executeGET(key, secret, token, token_secret, request)
log.info 'Response: '+ response + '\n'
HttpEntity entity = response.getEntity()
def out = EntityUtils.toString(entity)
log.info 'Response Out: ' + out + '\n'
def list = new XmlSlurper().parseText(out)
def carenetId = list.Carenet[0].@id
log.info 'Carenet Id: ' + carenetId + '\n'
project.setPropertyValue('carenetId', carenetId.toString());

log.info '-'*80 + '\n'
</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="b8f4d9f3-c153-4455-97f8-a012c42d2add" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="carenetApps" searchProperties="true"><con:settings/><con:testStep type="groovy" name="carenet_apps_list" id="d09d736b-13f2-4c9e-a658-d601ff63d259"><con:settings/><con:config><script>import org.apache.http.HttpResponse
import org.apache.http.HttpEntity;
import org.apache.http.client.methods.HttpGet
import org.apache.http.util.EntityUtils;
import com.soapui.scripts

log.info '-'*80 + '\n'
log.info 'Test Step Name: ' + context.testCase.getTestStepAt(context.getCurrentStepIndex()).getLabel() + '\n'

def project = context.testCase.testSuite.project;
key = project.getPropertyValue('oauth_consumer_key')
secret = project.getPropertyValue('oauth_consumer_secret')
token = project.getPropertyValue('token')
token_secret = project.getPropertyValue('token_secret')
carenetId = project.getPropertyValue('carenetId')

urlBase = 'http://' + project.getPropertyValue('host') + ':' + project.getPropertyValue('port') + '/'
def url = urlBase + 'carenets/' + carenetId + '/apps/'
HttpGet request = new HttpGet(url);
HttpResponse response = new scripts().executeGET(key, secret, token, token_secret, request)
log.info 'Response: ' + response + '\n'
HttpEntity entity = response.getEntity()
def out = EntityUtils.toString(entity)
log.info 'Response Out: ' + out + '\n'

log.info '-'*80 + '\n'
</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="6911fd73-731b-4d3f-8e6e-966df1c200c5" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="genericList" searchProperties="true"><con:settings/><con:testStep type="groovy" name="generic_list_allergies" id="22253e26-8cbe-45c2-baaa-96acfde73870"><con:settings/><con:config><script>import org.apache.http.HttpResponse
import org.apache.http.HttpEntity
import org.apache.http.client.methods.HttpGet
import org.apache.http.util.EntityUtils
import com.soapui.scripts

log.info '-'*80 + '\n'
log.info 'Test Step Name: ' + context.testCase.getTestStepAt(context.getCurrentStepIndex()).getLabel() + '\n'

def project = context.testCase.testSuite.project;
key = project.getPropertyValue('oauth_consumer_key')
secret = project.getPropertyValue('oauth_consumer_secret')
token = project.getPropertyValue('token')
token_secret = project.getPropertyValue('token_secret')
//recordId = project.getPropertyValue('recordId')
recordId = 'acb427ee-d770-4541-92cc-0a552914ac56'
urlBase = 'http://' + project.getPropertyValue('host') + ':' + project.getPropertyValue('port') + '/'
def url = urlBase + 'records/' + recordId + '/reports/Allergy/?limit=100&amp;order_by=severity_title&amp;offset=0&amp;response_format=application%2Fxml'
HttpGet request = new HttpGet(url);
HttpResponse response = new scripts().execute(key, secret, token, token_secret, request)
log.info 'Response: ' + response + '\n'
HttpEntity entity = response.getEntity()
def out = EntityUtils.toString(entity)
log.info 'Response Out: ' + out + '\n'

log.info '-'*80 + '\n'
</script></con:config></con:testStep><con:testStep type="groovy" name="generic_list_AllergyExclusion" id="65c1ffab-cead-4c95-a3d2-e9a0feebb32b"><con:settings/><con:config><script>import org.apache.http.HttpResponse
import org.apache.http.HttpEntity;
import org.apache.http.client.methods.HttpGet
import org.apache.http.util.EntityUtils
import com.soapui.scripts

log.info '-'*80 + '\n'
log.info 'Test Step Name: ' + context.testCase.getTestStepAt(context.getCurrentStepIndex()).getLabel() + '\n'

def project = context.testCase.testSuite.project;
key = project.getPropertyValue('oauth_consumer_key')
secret = project.getPropertyValue('oauth_consumer_secret')
token = project.getPropertyValue('token')
token_secret = project.getPropertyValue('token_secret')
recordId = project.getPropertyValue('recordId')
urlBase = 'http://' + project.getPropertyValue('host') + ':' + project.getPropertyValue('port') + '/'
def url = urlBase + 'records/' + recordId + '/reports/AllergyExclusion/?status=active&amp;response_format=application%2Fxml'
def request = new HttpGet(url)
HttpResponse response = new scripts().executeGET(key, secret, token, token_secret, request)
log.info 'Response: ' + response + '\n'
HttpEntity entity = response.getEntity()
def out = EntityUtils.toString(entity)
log.info 'Response Out: ' + out + '\n'

log.info '-'*80 + '\n'</script></con:config></con:testStep><con:testStep type="groovy" name="generic_list_LabResult" id="1cff4845-030e-4258-80c7-5dd6ba0dda88"><con:settings/><con:config><script>import org.apache.http.HttpResponse
import org.apache.http.HttpEntity;
import org.apache.http.client.methods.HttpGet
import org.apache.http.util.EntityUtils;
import java.util.Date
import java.text.SimpleDateFormat
import java.net.URLEncoder
import com.soapui.scripts

log.info '-'*80 + '\n'
log.info 'Test Step Name: ' + context.testCase.getTestStepAt(context.getCurrentStepIndex()).getLabel() + '\n'

def project = context.testCase.testSuite.project;
key = project.getPropertyValue('oauth_consumer_key')
secret = project.getPropertyValue('oauth_consumer_secret')
token = project.getPropertyValue('token')
token_secret = project.getPropertyValue('token_secret')
recordId = project.getPropertyValue('recordId')
urlBase = 'http://' + project.getPropertyValue('host') + ':' + project.getPropertyValue('port') + '/'

//the value for query params are given here
TimeZone tz = TimeZone.getTimeZone("UTC");
SimpleDateFormat df = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss");
//df.setTimeZone(tz);
String endDate = df.format(new Date()) + 'Z'
df2 = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss");
//df2.setTimeZone(tz);
String oldDate = "2005-01-01T00:00:00"  
Date date = df2.parse(oldDate)
String startDate = df2.format(date) + 'Z'
log.info 'Start Date: ' + startDate + '\n'
log.info 'End Date: '+ endDate + '\n'
String dateRange = 'collected_at'
String limit = '15'
String orderBy = 'collected_at'
String offset = '0'
String dateRangeEncoded = '%2A' + URLEncoder.encode(startDate)+ '%2A' + URLEncoder.encode(endDate)
String query = 'date_range=' + dateRange + dateRangeEncoded  + '&amp;' + 'limit=' + limit + '&amp;' + 'order_by=' + orderBy + '&amp;' + 'offset=' + offset + '&amp;response_format='+URLEncoder.encode('application/xml')

log.info 'Query: ' + query + '\n'
def url = urlBase + 'records/' + recordId + '/reports/LabResult/' + '?' + query
HttpGet request = new HttpGet(url);
HttpResponse response = new scripts().executeGET(key, secret, token, token_secret, request)
log.info 'Response: ' + response + '\n'
HttpEntity entity = response.getEntity()
def out = EntityUtils.toString(entity)
log.info 'Response Out: ' + out + '\n'

log.info '-'*80 + '\n'</script></con:config></con:testStep><con:properties/></con:testCase><con:properties><con:property><con:name>host</con:name><con:value>localhost</con:value></con:property><con:property><con:name>port</con:name><con:value>8000</con:value></con:property><con:property><con:name>oauth_consumer_key</con:name><con:value>chrome</con:value></con:property><con:property><con:name>oauth_consumer_secret</con:name><con:value>chrome</con:value></con:property><con:property><con:name>token</con:name><con:value>O8JhR9i4isvNjlwJEXjl</con:value></con:property><con:property><con:name>token_secret</con:name><con:value>bG5hgV8xT5qyULubQgsL</con:value></con:property><con:property><con:name>account_id</con:name><con:value>johnsmith%40indivo.org</con:value></con:property><con:property><con:name>recordId</con:name><con:value>86cd07a3-8885-48a6-930f-66d279968f40</con:value></con:property><con:property><con:name>carenetId</con:name><con:value>e3e60472-c84b-41ff-a646-ef9b86d6f127</con:value></con:property></con:properties><con:setupScript>//The below groovy script step is to capture the soapUI log area.
// "soapUI log" can be replaced with http log, jetty log, script log, error log etc based on the need.
def logArea = com.eviware.soapui.SoapUI.logMonitor.getLogArea( "script log" );
if( logArea !=null )
   {
      def model = logArea.model
      if( model.size > 0 )            
         model.clear()      
      
   }</con:setupScript><con:tearDownScript>//The below groovy script step is to capture the soapUI log area.
// "soapUI log" can be replaced with http log, jetty log, script log, error log etc based on the need.
def logArea = com.eviware.soapui.SoapUI.logMonitor.getLogArea( "script log" );
//Below two lines of groovy script is to get the project directory, we will be saving the soapUI log contents on a file in that directory.
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context) 
def projectPath = groovyUtils.projectPath 
//log.info(projectPath)
def logFile = new File(projectPath + "/soapUI-Logs-to-file.txt")
//log.info(logFile)
//This is the first line in the soapUI log file.
logFile.write("soapUI Logs In a file.\r\n")
   if( logArea !=null )
   {
      def model = logArea.model
      if( model.size > 0 )            
         for( c in 0..(model.size-1) )         
           logFile.append(model.getElementAt( c ))       
      
   }</con:tearDownScript></con:testSuite><con:testSuite id="fb909410-1770-48be-ada5-5e349d3bd424" name="Account"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="71c4d0d2-4957-4a35-a034-26e8682a6a8f" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Login" searchProperties="true"><con:settings/><con:testStep type="groovy" name="session_create" id="ff48dcf0-7bfa-4eeb-8520-cb558eaa4ea2"><con:settings/><con:config><script>import org.apache.http.HttpResponse
import org.apache.http.HttpEntity;
import org.apache.http.client.methods.HttpPost
import org.apache.http.impl.client.DefaultHttpClient
import org.apache.http.util.EntityUtils;
import org.apache.commons.httpclient.NameValuePair
import org.apache.http.message.BasicNameValuePair
import org.apache.http.client.entity.UrlEncodedFormEntity
import java.util.ArrayList
import java.net.URLDecoder
import com.soapui.scripts

log.info '-'*80 + '\n'	
log.info 'Test Step Name: ' + context.testCase.getTestStepAt(context.getCurrentStepIndex()).getLabel() + '\n'	
def project = context.testCase.testSuite.project
def suite = context.testCase.testSuite
key = project.getPropertyValue('oauth_consumer_key')
secret = project.getPropertyValue('oauth_consumer_secret')
//key='sampleadmin_key'
//secret='sampleadmin_secret'
urlBase = 'http://' + project.getPropertyValue('host') + ':' + project.getPropertyValue('port') + '/'
url = urlBase + 'oauth/internal/session_create'
HttpPost request = new HttpPost(url);
ArrayList&lt;NameValuePair>  postParameters = new ArrayList&lt;NameValuePair>();
postParameters.add(new BasicNameValuePair("username", "jsmith"));
postParameters.add(new BasicNameValuePair("password", "password.example"));

request.setEntity(new UrlEncodedFormEntity(postParameters));

HttpResponse response = new scripts().executeNoOAuth(key, secret, request)
HttpEntity entity = response.getEntity()
String responseString = EntityUtils.toString(entity, "UTF-8")
log.info 'Response: ' + responseString
def map = [:]
def data = responseString
data.split("&amp;").each {param ->
     	def nameAndValue = param.split("=")
     	map[nameAndValue[0]] = nameAndValue[1]
	}
token = map.get('oauth_token')
token_secret = map.get('oauth_token_secret')
account_id = map.get('account_id')
//	log.info('token:'+token)
//	log.info('token secret:'+token_secret)
//	log.info('account id:'+ account_id)
project.setPropertyValue("token", token)
project.setPropertyValue("token_secret", token_secret)
project.setPropertyValue("account_id", URLDecoder.decode(account_id, 'utf-8'))
log.info '-'*80 + '\n'	</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="e000d141-19c6-4cad-924c-8bb0df9ce754" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="account_search_email" searchProperties="true"><con:settings/><con:testStep type="groovy" name="account_search_email" id="fcf8a78a-66ab-4a39-92a8-d24852f6f53b"><con:settings/><con:config><script>import org.apache.http.client.methods.HttpGet
import org.apache.http.HttpResponse
import org.apache.http.HttpEntity
import org.apache.http.util.EntityUtils
import com.soapui.scripts

log.info '-'*80 + '\n'
log.info 'Test Step Name: ' + context.testCase.getTestStepAt(context.getCurrentStepIndex()).getLabel() + '\n'

def project = context.testCase.testSuite.project;
//key = project.getPropertyValue('oauth_consumer_key')
//secret = project.getPropertyValue('oauth_consumer_secret')
key = 'sampleadmin_key'
secret = 'sampleadmin_secret'
token = project.getPropertyValue('token')
token_secret = project.getPropertyValue('token_secret')
urlBase = 'http://' + project.getPropertyValue('host') + ':' + project.getPropertyValue('port') + '/'
def url = urlBase + 'accounts/search' + '?contact_email=johnsmith@example.org'
//def url = urlBase + 'accounts/search' + '?fullname=john'
log.info url
def request = new HttpGet(url)
def response = new scripts().executeNoOAuth(key, secret, request)

log.info 'Response: ' + response + '\n'
HttpEntity entity = response.getEntity()
def out = EntityUtils.toString(entity)
log.info 'Response String: ' + out + '\n'

log.info '-'*80 + '\n'</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="d90b956e-624d-45ad-b8be-f6fea16edc7d" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Account_Creation" searchProperties="true" disabled="true"><con:settings/><con:testStep type="groovy" name="account_create" id="62247e60-474f-401b-8958-095a950a2580"><con:settings/><con:config><script>import org.apache.http.client.methods.HttpPost
import org.apache.http.HttpResponse
import org.apache.http.HttpEntity
import org.apache.http.util.EntityUtils
import org.apache.commons.httpclient.NameValuePair
import org.apache.http.message.BasicNameValuePair
import org.apache.http.client.entity.UrlEncodedFormEntity
import java.util.ArrayList
import com.soapui.scripts

log.info '-'*80 + '\n'
log.info 'Test Step Name: ' + context.testCase.getTestStepAt(context.getCurrentStepIndex()).getLabel() + '\n'

def project = context.testCase.testSuite.project;
key = project.getPropertyValue('oauth_consumer_key')
secret = project.getPropertyValue('oauth_consumer_secret')
//token = project.getPropertyValue('token')
//token_secret = project.getPropertyValue('token_secret')
urlBase = 'http://' + project.getPropertyValue('host') + ':' + project.getPropertyValue('port') + '/'
def url = urlBase + 'accounts/'
def request = new HttpPost(url)
ArrayList&lt;NameValuePair>  postParameters = new ArrayList&lt;NameValuePair>();
postParameters.add(new BasicNameValuePair("account_id", "test1@indivo.org"));
postParameters.add(new BasicNameValuePair("contact_email", "test1@gmail.com"));
postParameters.add(new BasicNameValuePair("full_name", "Sudhakaran Test1"));
postParameters.add(new BasicNameValuePair("primary_secret_p", "1"));
postParameters.add(new BasicNameValuePair("secondary_secret_p ", "1"));

request.setEntity(new UrlEncodedFormEntity(postParameters));
def response = new scripts().executeNoOAuth(key, secret, request)
//def response = new scripts().execute(key, secret, token, token_secret, request)

log.info 'Response: ' + response + '\n'
HttpEntity entity = response.getEntity()
def out = EntityUtils.toString(entity)
log.info 'Response String: ' + out + '\n'

log.info '-'*80 + '\n'</script></con:config></con:testStep><con:testStep type="groovy" name="check-secrets" id="bae6211d-c4e2-4dd6-96a3-2d5217680993"><con:settings/><con:config><script>import org.apache.http.client.methods.HttpGet
import org.apache.http.HttpResponse
import org.apache.http.HttpEntity
import org.apache.http.util.EntityUtils
import org.apache.commons.httpclient.NameValuePair
import org.apache.http.message.BasicNameValuePair
import org.apache.http.client.entity.UrlEncodedFormEntity

import com.soapui.scripts

log.info '-'*80 + '\n'
log.info 'Test Step Name: ' + context.testCase.getTestStepAt(context.getCurrentStepIndex()).getLabel() + '\n'

def project = context.testCase.testSuite.project;
key = project.getPropertyValue('oauth_consumer_key')
secret = project.getPropertyValue('oauth_consumer_secret')
//token = project.getPropertyValue('token')
//token_secret = project.getPropertyValue('token_secret')
urlBase = 'http://' + project.getPropertyValue('host') + ':' + project.getPropertyValue('port') + '/'
//please get account email and primary secret from database
def accEmail = 'test1@indivo.org'
def primarySecret = 'ekXirWNhIXcYayxy'
def url = urlBase + 'accounts/' + accEmail + '/' + 'check-secrets' + '/' + primarySecret + '?secondary_secret=' + ''
def request = new HttpGet(url)

def response = new scripts().executeNoOAuth(key, secret, request)

log.info 'Response: ' + response + '\n'
HttpEntity entity = response.getEntity()
def out = EntityUtils.toString(entity)
log.info 'Response String: ' + out + '\n'

log.info '-'*80 + '\n'</script></con:config></con:testStep><con:testStep type="groovy" name="account_initialize" id="d9972528-2185-43a9-ab82-f1943252828a"><con:settings/><con:config><script>import org.apache.http.client.methods.HttpPost
import org.apache.http.HttpResponse
import org.apache.http.HttpEntity
import org.apache.http.util.EntityUtils
import org.apache.commons.httpclient.NameValuePair
import org.apache.http.message.BasicNameValuePair
import org.apache.http.client.entity.UrlEncodedFormEntity
import java.util.ArrayList
import com.soapui.scripts

log.info '-'*80 + '\n'
log.info 'Test Step Name: ' + context.testCase.getTestStepAt(context.getCurrentStepIndex()).getLabel() + '\n'

def project = context.testCase.testSuite.project;
key = project.getPropertyValue('oauth_consumer_key')
secret = project.getPropertyValue('oauth_consumer_secret')
//token = project.getPropertyValue('token')
//token_secret = project.getPropertyValue('token_secret')
urlBase = 'http://' + project.getPropertyValue('host') + ':' + project.getPropertyValue('port') + '/'
//please get account email and primary secret from database
def accEmail = 'test1@indivo.org'
def primarySecret = 'UoYDYahsgbauFvWo'
def url = urlBase + 'accounts/' + accEmail + '/' + 'initialize' + '/' + primarySecret
def request = new HttpPost(url)
ArrayList&lt;NameValuePair>  postParameters = new ArrayList&lt;NameValuePair>();
postParameters.add(new BasicNameValuePair("secondary_secret", ""))


request.setEntity(new UrlEncodedFormEntity(postParameters));
def response = new scripts().executeNoOAuth(key, secret, request)

log.info 'Response: ' + response + '\n'
HttpEntity entity = response.getEntity()
def out = EntityUtils.toString(entity)
log.info 'Response String: ' + out + '\n'

log.info '-'*80 + '\n'</script></con:config></con:testStep><con:testStep type="groovy" name="account_authsystem_add" id="37745bf9-9f71-454b-be69-7e1c382ec20e"><con:settings/><con:config><script>import org.apache.http.client.methods.HttpPost
import org.apache.http.HttpResponse
import org.apache.http.HttpEntity
import org.apache.http.util.EntityUtils
import org.apache.commons.httpclient.NameValuePair
import org.apache.http.message.BasicNameValuePair
import org.apache.http.client.entity.UrlEncodedFormEntity
import java.util.ArrayList
import com.soapui.scripts

log.info '-'*80 + '\n'
log.info 'Test Step Name: ' + context.testCase.getTestStepAt(context.getCurrentStepIndex()).getLabel() + '\n'

def project = context.testCase.testSuite.project;
key = project.getPropertyValue('oauth_consumer_key')
secret = project.getPropertyValue('oauth_consumer_secret')
//token = project.getPropertyValue('token')
//token_secret = project.getPropertyValue('token_secret')
urlBase = 'http://' + project.getPropertyValue('host') + ':' + project.getPropertyValue('port') + '/'
//please get account email from database
def accEmail = 'test1@indivo.org'
def url = urlBase + 'accounts/' + accEmail + '/' + 'authsystems/' 
def request = new HttpPost(url)
ArrayList&lt;NameValuePair>  postParameters = new ArrayList&lt;NameValuePair>();
postParameters.add(new BasicNameValuePair("username", "test1"))
postParameters.add(new BasicNameValuePair("password", "password.example"))
postParameters.add(new BasicNameValuePair("system", "password"))


request.setEntity(new UrlEncodedFormEntity(postParameters));
def response = new scripts().executeNoOAuth(key, secret, request)

log.info 'Response: ' + response + '\n'
HttpEntity entity = response.getEntity()
def out = EntityUtils.toString(entity)
log.info 'Response String: ' + out + '\n'

log.info '-'*80 + '\n'</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="dbad9d80-4a9d-464c-b1b2-a01f87eca4a4" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="PrimarySecret" searchProperties="true" disabled="true"><con:settings/><con:testStep type="groovy" name="account_primary_secret" id="67841280-9123-43a4-a3d4-2eab7372746c"><con:settings/><con:config><script>import org.apache.http.client.methods.HttpGet
import org.apache.http.HttpResponse
import org.apache.http.HttpEntity
import org.apache.http.util.EntityUtils
import org.apache.commons.httpclient.NameValuePair
import org.apache.http.message.BasicNameValuePair
import org.apache.http.client.entity.UrlEncodedFormEntity

import com.soapui.scripts

log.info '-'*80 + '\n'
log.info 'Test Step Name: ' + context.testCase.getTestStepAt(context.getCurrentStepIndex()).getLabel() + '\n'

def project = context.testCase.testSuite.project;
key = project.getPropertyValue('oauth_consumer_key')
secret = project.getPropertyValue('oauth_consumer_secret')
//token = project.getPropertyValue('token')
//token_secret = project.getPropertyValue('token_secret')
urlBase = 'http://' + project.getPropertyValue('host') + ':' + project.getPropertyValue('port') + '/'
//please get account email and primary secret from database
def accEmail = 'jsmith@indivo.org'
def url = urlBase + 'accounts/' + accEmail + '/' + 'primary-secret' 
def request = new HttpGet(url)

def response = new scripts().executeNoOAuth(key, secret, request)

log.info 'Response: ' + response + '\n'
HttpEntity entity = response.getEntity()
def out = EntityUtils.toString(entity)
log.info 'Response String: ' + out + '\n'

log.info '-'*80 + '\n'
</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="ecef7376-9033-47f2-8516-3a5e90831b0c" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="SecondarySecret" searchProperties="true" disabled="true"><con:settings/><con:testStep type="groovy" name="account_secret" id="0ff4a73b-0ba3-4f38-b527-3c3305813ac1"><con:settings/><con:config><script>import org.apache.http.client.methods.HttpGet
import org.apache.http.HttpResponse
import org.apache.http.HttpEntity
import org.apache.http.util.EntityUtils
import org.apache.commons.httpclient.NameValuePair
import org.apache.http.message.BasicNameValuePair
import org.apache.http.client.entity.UrlEncodedFormEntity

import com.soapui.scripts

log.info '-'*80 + '\n'
log.info 'Test Step Name: ' + context.testCase.getTestStepAt(context.getCurrentStepIndex()).getLabel() + '\n'

def project = context.testCase.testSuite.project;
key = project.getPropertyValue('oauth_consumer_key')
secret = project.getPropertyValue('oauth_consumer_secret')
//token = project.getPropertyValue('token')
//token_secret = project.getPropertyValue('token_secret')
urlBase = 'http://' + project.getPropertyValue('host') + ':' + project.getPropertyValue('port') + '/'
//please get account email and primary secret from database
def accEmail = 'sudhatest1@indivo.org'
def url = urlBase + 'accounts/' + accEmail + '/' + 'secret' 
def request = new HttpGet(url)

def response = new scripts().executeNoOAuth(key, secret, request)

log.info 'Response: ' + response + '\n'
HttpEntity entity = response.getEntity()
def out = EntityUtils.toString(entity)
log.info 'Response String: ' + out + '\n'

log.info '-'*80 + '\n'
</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="e7f900b2-345c-4138-af7e-0d1e1a79a271" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="SecretResend" searchProperties="true"><con:settings/><con:testStep type="groovy" name="account_resend_secret" id="85b142f9-a369-453a-8c39-6c19add9b3dd"><con:settings/><con:config><script>import org.apache.http.client.methods.HttpPost
import org.apache.http.HttpResponse
import org.apache.http.HttpEntity
import org.apache.http.util.EntityUtils
import org.apache.commons.httpclient.NameValuePair
import org.apache.http.message.BasicNameValuePair
import org.apache.http.client.entity.UrlEncodedFormEntity
import org.apache.commons.httpclient.NameValuePair
import org.apache.http.message.BasicNameValuePair
import java.util.ArrayList

import com.soapui.scripts

log.info '-'*80 + '\n'
log.info 'Test Step Name: ' + context.testCase.getTestStepAt(context.getCurrentStepIndex()).getLabel() + '\n'

def project = context.testCase.testSuite.project;
key = project.getPropertyValue('oauth_consumer_key')
secret = project.getPropertyValue('oauth_consumer_secret')
//token = project.getPropertyValue('token')
//token_secret = project.getPropertyValue('token_secret')
accountId = project.getPropertyValue('account_id')
urlBase = 'http://' + project.getPropertyValue('host') + ':' + project.getPropertyValue('port') + '/'
//please get account email and primary secret from database
def accEmail = 'sudhatest1@indivo.org'
def url = urlBase + 'accounts/' + accountId + '/' + 'secret-resend' 
def request = new HttpPost(url)

def response = new scripts().executeNoOAuth(key, secret, request)

log.info 'Response: ' + response + '\n'
HttpEntity entity = response.getEntity()
def out = EntityUtils.toString(entity)
log.info 'Response String: ' + out + '\n'

log.info '-'*80 + '\n'
</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="fbfa1224-6cb0-4cfb-811e-b11682266d03" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="AccountInfo" searchProperties="true"><con:settings/><con:testStep type="groovy" name="account_info" id="c60ed3aa-89d6-427b-a117-5de709cc0818"><con:settings/><con:config><script>import org.apache.http.HttpResponse
import org.apache.http.HttpEntity;
import org.apache.http.client.methods.HttpGet
import org.apache.http.util.EntityUtils;
import com.soapui.scripts

log.info '-'*80 + '\n'
log.info 'Test Step Name: ' + context.testCase.getTestStepAt(context.getCurrentStepIndex()).getLabel() + '\n'

def project = context.testCase.testSuite.project
def suite = context.testCase.testSuite

key = project.getPropertyValue('oauth_consumer_key')
secret = project.getPropertyValue('oauth_consumer_secret')
token = project.getPropertyValue('token')
token_secret = project.getPropertyValue('token_secret')
accountId = project.getPropertyValue('account_id')
urlBase = 'http://' + project.getPropertyValue('host') + ':' + project.getPropertyValue('port') + '/'

def url = urlBase + 'accounts/' + accountId
HttpGet request = new HttpGet(url);

HttpResponse response = new scripts().execute(key, secret, token, token_secret, request)
log.info 'Response: ' + response + '\n'
HttpEntity entity = response.getEntity()
def out = EntityUtils.toString(entity)
log.info 'Response String: ' + out + '\n'

log.info '-'*80 + '\n'</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="9996a045-1b70-47a6-9b7e-ea7c05e23b09" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="SetState" searchProperties="true" disabled="true"><con:settings/><con:testStep type="groovy" name="account_set_state" id="3fc35f5a-0983-48ca-86c2-42e409fe57c0"><con:settings/><con:config><script>import org.apache.http.HttpResponse
import org.apache.http.HttpEntity;
import org.apache.http.client.methods.HttpPost
import org.apache.http.util.EntityUtils
import org.apache.commons.httpclient.NameValuePair
import org.apache.http.message.BasicNameValuePair
import org.apache.http.client.entity.UrlEncodedFormEntity
import com.soapui.scripts
import java.util.ArrayList

log.info '-'*80 + '\n'
log.info 'Test Step Name: ' + context.testCase.getTestStepAt(context.getCurrentStepIndex()).getLabel() + '\n'
	
def project = context.testCase.testSuite.project;
def suite = context.testCase.testSuite
//key = project.getPropertyValue('oauth_consumer_key')
//secret = project.getPropertyValue('oauth_consumer_secret')
key = 'sampleadmin_key'
secret = 'sampleadmin_secret'
token = suite.getPropertyValue('token')
token_secret = suite.getPropertyValue('token_secret')
accountId = suite.getPropertyValue('account_id')
urlBase = 'http://' + project.getPropertyValue('host') + ':' + project.getPropertyValue('port') + '/'
url = urlBase +'accounts/' + accountId + '/set-state'
	
def request = new HttpPost(url)
ArrayList&lt;NameValuePair>  postParameters = new ArrayList&lt;NameValuePair>();
postParameters.add(new BasicNameValuePair("state", "active"));

request.setEntity(new UrlEncodedFormEntity(postParameters));	
HttpResponse response = new scripts().executeNoOAuth(key, secret, request)

log.info 'Response: ' + response + '\n'
HttpEntity entity = response.getEntity()
def out = EntityUtils.toString(entity)
log.info 'Response String: ' + out + '\n' 

log.info '-'*80 + '\n'</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="473b7909-f142-43b8-aaee-369a440f4698" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="InfoSet" searchProperties="true" disabled="true"><con:settings/><con:testStep type="groovy" name="account_info_set" id="9ec9b821-04eb-456c-b9ef-53ed1fda6f26"><con:settings/><con:config><script>import org.apache.http.HttpResponse
import org.apache.http.HttpEntity;
import org.apache.http.client.methods.HttpPost
import org.apache.http.util.EntityUtils
import org.apache.commons.httpclient.NameValuePair
import org.apache.http.message.BasicNameValuePair
import org.apache.http.client.entity.UrlEncodedFormEntity
import com.soapui.scripts
import java.util.ArrayList

log.info '-'*80 + '\n'
log.info 'Test Step Name: ' + context.testCase.getTestStepAt(context.getCurrentStepIndex()).getLabel() + '\n'
	
def project = context.testCase.testSuite.project;
def suite = context.testCase.testSuite
//key = project.getPropertyValue('oauth_consumer_key')
//secret = project.getPropertyValue('oauth_consumer_secret')
key = 'sampleadmin_key'
secret = 'sampleadmin_secret'
//token = suite.getPropertyValue('token')
//token_secret = suite.getPropertyValue('token_secret')
accountId = suite.getPropertyValue('account_id')
urlBase = 'http://' + project.getPropertyValue('host') + ':' + project.getPropertyValue('port') + '/'
url = urlBase +'accounts/' + accountId + '/info-set'
	
def request = new HttpPost(url)
ArrayList&lt;NameValuePair>  postParameters = new ArrayList&lt;NameValuePair>()
postParameters.add(new BasicNameValuePair("contact_email", "test1@gmail.com"))
postParameters.add(new BasicNameValuePair("full_name ", "Sudha Test1"))

request.setEntity(new UrlEncodedFormEntity(postParameters))	
HttpResponse response = new scripts().executeNoOAuth(key, secret, request)

log.info 'Response: ' + response + '\n'
HttpEntity entity = response.getEntity()
def out = EntityUtils.toString(entity)
log.info 'Response String: ' + out + '\n' 

log.info '-'*80 + '\n'</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="1654174a-ad6d-424e-a0e1-3a939cc32a4e" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Reset" searchProperties="true" disabled="true"><con:settings/><con:testStep type="groovy" name="account_reset" id="00b2f822-a7bf-4f74-855f-c22bf81e33c8"><con:settings/><con:config><script>import org.apache.http.HttpResponse
import org.apache.http.HttpEntity;
import org.apache.http.client.methods.HttpPost
import org.apache.http.util.EntityUtils
import org.apache.commons.httpclient.NameValuePair
import org.apache.http.message.BasicNameValuePair
import org.apache.http.client.entity.UrlEncodedFormEntity
import com.soapui.scripts
import java.util.ArrayList

log.info '-'*80 + '\n'
log.info 'Test Step Name: ' + context.testCase.getTestStepAt(context.getCurrentStepIndex()).getLabel() + '\n'
	
def project = context.testCase.testSuite.project;
def suite = context.testCase.testSuite
//key = project.getPropertyValue('oauth_consumer_key')
//secret = project.getPropertyValue('oauth_consumer_secret')
key = 'sampleadmin_key'
secret = 'sampleadmin_secret'
token = suite.getPropertyValue('token')
token_secret = suite.getPropertyValue('token_secret')
accountId = suite.getPropertyValue('account_id')
urlBase = 'http://' + project.getPropertyValue('host') + ':' + project.getPropertyValue('port') + '/'
url = urlBase +'accounts/' + accountId + '/reset'
	
def request = new HttpPost(url)

HttpResponse response = new scripts().executeNoOAuth(key, secret, request)

log.info 'Response: ' + response + '\n'
HttpEntity entity = response.getEntity()
def out = EntityUtils.toString(entity)
log.info 'Response String: ' + out + '\n' 

log.info '-'*80 + '\n'</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="aaf8f8e0-39f9-4cb7-bc78-fc41ee028b13" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Inbox" searchProperties="true"><con:settings/><con:testStep type="groovy" name="account_inbox" id="806266f1-aa22-467f-9a4d-207729578df2"><con:settings/><con:config><script>import org.apache.http.HttpResponse
import org.apache.http.HttpEntity;
import org.apache.http.client.methods.HttpGet
import org.apache.http.util.EntityUtils
import groovy.util.XmlSlurper
import com.soapui.scripts

log.info '-'*80 + '\n'
log.info 'Test Step Name: ' + context.testCase.getTestStepAt(context.getCurrentStepIndex()).getLabel() + '\n'
	
def project = context.testCase.testSuite.project
def suite = context.testCase.testSuite
key = project.getPropertyValue('oauth_consumer_key')
secret = project.getPropertyValue('oauth_consumer_secret')
token = project.getPropertyValue('token')
token_secret = project.getPropertyValue('token_secret')
accountId = project.getPropertyValue('account_id')
urlBase = 'http://' + project.getPropertyValue('host') + ':' + project.getPropertyValue('port') + '/'
url = urlBase +'accounts/' + accountId + '/inbox/'
	
HttpGet request = new HttpGet(url)	
HttpResponse response = new scripts().execute(key, secret, token, token_secret, request)

log.info 'Response: ' + response + '\n'
HttpEntity entity = response.getEntity()
def out = EntityUtils.toString(entity)
log.info 'Response String: ' + out + '\n' 
def message = new XmlSlurper().parseText(out)
def messageId = message.Message[0].'@id'
log.info 'message id: ' + messageId + '\n'
suite.setPropertyValue('messageId', messageId.toString())
log.info '-'*80 + '\n'</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="82fa07d9-f1f9-4e40-8148-417981ac75d9" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="SendMessage" searchProperties="true" disabled="true"><con:settings/><con:testStep type="groovy" name="session_create" id="59dd06c1-a2d3-45d6-999f-25368627db33" disabled="true"><con:settings/><con:config><script>import org.apache.http.HttpResponse
import org.apache.http.HttpEntity;
import org.apache.http.client.methods.HttpPost
import org.apache.http.impl.client.DefaultHttpClient
import org.apache.http.util.EntityUtils;
import org.apache.commons.httpclient.NameValuePair
import org.apache.http.message.BasicNameValuePair
import org.apache.http.client.entity.UrlEncodedFormEntity
import java.util.ArrayList
import java.net.URLDecoder
import com.soapui.scripts

log.info '-'*80 + '\n'	
log.info 'Test Step Name: ' + context.testCase.getTestStepAt(context.getCurrentStepIndex()).getLabel() + '\n'	
def project = context.testCase.testSuite.project
def suite = context.testCase.testSuite;
key = 'sampleadmin_key'
secret = 'sampleadmin_secret'
urlBase = 'http://' + project.getPropertyValue('host') + ':' + project.getPropertyValue('port') + '/'
url = urlBase + 'oauth/internal/session_create'
HttpPost request = new HttpPost(url);
ArrayList&lt;NameValuePair>  postParameters = new ArrayList&lt;NameValuePair>();
postParameters.add(new BasicNameValuePair("username", "test1"));
postParameters.add(new BasicNameValuePair("password", "password.example"));

request.setEntity(new UrlEncodedFormEntity(postParameters));

HttpResponse response = new scripts().executeNoOAuth(key, secret, request)
HttpEntity entity = response.getEntity()
String responseString = EntityUtils.toString(entity, "UTF-8")
log.info 'Response: ' + responseString
def map = [:]
def data = responseString
data.split("&amp;").each {param ->
     	def nameAndValue = param.split("=")
     	map[nameAndValue[0]] = nameAndValue[1]
	}
token = map.get('oauth_token')
token_secret = map.get('oauth_token_secret')
account_id = map.get('account_id')
//	log.info('token:'+token)
//	log.info('token secret:'+token_secret)
//	log.info('account id:'+ account_id)
suite.setPropertyValue("token", token)
suite.setPropertyValue("token_secret", token_secret)
suite.setPropertyValue("account_id", URLDecoder.decode(account_id, 'utf-8'))
log.info '-'*80 + '\n'	</script></con:config></con:testStep><con:testStep type="groovy" name="account_send_message" id="9ac90f30-a412-4dd9-aaac-011ae5529e3d"><con:settings/><con:config><script>import org.apache.http.HttpResponse
import org.apache.http.HttpEntity;
import org.apache.http.client.methods.HttpPost
import org.apache.http.util.EntityUtils
import org.apache.commons.httpclient.NameValuePair
import org.apache.http.message.BasicNameValuePair
import org.apache.http.client.entity.UrlEncodedFormEntity
import com.soapui.scripts
import java.util.ArrayList

log.info '-'*80 + '\n'
log.info 'Test Step Name: ' + context.testCase.getTestStepAt(context.getCurrentStepIndex()).getLabel() + '\n'
	
def project = context.testCase.testSuite.project;
def suite = context.testCase.testSuite
//key = project.getPropertyValue('oauth_consumer_key')
//secret = project.getPropertyValue('oauth_consumer_secret')
key = 'sampleadmin_key'
secret = 'sampleadmin_secret'
//token = suite.getPropertyValue('token')
//token_secret = suite.getPropertyValue('token_secret')
accountId = project.getPropertyValue('account_id')
accountToSendId = project.getPropertyValue('account_id')
urlBase = 'http://' + project.getPropertyValue('host') + ':' + project.getPropertyValue('port') + '/'
url = urlBase +'accounts/' + accountToSendId+ '/inbox/'
	
def request = new HttpPost(url)
ArrayList&lt;NameValuePair>  postParameters = new ArrayList&lt;NameValuePair>();
postParameters.add(new BasicNameValuePair("severity", "low"));
postParameters.add(new BasicNameValuePair("message_id", "msg2"));
postParameters.add(new BasicNameValuePair("body_type", "plaintext"));
postParameters.add(new BasicNameValuePair("subject", "Hello there test message"));
postParameters.add(new BasicNameValuePair("body", "Hey this is a test message for you from a test account"));

request.setEntity(new UrlEncodedFormEntity(postParameters));	
HttpResponse response = new scripts().executeNoOAuth(key, secret, request)

log.info 'Response: ' + response + '\n'
HttpEntity entity = response.getEntity()
def out = EntityUtils.toString(entity)
log.info 'Response String: ' + out + '\n' 

log.info '-'*80 + '\n'</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="5ffca495-a9ec-46b6-b11d-5dbc358c1a0a" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="MessageById" searchProperties="true" disabled="true"><con:settings/><con:testStep type="groovy" name="account_inbox_message" id="45f2f195-6bd8-4882-b9cb-c0713435b974" disabled="true"><con:settings/><con:config><script>import org.apache.http.HttpResponse
import org.apache.http.HttpEntity;
import org.apache.http.client.methods.HttpGet
import org.apache.http.util.EntityUtils
import groovy.util.XmlSlurper
import com.soapui.scripts

log.info '-'*80 + '\n'
log.info 'Test Step Name: ' + context.testCase.getTestStepAt(context.getCurrentStepIndex()).getLabel() + '\n'
	
def project = context.testCase.testSuite.project;
def suite = context.testCase.testSuite
key = project.getPropertyValue('oauth_consumer_key')
secret = project.getPropertyValue('oauth_consumer_secret')
token = project.getPropertyValue('token')
token_secret = project.getPropertyValue('token_secret')
accountId = project.getPropertyValue('account_id')
//messageId = suite.getPropertyValue('messageId')
messageId = '24300e4f-6f70-446b-b43d-a12f6cb2b4a9'
urlBase = 'http://' + project.getPropertyValue('host') + ':' + project.getPropertyValue('port') + '/'
url = urlBase +'accounts/' + accountId + '/inbox/' + messageId
	
HttpGet request = new HttpGet(url)	
HttpResponse response = new scripts().execute(key, secret, token, token_secret, request)

log.info 'Response: ' + response + '\n'
HttpEntity entity = response.getEntity()
def out = EntityUtils.toString(entity)
log.info 'Response String: ' + out + '\n' 
log.info '-'*80 + '\n'</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="80fe73f0-43b6-4a14-b985-3c858d6e7d90" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="MessageArchive" searchProperties="true" disabled="true"><con:settings/><con:testStep type="groovy" name="account_message_archive" id="9f02c222-6c5b-44a2-9fa7-645b8970dcbd" disabled="true"><con:settings/><con:config><script>import org.apache.http.HttpResponse
import org.apache.http.HttpEntity;
import org.apache.http.client.methods.HttpPost
import org.apache.http.util.EntityUtils
import groovy.util.XmlSlurper
import com.soapui.scripts

log.info '-'*80 + '\n'
log.info 'Test Step Name: ' + context.testCase.getTestStepAt(context.getCurrentStepIndex()).getLabel() + '\n'
	
def project = context.testCase.testSuite.project;
def suite = context.testCase.testSuite
key = project.getPropertyValue('oauth_consumer_key')
secret = project.getPropertyValue('oauth_consumer_secret')
token = suite.getPropertyValue('token')
token_secret = suite.getPropertyValue('token_secret')
accountId = suite.getPropertyValue('account_id')
messageId = suite.getPropertyValue('messageId')
urlBase = 'http://' + project.getPropertyValue('host') + ':' + project.getPropertyValue('port') + '/'
url = urlBase +'accounts/' + accountId + '/inbox/' + messageId + '/archive'
	
HttpPost request = new HttpPost(url)	
HttpResponse response = new scripts().execute(key, secret, token, token_secret, request)

log.info 'Response: ' + response + '\n'
HttpEntity entity = response.getEntity()
def out = EntityUtils.toString(entity)
log.info 'Response String: ' + out + '\n' 
log.info '-'*80 + '\n'</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="80f27c80-22f9-4d4f-9a8f-78f15df05bbd" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Records" searchProperties="true"><con:settings/><con:testStep type="groovy" name="record_list" id="8453d438-c6eb-4f95-ae56-8af283de556c"><con:settings/><con:config><script>import org.apache.http.HttpResponse
import org.apache.http.HttpEntity;
import org.apache.http.client.methods.HttpGet
import org.apache.http.util.EntityUtils;
import groovy.util.XmlSlurper
import com.soapui.scripts

log.info '-'*80 + '\n'
log.info 'Test Step Name: ' + context.testCase.getTestStepAt(context.getCurrentStepIndex()).getLabel() + '\n'

def project = context.testCase.testSuite.project
def suite = context.testCase.testSuite

key = project.getPropertyValue('oauth_consumer_key')
secret = project.getPropertyValue('oauth_consumer_secret')
token = project.getPropertyValue('token')
token_secret = project.getPropertyValue('token_secret')
accountId = project.getPropertyValue('account_id')
urlBase = 'http://' + project.getPropertyValue('host') + ':' + project.getPropertyValue('port') + '/'
url = urlBase + 'accounts/' + accountId + '/records/'
HttpGet request = new HttpGet(url)
HttpResponse response = new scripts().executeGET(key, secret, token, token_secret, request)
log.info 'Response: ' + response + '\n'
HttpEntity entity = response.getEntity()
def out = EntityUtils.toString(entity)
log.info 'Response Out: ' + out + '\n'
def records = new XmlSlurper().parseText(out)
def recordId = records.Record[0].@id
log.info "recordId: " + recordId + '\n'
//suite.setPropertyValue('recordId', recordId.toString())
project.setPropertyValue('recordId', recordId.toString())

log.info '-'*80 + '\n'</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="763a893e-a007-4006-88a0-794beadb2b39" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Permissions" searchProperties="true"><con:settings/><con:testStep type="groovy" name="account_permissions" id="27d7909b-f0a3-4518-8691-9a87419d2c59"><con:settings/><con:config><script>import org.apache.http.HttpResponse
import org.apache.http.HttpEntity;
import org.apache.http.client.methods.HttpGet
import org.apache.http.util.EntityUtils;
import groovy.util.XmlSlurper
import com.soapui.scripts

log.info '-'*80 + '\n'
log.info 'Test Step Name: ' + context.testCase.getTestStepAt(context.getCurrentStepIndex()).getLabel() + '\n'

def project = context.testCase.testSuite.project
def suite = context.testCase.testSuite

key = project.getPropertyValue('oauth_consumer_key')
secret = project.getPropertyValue('oauth_consumer_secret')
token = project.getPropertyValue('token')
token_secret = project.getPropertyValue('token_secret')
accountId = project.getPropertyValue('account_id')
urlBase = 'http://' + project.getPropertyValue('host') + ':' + project.getPropertyValue('port') + '/'
url = urlBase + 'accounts/' + accountId + '/permissions/'
HttpGet request = new HttpGet(url)
HttpResponse response = new scripts().execute(key, secret, token, token_secret, request)
log.info 'Response: ' + response + '\n'
HttpEntity entity = response.getEntity()
def out = EntityUtils.toString(entity)
log.info 'Response Out: ' + out + '\n'
log.info '-'*80 + '\n'</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="cf825cbc-3b30-4b75-ac84-f3083177050c" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Notifications" searchProperties="true"><con:settings/><con:testStep type="groovy" name="account_notifications" id="d484b0a2-7ba8-4367-a8c8-c7f0340d2027"><con:settings/><con:config><script>import org.apache.http.client.methods.HttpGet
import org.apache.http.HttpResponse
import org.apache.http.HttpEntity
import org.apache.http.util.EntityUtils
import com.soapui.scripts

log.info '-'*80 + '\n'
log.info 'Test Step Name: ' + context.testCase.getTestStepAt(context.getCurrentStepIndex()).getLabel() + '\n'

def project = context.testCase.testSuite.project;
def suite = context.testCase.testSuite;
key = project.getPropertyValue('oauth_consumer_key')
secret = project.getPropertyValue('oauth_consumer_secret')
token = project.getPropertyValue('token')
token_secret = project.getPropertyValue('token_secret')
accountId = project.getPropertyValue('account_Id')
urlBase = 'http://' + project.getPropertyValue('host') + ':' + project.getPropertyValue('port') + '/'
url = urlBase + 'accounts/' + accountId + '/notifications/'

def request = new HttpGet(url)
def response = new scripts().executeGET(key, secret, token, token_secret, request)	

log.info 'Response: ' + response + '\n'
HttpEntity entity = response.getEntity()
def out = EntityUtils.toString(entity)
log.info 'Response String: ' + out + '\n'

log.info '-'*80 + '\n'</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="a5af2457-8192-45ad-811b-22716117c1c3" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ForgotPassword" searchProperties="true"><con:settings/><con:testStep type="groovy" name="account_forgot_password" id="8f44ae66-a788-41a9-baad-7de6468d2ddb" disabled="true"><con:settings/><con:config><script>import org.apache.http.client.methods.HttpPost
import org.apache.http.HttpResponse
import org.apache.http.HttpEntity
import org.apache.http.util.EntityUtils
import com.soapui.scripts

log.info '-'*80 + '\n'
log.info 'Test Step Name: ' + context.testCase.getTestStepAt(context.getCurrentStepIndex()).getLabel() + '\n'

def project = context.testCase.testSuite.project;
def suite = context.testCase.testSuite;
//key = project.getPropertyValue('oauth_consumer_key')
//secret = project.getPropertyValue('oauth_consumer_secret')
key = 'sampleadmin_key'
secret = 'sampleadmin_secret'
token = suite.getPropertyValue('token')
token_secret = suite.getPropertyValue('token_secret')
accountId = suite.getPropertyValue('account_Id')
urlBase = 'http://' + project.getPropertyValue('host') + ':' + project.getPropertyValue('port') + '/'
url = urlBase + 'accounts/' + accountId + '/forgot-password'

def request = new HttpPost(url)
def response = new scripts().executeNoOAuth(key, secret, request)	

log.info 'Response: ' + response + '\n'
HttpEntity entity = response.getEntity()
def out = EntityUtils.toString(entity)
log.info 'Response String: ' + out + '\n'

log.info '-'*80 + '\n'</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="4c30a9c2-107a-400b-81b8-d4a7893d29d2" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="SetUserName" searchProperties="true" disabled="true"><con:settings/><con:testStep type="groovy" name="account_username_set" id="ce1603cd-60d2-47d3-9889-595706cf935a"><con:settings/><con:config><script>import org.apache.http.client.methods.HttpPost
import org.apache.http.HttpResponse
import org.apache.http.HttpEntity
import org.apache.http.util.EntityUtils
import java.util.ArrayList
import org.apache.commons.httpclient.NameValuePair
import org.apache.http.message.BasicNameValuePair
import org.apache.http.client.entity.UrlEncodedFormEntity
import com.soapui.scripts

log.info '-'*80 + '\n'
log.info 'Test Step Name: ' + context.testCase.getTestStepAt(context.getCurrentStepIndex()).getLabel() + '\n'

def project = context.testCase.testSuite.project;
def suite = context.testCase.testSuite;
//key = project.getPropertyValue('oauth_consumer_key')
//secret = project.getPropertyValue('oauth_consumer_secret')
key = 'sampleadmin_key'
secret = 'sampleadmin_secret'
token = suite.getPropertyValue('token')
token_secret = suite.getPropertyValue('token_secret')
accountId = suite.getPropertyValue('account_Id')
urlBase = 'http://' + project.getPropertyValue('host') + ':' + project.getPropertyValue('port') + '/'
url = urlBase + 'accounts/' + accountId + '/authsystems/password/set-username'

def request = new HttpPost(url)
request.setHeader("Content-Type" ,"application/x-www-form-urlencoded")
ArrayList&lt;NameValuePair>  postParameters = new ArrayList&lt;NameValuePair>()
postParameters.add(new BasicNameValuePair("username", "test1"))

request.setEntity(new UrlEncodedFormEntity(postParameters));
def response = new scripts().executeNoOAuth(key, secret, request)	

log.info 'Response: ' + response + '\n'
HttpEntity entity = response.getEntity()
def out = EntityUtils.toString(entity)
log.info 'Response String: ' + out + '\n'

log.info '-'*80 + '\n'</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="bef488fa-6063-4871-a21d-04614248d954" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="PasswordSet" searchProperties="true" disabled="true"><con:settings/><con:testStep type="groovy" name="account_password_set" id="1a129acb-f41a-4206-b72b-c53334f306b1"><con:settings/><con:config><script>import org.apache.http.client.methods.HttpPost
import org.apache.http.HttpResponse
import org.apache.http.HttpEntity
import org.apache.http.util.EntityUtils
import java.util.ArrayList
import org.apache.commons.httpclient.NameValuePair
import org.apache.http.message.BasicNameValuePair
import org.apache.http.client.entity.UrlEncodedFormEntity
import com.soapui.scripts

log.info '-'*80 + '\n'
log.info 'Test Step Name: ' + context.testCase.getTestStepAt(context.getCurrentStepIndex()).getLabel() + '\n'

def project = context.testCase.testSuite.project;
def suite = context.testCase.testSuite;
//key = project.getPropertyValue('oauth_consumer_key')
//secret = project.getPropertyValue('oauth_consumer_secret')
key = 'sampleadmin_key'
secret = 'sampleadmin_secret'
token = suite.getPropertyValue('token')
token_secret = suite.getPropertyValue('token_secret')
accountId = suite.getPropertyValue('account_Id')
urlBase = 'http://' + project.getPropertyValue('host') + ':' + project.getPropertyValue('port') + '/'
url = urlBase + 'accounts/' + accountId + '/authsystems/password/set'

def request = new HttpPost(url)
request.setHeader("Content-Type" ,"application/x-www-form-urlencoded")
ArrayList&lt;NameValuePair>  postParameters = new ArrayList&lt;NameValuePair>()
postParameters.add(new BasicNameValuePair("password", "sudha\$1win"))

request.setEntity(new UrlEncodedFormEntity(postParameters));
def response = new scripts().executeNoOAuth(key, secret, request)	

log.info 'Response: ' + response + '\n'
HttpEntity entity = response.getEntity()
def out = EntityUtils.toString(entity)
log.info 'Response String: ' + out + '\n'

log.info '-'*80 + '\n'</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="7cbe9628-1aba-4664-884a-4859fc773185" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="PasswordChange" searchProperties="true" disabled="true"><con:settings/><con:testStep type="groovy" name="account_password_change" id="1247f522-14b6-4aba-93d1-258389fe5f22"><con:settings/><con:config><script>import org.apache.http.client.methods.HttpPost
import org.apache.http.HttpResponse
import org.apache.http.HttpEntity
import org.apache.http.util.EntityUtils
import java.util.ArrayList
import org.apache.commons.httpclient.NameValuePair
import org.apache.http.message.BasicNameValuePair
import org.apache.http.client.entity.UrlEncodedFormEntity
import com.soapui.scripts

log.info '-'*80 + '\n'
log.info 'Test Step Name: ' + context.testCase.getTestStepAt(context.getCurrentStepIndex()).getLabel() + '\n'

def project = context.testCase.testSuite.project;
def suite = context.testCase.testSuite;
key = project.getPropertyValue('oauth_consumer_key')
secret = project.getPropertyValue('oauth_consumer_secret')
//key = 'sampleadmin_key'
//secret = 'sampleadmin_secret'
token = suite.getPropertyValue('token')
token_secret = suite.getPropertyValue('token_secret')
accountId = suite.getPropertyValue('account_Id')
urlBase = 'http://' + project.getPropertyValue('host') + ':' + project.getPropertyValue('port') + '/'
url = urlBase + 'accounts/' + accountId + '/authsystems/password/change'

def request = new HttpPost(url)
request.setHeader("Content-Type" ,"application/x-www-form-urlencoded")
ArrayList&lt;NameValuePair>  postParameters = new ArrayList&lt;NameValuePair>()
postParameters.add(new BasicNameValuePair("new", "password.example"))
postParameters.add(new BasicNameValuePair("old", "sudha\$1win"))

request.setEntity(new UrlEncodedFormEntity(postParameters));
def response = new scripts().execute(key, secret, token, token_secret, request)	

log.info 'Response: ' + response + '\n'
HttpEntity entity = response.getEntity()
def out = EntityUtils.toString(entity)
log.info 'Response String: ' + out + '\n'

log.info '-'*80 + '\n'</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="bbe63e58-780e-4dd9-8fe0-24c81af42619" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="UserPreferences" searchProperties="true" disabled="true"><con:settings/><con:testStep type="groovy" name="get_user_preferences" id="84123fc1-9cbe-4b7d-99ca-56b6c5203807"><con:settings/><con:config><script>import org.apache.http.HttpResponse
import org.apache.http.HttpEntity;
import org.apache.http.client.methods.HttpGet
import org.apache.http.util.EntityUtils;
import com.soapui.scripts

log.info '-'*80 + '\n'
log.info 'Test Step Name: ' + context.testCase.getTestStepAt(context.getCurrentStepIndex()).getLabel() + '\n'

def project = context.testCase.testSuite.project
def suite = context.testCase.testSuite

key = project.getPropertyValue('oauth_consumer_key')
secret = project.getPropertyValue('oauth_consumer_secret')
token = project.getPropertyValue('token')
token_secret = project.getPropertyValue('token_secret')
accountId = project.getPropertyValue('account_id')
urlBase = 'http://' + project.getPropertyValue('host') + ':' + project.getPropertyValue('port') + '/'
//pha mailids - allergies@apps.indivo.org, labs@apps.indivo.org, medications@apps.indivo.org, problems@apps.indivo.org
pha = 'problems@apps.indivo.org'
def url = urlBase + 'accounts/' + accountId + '/apps/' + pha + '/preferences'
HttpGet request = new HttpGet(url);

HttpResponse response = new scripts().execute(key, secret, token, token_secret, request)
log.info 'Response: ' + response + '\n'
HttpEntity entity = response.getEntity()
def out = EntityUtils.toString(entity)
log.info 'Response String: ' + out + '\n'

log.info '-'*80 + '\n'</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="78147b93-fdbf-4150-8516-baf60cf074e0" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ConnectCredentials" searchProperties="true" disabled="true"><con:settings/><con:testStep type="groovy" name="get_connect_credentials" id="35bffac5-49f7-4981-b120-8d335bbc341b"><con:settings/><con:config><script>import org.apache.http.HttpResponse
import org.apache.http.HttpEntity;
import org.apache.http.client.methods.HttpPost
import org.apache.http.util.EntityUtils;
import org.apache.commons.httpclient.NameValuePair
import org.apache.http.message.BasicNameValuePair
import org.apache.http.client.entity.UrlEncodedFormEntity
import java.util.ArrayList
import com.soapui.scripts

log.info '-'*80 + '\n'
log.info 'Test Step Name: ' + context.testCase.getTestStepAt(context.getCurrentStepIndex()).getLabel() + '\n'

def project = context.testCase.testSuite.project
def suite = context.testCase.testSuite

key = project.getPropertyValue('oauth_consumer_key')
secret = project.getPropertyValue('oauth_consumer_secret')
token = project.getPropertyValue('token')
token_secret = project.getPropertyValue('token_secret')
accountId = project.getPropertyValue('account_id')
recordId = project.getPropertyValue('recordId')
urlBase = 'http://' + project.getPropertyValue('host') + ':' + project.getPropertyValue('port') + '/'
//pha mailids - allergies@apps.indivo.org, labs@apps.indivo.org, medications@apps.indivo.org, problems@apps.indivo.org
pha = 'problems@apps.indivo.org'
def url = urlBase + 'accounts/' + accountId + '/apps/' + pha + '/connect_credentials'
HttpPost request = new HttpPost(url)
ArrayList&lt;NameValuePair>  postParameters = new ArrayList&lt;NameValuePair>();
postParameters.add(new BasicNameValuePair("record_id", recordId));

request.setEntity(new UrlEncodedFormEntity(postParameters));

HttpResponse response = new scripts().execute(key, secret, token, token_secret, request)
log.info 'Response: ' + response + '\n'
HttpEntity entity = response.getEntity()
def out = EntityUtils.toString(entity)
log.info 'Response String: ' + out + '\n'

log.info '-'*80 + '\n'</script></con:config></con:testStep><con:properties/></con:testCase><con:properties><con:property><con:name>token</con:name><con:value>jlU8j43wxrnSrrVvSSp4</con:value></con:property><con:property><con:name>token_secret</con:name><con:value>brMAm3ImFt7TX0ZfyTr1</con:value></con:property><con:property><con:name>account_id</con:name><con:value>test1@gmail.com</con:value></con:property><con:property><con:name>messageId</con:name><con:value>24300e4f-6f70-446b-b43d-a12f6cb2b4a9</con:value></con:property></con:properties><con:setupScript>//The below groovy script step is to capture the soapUI log area.
// "soapUI log" can be replaced with http log, jetty log, script log, error log etc based on the need.
def logArea = com.eviware.soapui.SoapUI.logMonitor.getLogArea( "script log" );
if( logArea !=null )
{
    def model = logArea.model
    if( model.size > 0 )
        model.clear()

}</con:setupScript><con:tearDownScript>//The below groovy script step is to capture the soapUI log area.
// "soapUI log" can be replaced with http log, jetty log, script log, error log etc based on the need.
def logArea = com.eviware.soapui.SoapUI.logMonitor.getLogArea( "script log" );
//Below two lines of groovy script is to get the project directory, we will be saving the soapUI log contents on a file in that directory.
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context) 
def projectPath = groovyUtils.projectPath 
//log.info(projectPath)
def logFile = new File(projectPath + "/soapUI-Logs-to-file.txt")
//log.info(logFile)
//This is the first line in the soapUI log file.
logFile.write("soapUI Logs In a file.\r\n")
   if( logArea !=null )
   {
      def model = logArea.model
      if( model.size > 0 )            
         for( c in 0..(model.size-1) )         
           logFile.append(model.getElementAt( c ))       
      
   }</con:tearDownScript></con:testSuite><con:testSuite id="4c88ee5b-fa60-4249-9b12-39647d1a7eb3" name="Apps"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="0b6147b5-ca3d-477d-82a5-96eb16c9b5cc" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Apps" searchProperties="true"><con:settings/><con:testStep type="groovy" name="all_phas" id="2c9b5d31-188c-415e-b522-ccb8230ce40e"><con:settings/><con:config><script>import org.apache.http.HttpResponse
import org.apache.http.HttpEntity;
import org.apache.http.client.methods.HttpGet
import org.apache.http.util.EntityUtils;
import com.soapui.scripts

log.info '-'*80 + '\n'
log.info 'Test Step Name: ' + context.testCase.getTestStepAt(context.getCurrentStepIndex()).getLabel() + '\n'

def project = context.testCase.testSuite.project;
key = project.getPropertyValue('oauth_consumer_key')
secret = project.getPropertyValue('oauth_consumer_secret')
token = project.getPropertyValue('token')
token_secret = project.getPropertyValue('token_secret')
recordId = project.getPropertyValue('recordId')
urlBase = 'http://' + project.getPropertyValue('host') + ':' + project.getPropertyValue('port') + '/'
def url = urlBase + 'apps/'
HttpGet request = new HttpGet(url);
HttpResponse response = new scripts().execute(key, secret, token, token_secret, request)
log.info 'Response: ' + response + '\n'
HttpEntity entity = response.getEntity()
def out = EntityUtils.toString(entity)
log.info 'Response String: ' + out + '\n'

log.info '-'*80 + '\n'
</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="e9612d7e-aa5c-41fd-b5d1-0765576cf27a" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Manifests" searchProperties="true"><con:settings/><con:testStep type="groovy" name="all_manifests" id="cc07d389-854c-4ba0-a638-d56b928ce667"><con:settings/><con:config><script>import org.apache.http.HttpResponse
import org.apache.http.HttpEntity;
import org.apache.http.client.methods.HttpGet
import org.apache.http.util.EntityUtils;
import com.soapui.scripts

log.info '-'*80 + '\n'
log.info 'Test Step Name: ' + context.testCase.getTestStepAt(context.getCurrentStepIndex()).getLabel() + '\n'

def project = context.testCase.testSuite.project;
key = project.getPropertyValue('oauth_consumer_key')
secret = project.getPropertyValue('oauth_consumer_secret')
token = project.getPropertyValue('token')
token_secret = project.getPropertyValue('token_secret')
recordId = project.getPropertyValue('recordId')
urlBase = 'http://' + project.getPropertyValue('host') + ':' + project.getPropertyValue('port') + '/'
def url = urlBase + 'apps/manifests/'
HttpGet request = new HttpGet(url);
HttpResponse response = new scripts().execute(key, secret, token, token_secret, request)
log.info 'Response: ' + response + '\n'
HttpEntity entity = response.getEntity()
def out = EntityUtils.toString(entity)
log.info 'Response String: ' + out + '\n'

log.info '-'*80 + '\n'
</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="42fe0388-0244-4dc6-b4e4-765c8f93ccad" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Pha" searchProperties="true"><con:settings/><con:testStep type="groovy" name="pha" id="4092adb4-8259-4d56-964d-69073e2997e8"><con:settings/><con:config><script>import org.apache.http.HttpResponse
import org.apache.http.HttpEntity;
import org.apache.http.client.methods.HttpGet
import org.apache.http.util.EntityUtils;
import com.soapui.scripts

log.info '-'*80 + '\n'
log.info 'Test Step Name: ' + context.testCase.getTestStepAt(context.getCurrentStepIndex()).getLabel() + '\n'

def project = context.testCase.testSuite.project;
key = project.getPropertyValue('oauth_consumer_key')
secret = project.getPropertyValue('oauth_consumer_secret')
token = project.getPropertyValue('token')
token_secret = project.getPropertyValue('token_secret')
recordId = project.getPropertyValue('recordId')
urlBase = 'http://' + project.getPropertyValue('host') + ':' + project.getPropertyValue('port') + '/'
pha = 'labs@apps.indivo.org'
def url = urlBase + 'apps/' + pha
HttpGet request = new HttpGet(url);
HttpResponse response = new scripts().execute(key, secret, token, token_secret, request)
log.info 'Response: ' + response + '\n'
HttpEntity entity = response.getEntity()
def out = EntityUtils.toString(entity)
log.info 'Response String: ' + out + '\n'

log.info '-'*80 + '\n'
</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="a8f650df-78d7-439a-9d34-d34ffa97c057" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="AppDocuments" searchProperties="true"><con:settings/><con:testStep type="groovy" name="app_document_list" id="4d04a090-a29d-424f-84fa-0aacfe298695"><con:settings/><con:config><script>import org.apache.http.HttpResponse
import org.apache.http.HttpEntity;
import org.apache.http.client.methods.HttpGet
import org.apache.http.util.EntityUtils;
import com.soapui.scripts

log.info '-'*80 + '\n'
log.info 'Test Step Name: ' + context.testCase.getTestStepAt(context.getCurrentStepIndex()).getLabel() + '\n'

def project = context.testCase.testSuite.project;
//key = project.getPropertyValue('oauth_consumer_key')
//secret = project.getPropertyValue('oauth_consumer_secret')
//token = project.getPropertyValue('token')
//token_secret = project.getPropertyValue('token_secret')
key = 'labs@apps.indivo.org'
secret = 'labs'
urlBase = 'http://' + project.getPropertyValue('host') + ':' + project.getPropertyValue('port') + '/' 
pha = 'labs@apps.indivo.org'
def url = urlBase + 'apps/' + pha +'/documents/' + '?status=active&amp;type=model&amp;limit=25&amp;offset=0&amp;order_by=createdAt'
HttpGet request = new HttpGet(url);
HttpResponse response = new scripts().executeNoOAuth(key, secret, request)
log.info 'Response: ' + response + '\n'
HttpEntity entity = response.getEntity()
def out = EntityUtils.toString(entity)
log.info 'Response String: ' + out + '\n'

log.info '-'*80 + '\n'
</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="5c60e191-7bc0-480d-bb10-eebe27b4d615" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="AppManifest" searchProperties="true"><con:settings/><con:testStep type="groovy" name="app_manifest" id="33893bc9-6707-4ce8-aadf-3cb64629a7e0"><con:settings/><con:config><script>import org.apache.http.HttpResponse
import org.apache.http.HttpEntity;
import org.apache.http.client.methods.HttpGet
import org.apache.http.util.EntityUtils;
import com.soapui.scripts

log.info '-'*80 + '\n'
log.info 'Test Step Name: ' + context.testCase.getTestStepAt(context.getCurrentStepIndex()).getLabel() + '\n'

def project = context.testCase.testSuite.project;
key = project.getPropertyValue('oauth_consumer_key')
secret = project.getPropertyValue('oauth_consumer_secret')
token = project.getPropertyValue('token')
token_secret = project.getPropertyValue('token_secret')
recordId = project.getPropertyValue('recordId')
urlBase = 'http://' + project.getPropertyValue('host') + ':' + project.getPropertyValue('port') + '/'
pha = 'labs@apps.indivo.org'
def url = urlBase + 'apps/' + pha + '/manifest'
HttpGet request = new HttpGet(url);
HttpResponse response = new scripts().execute(key, secret, token, token_secret, request)
log.info 'Response: ' + response + '\n'
HttpEntity entity = response.getEntity()
def out = EntityUtils.toString(entity)
log.info 'Response String: ' + out + '\n'

log.info '-'*80 + '\n'
</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="6e904e4d-25f6-48ab-8677-42e8fa97f94d" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="AppRecordList" searchProperties="true"><con:settings/><con:testStep type="groovy" name="app_record_list" id="32797c83-921c-430a-be09-a15fccb567a9"><con:settings/><con:config><script>import org.apache.http.HttpResponse
import org.apache.http.HttpEntity;
import org.apache.http.client.methods.HttpGet
import org.apache.http.util.EntityUtils;
import com.soapui.scripts

log.info '-'*80 + '\n'
log.info 'Test Step Name: ' + context.testCase.getTestStepAt(context.getCurrentStepIndex()).getLabel() + '\n'

def project = context.testCase.testSuite.project;
key = project.getPropertyValue('oauth_consumer_key')
secret = project.getPropertyValue('oauth_consumer_secret')
token = project.getPropertyValue('token')
token_secret = project.getPropertyValue('token_secret')
recordId = project.getPropertyValue('recordId')
urlBase = 'http://' + project.getPropertyValue('host') + ':' + project.getPropertyValue('port') + '/'
pha = 'labs@apps.indivo.org'
def url = urlBase + 'apps/' + pha + '/records/'
HttpGet request = new HttpGet(url);
HttpResponse response = new scripts().execute(key, secret, token, token_secret, request)
log.info 'Response: ' + response + '\n'
HttpEntity entity = response.getEntity()
def out = EntityUtils.toString(entity)
log.info 'Response String: ' + out + '\n'

log.info '-'*80 + '\n'
</script></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:testSuite id="68ba3787-5109-4562-9f2e-5a8c9f043dd7" name="SMART"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="0d10c6d4-e9f2-44b9-9d26-f335bbf92bea" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Capabilities" searchProperties="true"><con:settings/><con:testStep type="groovy" name="smart_capabilities" id="eef15330-8fd6-4600-a4ae-28722b74db25"><con:settings/><con:config><script>import org.apache.http.HttpResponse
import org.apache.http.HttpEntity;
import org.apache.http.client.methods.HttpGet
import org.apache.http.util.EntityUtils;
import com.soapui.scripts

log.info '-'*80 + '\n'
log.info 'Test Step Name: ' + context.testCase.getTestStepAt(context.getCurrentStepIndex()).getLabel() + '\n'

def project = context.testCase.testSuite.project;
key = project.getPropertyValue('oauth_consumer_key')
secret = project.getPropertyValue('oauth_consumer_secret')
token = project.getPropertyValue('token')
token_secret = project.getPropertyValue('token_secret')
recordId = project.getPropertyValue('recordId')
urlBase = 'http://' + project.getPropertyValue('host') + ':' + project.getPropertyValue('port') + '/'
//pha = 'labs@apps.indivo.org'
def url = urlBase + 'capabilities/'
HttpGet request = new HttpGet(url);
HttpResponse response = new scripts().execute(key, secret, token, token_secret, request)
log.info 'Response: ' + response + '\n'
HttpEntity entity = response.getEntity()
def out = EntityUtils.toString(entity)
log.info 'Response String: ' + out + '\n'

log.info '-'*80 + '\n'
</script></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:testSuite id="aeb0c1a4-f5f1-45ae-851a-5ed7929e2c72" name="Records"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="61ca531a-b617-470a-9811-f522584f48c7" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Search" searchProperties="true"><con:settings/><con:testStep type="groovy" name="record_search" id="bd819ab6-0cef-44e3-b5de-3254d8602079"><con:settings/><con:config><script>import org.apache.http.client.methods.HttpGet
import org.apache.http.HttpResponse
import org.apache.http.HttpEntity
import org.apache.http.util.EntityUtils
import com.soapui.scripts

log.info '-'*80 + '\n'
log.info 'Test Step Name: ' + context.testCase.getTestStepAt(context.getCurrentStepIndex()).getLabel() + '\n'

def project = context.testCase.testSuite.project;
//key = project.getPropertyValue('oauth_consumer_key')
//secret = project.getPropertyValue('oauth_consumer_secret')
key = 'sampleadmin_key'
secret = 'sampleadmin_secret'
token = project.getPropertyValue('token')
token_secret = project.getPropertyValue('token_secret')
urlBase = 'http://' + project.getPropertyValue('host') + ':' + project.getPropertyValue('port') + '/'
name = 'john'
def url = urlBase + 'records/search' + '?label=' + name
log.info url
def request = new HttpGet(url)
def response = new scripts().executeNoOAuth(key, secret, request)

log.info 'Response: ' + response + '\n'
HttpEntity entity = response.getEntity()
def out = EntityUtils.toString(entity)
log.info 'Response String: ' + out + '\n'

log.info '-'*80 + '\n'</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="00f799bf-52ce-423e-888b-0a6caac91bdc" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="RecordInfo" searchProperties="true"><con:settings/><con:testStep type="groovy" name="record" id="258169db-d978-4684-9a44-cc22f0ef63b9"><con:settings/><con:config><script>import org.apache.http.HttpResponse
import org.apache.http.HttpEntity;
import org.apache.http.client.methods.HttpGet
import org.apache.http.util.EntityUtils
import groovy.util.XmlSlurper
import com.soapui.scripts

log.info '-'*80 + '\n'
log.info 'Test Step Name: ' + context.testCase.getTestStepAt(context.getCurrentStepIndex()).getLabel() + '\n'
	
def project = context.testCase.testSuite.project
def suite = context.testCase.testSuite
key = project.getPropertyValue('oauth_consumer_key')
secret = project.getPropertyValue('oauth_consumer_secret')
token = project.getPropertyValue('token')
token_secret = project.getPropertyValue('token_secret')
accountId = project.getPropertyValue('account_id')
//recordId = project.getPropertyValue('recordId')
recordId = '015d694c-aae2-4118-b6fb-0c8531f85ffe'
urlBase = 'http://' + project.getPropertyValue('host') + ':' + project.getPropertyValue('port') + '/'
url = urlBase +'records/' + recordId
	
HttpGet request = new HttpGet(url)	
HttpResponse response = new scripts().execute(key, secret, token, token_secret, request)

log.info 'Response: ' + response + '\n'
HttpEntity entity = response.getEntity()
def out = EntityUtils.toString(entity)
log.info 'Response String: ' + out + '\n' 
//def message = new XmlSlurper().parseText(out)
//def messageId = message.Message[0].'@id'
//log.info 'message id: ' + messageId + '\n'
//suite.setPropertyValue('messageId', messageId.toString())
log.info '-'*80 + '\n'</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="ab2f06b2-c690-4c10-9da4-2e98b266dfcb" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Phas" searchProperties="true"><con:settings/><con:testStep type="groovy" name="record_phas" id="ebd4542b-2996-42d2-8d59-f511daea1978"><con:settings/><con:config><script>import org.apache.http.HttpResponse
import org.apache.http.HttpEntity;
import org.apache.http.client.methods.HttpGet
import org.apache.http.util.EntityUtils
import groovy.util.XmlSlurper
import com.soapui.scripts

log.info '-'*80 + '\n'
log.info 'Test Step Name: ' + context.testCase.getTestStepAt(context.getCurrentStepIndex()).getLabel() + '\n'
	
def project = context.testCase.testSuite.project
def suite = context.testCase.testSuite
key = project.getPropertyValue('oauth_consumer_key')
secret = project.getPropertyValue('oauth_consumer_secret')
token = project.getPropertyValue('token')
token_secret = project.getPropertyValue('token_secret')
accountId = project.getPropertyValue('account_id')
recordId = project.getPropertyValue('recordId')
//recordId = 'd02765ea-3716-48cb-96e4-0e12caa45493'
urlBase = 'http://' + project.getPropertyValue('host') + ':' + project.getPropertyValue('port') + '/'
url = urlBase +'records/' + recordId + '/apps/'
	
HttpGet request = new HttpGet(url)	
HttpResponse response = new scripts().execute(key, secret, token, token_secret, request)

log.info 'Response: ' + response + '\n'
HttpEntity entity = response.getEntity()
def out = EntityUtils.toString(entity)
log.info 'Response String: ' + out + '\n' 
//def message = new XmlSlurper().parseText(out)
//def messageId = message.Message[0].'@id'
//log.info 'message id: ' + messageId + '\n'
//suite.setPropertyValue('messageId', messageId.toString())
log.info '-'*80 + '\n'</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="e5ebf30a-c668-44cf-a01c-7146bc57ff3e" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Allergies" searchProperties="true"><con:settings/><con:testStep type="groovy" name="smart_allergies" id="e9776fe7-bf91-4b2c-9e73-e4f1ea11e7a4"><con:settings/><con:config><script>import org.apache.http.HttpResponse
import org.apache.http.HttpEntity;
import org.apache.http.client.methods.HttpGet
import org.apache.http.util.EntityUtils
import groovy.util.XmlSlurper
import com.soapui.scripts

log.info '-'*80 + '\n'
log.info 'Test Step Name: ' + context.testCase.getTestStepAt(context.getCurrentStepIndex()).getLabel() + '\n'
	
def project = context.testCase.testSuite.project
def suite = context.testCase.testSuite
key = project.getPropertyValue('oauth_consumer_key')
secret = project.getPropertyValue('oauth_consumer_secret')
token = project.getPropertyValue('token')
token_secret = project.getPropertyValue('token_secret')
accountId = project.getPropertyValue('account_id')
recordId = project.getPropertyValue('recordId')
//recordId = 'd02765ea-3716-48cb-96e4-0e12caa45493'
urlBase = 'http://' + project.getPropertyValue('host') + ':' + project.getPropertyValue('port') + '/'
url = urlBase +'records/' + recordId + '/allergies/'
	
HttpGet request = new HttpGet(url)	
HttpResponse response = new scripts().execute(key, secret, token, token_secret, request)

log.info 'Response: ' + response + '\n'
HttpEntity entity = response.getEntity()
def out = EntityUtils.toString(entity)
log.info 'Response String: ' + out + '\n' 
//def message = new XmlSlurper().parseText(out)
//def messageId = message.Message[0].'@id'
//log.info 'message id: ' + messageId + '\n'
//suite.setPropertyValue('messageId', messageId.toString())
log.info '-'*80 + '\n'</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="13546eba-fbdc-429b-9c01-e67c10189233" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="AppInfo" searchProperties="true"><con:settings/><con:testStep type="groovy" name="record_pha" id="452c8479-cab6-4959-af51-2c19312e6687"><con:settings/><con:config><script>import org.apache.http.HttpResponse
import org.apache.http.HttpEntity;
import org.apache.http.client.methods.HttpGet
import org.apache.http.util.EntityUtils
import groovy.util.XmlSlurper
import com.soapui.scripts

log.info '-'*80 + '\n'
log.info 'Test Step Name: ' + context.testCase.getTestStepAt(context.getCurrentStepIndex()).getLabel() + '\n'
	
def project = context.testCase.testSuite.project
def suite = context.testCase.testSuite
key = project.getPropertyValue('oauth_consumer_key')
secret = project.getPropertyValue('oauth_consumer_secret')
token = project.getPropertyValue('token')
token_secret = project.getPropertyValue('token_secret')
accountId = project.getPropertyValue('account_id')
recordId = project.getPropertyValue('recordId')
//recordId = 'd02765ea-3716-48cb-96e4-0e12caa45493'
pha = 'medications@apps.indivo.org'
urlBase = 'http://' + project.getPropertyValue('host') + ':' + project.getPropertyValue('port') + '/'
url = urlBase +'records/' + recordId + '/apps/' + pha
	
HttpGet request = new HttpGet(url)	
HttpResponse response = new scripts().execute(key, secret, token, token_secret, request)

log.info 'Response: ' + response + '\n'
HttpEntity entity = response.getEntity()
def out = EntityUtils.toString(entity)
log.info 'Response String: ' + out + '\n' 
//def message = new XmlSlurper().parseText(out)
//def messageId = message.Message[0].'@id'
//log.info 'message id: ' + messageId + '\n'
//suite.setPropertyValue('messageId', messageId.toString())
log.info '-'*80 + '\n'</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="189fd95a-3dad-4265-8a6c-8d9069d3f0b3" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="EnableApp" searchProperties="true"><con:settings/><con:testStep type="groovy" name="record_pha_enable" id="487e06af-1bef-4913-b1ef-c7fd40ad1543"><con:settings/><con:config><script>import org.apache.http.HttpResponse
import org.apache.http.HttpEntity;
import org.apache.http.client.methods.HttpPut
import org.apache.http.util.EntityUtils
import groovy.util.XmlSlurper
import com.soapui.scripts

log.info '-'*80 + '\n'
log.info 'Test Step Name: ' + context.testCase.getTestStepAt(context.getCurrentStepIndex()).getLabel() + '\n'
	
def project = context.testCase.testSuite.project
def suite = context.testCase.testSuite
key = project.getPropertyValue('oauth_consumer_key')
secret = project.getPropertyValue('oauth_consumer_secret')
token = project.getPropertyValue('token')
token_secret = project.getPropertyValue('token_secret')
accountId = project.getPropertyValue('account_id')
recordId = project.getPropertyValue('recordId')
//recordId = 'd02765ea-3716-48cb-96e4-0e12caa45493'
pha = 'medications@apps.indivo.org'
urlBase = 'http://' + project.getPropertyValue('host') + ':' + project.getPropertyValue('port') + '/'
url = urlBase +'records/' + recordId + '/apps/' + pha
	
HttpPut request = new HttpPut(url)	
HttpResponse response = new scripts().execute(key, secret, token, token_secret, request)

log.info 'Response: ' + response + '\n'
HttpEntity entity = response.getEntity()
def out = EntityUtils.toString(entity)
log.info 'Response String: ' + out + '\n' 
//def message = new XmlSlurper().parseText(out)
//def messageId = message.Message[0].'@id'
//log.info 'message id: ' + messageId + '\n'
//suite.setPropertyValue('messageId', messageId.toString())
log.info '-'*80 + '\n'</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="1f96dd4b-5111-40ac-a490-a5ad8622ef46" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="AppDocsList" searchProperties="true"><con:settings/><con:testStep type="groovy" name="record_app_document_list" id="e6fccb60-e192-4c50-9c79-6734590f2387"><con:settings/><con:config><script>import org.apache.http.HttpResponse
import org.apache.http.HttpEntity;
import org.apache.http.client.methods.HttpGet
import org.apache.http.util.EntityUtils
import groovy.util.XmlSlurper
import com.soapui.scripts

log.info '-'*80 + '\n'
log.info 'Test Step Name: ' + context.testCase.getTestStepAt(context.getCurrentStepIndex()).getLabel() + '\n'
	
def project = context.testCase.testSuite.project
def suite = context.testCase.testSuite
key = project.getPropertyValue('oauth_consumer_key')
secret = project.getPropertyValue('oauth_consumer_secret')
token = project.getPropertyValue('token')
token_secret = project.getPropertyValue('token_secret')
//key = 'medications@apps.indivo.org'
//secret = 'medications'
accountId = project.getPropertyValue('account_id')
recordId = project.getPropertyValue('recordId')
//recordId = 'd02765ea-3716-48cb-96e4-0e12caa45493'
pha = 'medications@apps.indivo.org'
urlBase = 'http://' + project.getPropertyValue('host') + ':' + project.getPropertyValue('port') + '/'
url = urlBase +'records/' + recordId + '/apps/' + pha + '/documents/' + '?status=active&amp;order_by=created_at&amp;type=Models&amp;limit=100&amp;offet=0'
	
HttpGet request = new HttpGet(url)	
HttpResponse response = new scripts().execute(key, secret, token, token_secret, request)

log.info 'Response: ' + response + '\n'
HttpEntity entity = response.getEntity()
def out = EntityUtils.toString(entity)
log.info 'Response String: ' + out + '\n' 
//def message = new XmlSlurper().parseText(out)
//def messageId = message.Message[0].'@id'
//log.info 'message id: ' + messageId + '\n'
//suite.setPropertyValue('messageId', messageId.toString())
log.info '-'*80 + '\n'</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="44b03f9a-e674-4413-88fd-88ed57646579" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="RecordsDocsList" searchProperties="true"><con:settings/><con:testStep type="groovy" name="record_document_list" id="f597a910-44a1-47ae-92b1-5be56f9c38f0"><con:settings/><con:config><script><![CDATA[import org.apache.http.HttpResponse
import org.apache.http.HttpEntity;
import org.apache.http.client.methods.HttpGet
import org.apache.http.util.EntityUtils
import groovy.util.XmlSlurper
import com.soapui.scripts

log.info '-'*80 + '\n'
log.info 'Test Step Name: ' + context.testCase.getTestStepAt(context.getCurrentStepIndex()).getLabel() + '\n'
	
def project = context.testCase.testSuite.project
def suite = context.testCase.testSuite
key = project.getPropertyValue('oauth_consumer_key')
secret = project.getPropertyValue('oauth_consumer_secret')
token = project.getPropertyValue('token')
token_secret = project.getPropertyValue('token_secret')
//key = 'medications@apps.indivo.org'
//secret = 'medications'
accountId = project.getPropertyValue('account_id')
recordId = project.getPropertyValue('recordId')
//recordId = 'd02765ea-3716-48cb-96e4-0e12caa45493'
pha = 'medications@apps.indivo.org'
urlBase = 'http://' + project.getPropertyValue('host') + ':' + project.getPropertyValue('port') + '/'
//url = urlBase +'records/' + recordId + '/documents/' + '?status=active&order_by=created_at&type=Models&limit=100&offet=0'
url = urlBase +'records/' + recordId + '/documents/' + '?status=active&limit=100&offet=0'
	
HttpGet request = new HttpGet(url)	
HttpResponse response = new scripts().execute(key, secret, token, token_secret, request)

log.info 'Response: ' + response + '\n'
HttpEntity entity = response.getEntity()
def out = EntityUtils.toString(entity)
log.info 'Response String: ' + out + '\n' 
//def message = new XmlSlurper().parseText(out)
//def messageId = message.Message[0].'@id'
//log.info 'message id: ' + messageId + '\n'
//suite.setPropertyValue('messageId', messageId.toString())
log.info '-'*80 + '\n']]></script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="ac15ca4c-9001-4888-918b-7ac4a58db8ee" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="AuditRecords" searchProperties="true"><con:settings/><con:testStep type="groovy" name="audit_record_view" id="b9def58a-016c-40f9-b161-61723f8a2efc"><con:settings/><con:config><script>import org.apache.http.HttpResponse
import org.apache.http.HttpEntity;
import org.apache.http.client.methods.HttpGet
import org.apache.http.util.EntityUtils
import groovy.util.XmlSlurper
import com.soapui.scripts

log.info '-'*80 + '\n'
log.info 'Test Step Name: ' + context.testCase.getTestStepAt(context.getCurrentStepIndex()).getLabel() + '\n'
	
def project = context.testCase.testSuite.project
def suite = context.testCase.testSuite
key = project.getPropertyValue('oauth_consumer_key')
secret = project.getPropertyValue('oauth_consumer_secret')
token = project.getPropertyValue('token')
token_secret = project.getPropertyValue('token_secret')
//key = 'medications@apps.indivo.org'
//secret = 'medications'
accountId = project.getPropertyValue('account_id')
recordId = project.getPropertyValue('recordId')
//recordId = 'd02765ea-3716-48cb-96e4-0e12caa45493'
//pha = 'medications@apps.indivo.org'
urlBase = 'http://' + project.getPropertyValue('host') + ':' + project.getPropertyValue('port') + '/'
url = urlBase +'records/' + recordId + '/audits/' + '?order_by=created_at&amp;limit=100&amp;offet=0'
	
HttpGet request = new HttpGet(url)	
HttpResponse response = new scripts().execute(key, secret, token, token_secret, request)

log.info 'Response: ' + response + '\n'
HttpEntity entity = response.getEntity()
def out = EntityUtils.toString(entity)
log.info 'Response String: ' + out + '\n' 
//def message = new XmlSlurper().parseText(out)
//def messageId = message.Message[0].'@id'
//log.info 'message id: ' + messageId + '\n'
//suite.setPropertyValue('messageId', messageId.toString())
log.info '-'*80 + '\n'</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="2378df0d-f53b-4740-85d2-afc43342ff5d" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="AuditDocument" searchProperties="true"><con:settings/><con:testStep type="groovy" name="audit_document_view" id="a51f3c68-59db-4b8b-a5b4-1b497ad91616"><con:settings/><con:config><script>import org.apache.http.HttpResponse
import org.apache.http.HttpEntity;
import org.apache.http.client.methods.HttpGet
import org.apache.http.util.EntityUtils
import groovy.util.XmlSlurper
import com.soapui.scripts

log.info '-'*80 + '\n'
log.info 'Test Step Name: ' + context.testCase.getTestStepAt(context.getCurrentStepIndex()).getLabel() + '\n'
	
def project = context.testCase.testSuite.project
def suite = context.testCase.testSuite
key = project.getPropertyValue('oauth_consumer_key')
secret = project.getPropertyValue('oauth_consumer_secret')
token = project.getPropertyValue('token')
token_secret = project.getPropertyValue('token_secret')
//key = 'medications@apps.indivo.org'
//secret = 'medications'
accountId = project.getPropertyValue('account_id')
recordId = project.getPropertyValue('recordId')
//recordId = 'd02765ea-3716-48cb-96e4-0e12caa45493'
//pha = 'medications@apps.indivo.org'
docId = '4cab53ad-bd94-4efe-a3d8-35b95cfd8773'
urlBase = 'http://' + project.getPropertyValue('host') + ':' + project.getPropertyValue('port') + '/'
url = urlBase +'records/' + recordId + '/audits/' + 'documents/' + docId + '/?order_by=created_at&amp;limit=100&amp;offet=0'
	
HttpGet request = new HttpGet(url)	
HttpResponse response = new scripts().execute(key, secret, token, token_secret, request)

log.info 'Response: ' + response + '\n'
HttpEntity entity = response.getEntity()
def out = EntityUtils.toString(entity)
log.info 'Response String: ' + out + '\n' 
//def message = new XmlSlurper().parseText(out)
//def messageId = message.Message[0].'@id'
//log.info 'message id: ' + messageId + '\n'
//suite.setPropertyValue('messageId', messageId.toString())
log.info '-'*80 + '\n'</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="a20b0762-323d-4a02-853b-c50dcc4193d7" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="AuditQuery" searchProperties="true"><con:settings/><con:testStep type="groovy" name="audit_query" id="012efdaa-c953-4f44-9972-3640777fb7db"><con:settings/><con:config><script><![CDATA[import org.apache.http.HttpResponse
import org.apache.http.HttpEntity;
import org.apache.http.client.methods.HttpGet
import org.apache.http.util.EntityUtils
import groovy.util.XmlSlurper
import com.soapui.scripts

log.info '-'*80 + '\n'
log.info 'Test Step Name: ' + context.testCase.getTestStepAt(context.getCurrentStepIndex()).getLabel() + '\n'
	
def project = context.testCase.testSuite.project
def suite = context.testCase.testSuite
key = project.getPropertyValue('oauth_consumer_key')
secret = project.getPropertyValue('oauth_consumer_secret')
token = project.getPropertyValue('token')
token_secret = project.getPropertyValue('token_secret')
//key = 'medications@apps.indivo.org'
//secret = 'medications'
accountId = project.getPropertyValue('account_id')
recordId = project.getPropertyValue('recordId')
//recordId = 'd02765ea-3716-48cb-96e4-0e12caa45493'
//pha = 'medications@apps.indivo.org'
//docId = '4cab53ad-bd94-4efe-a3d8-35b95cfd8773'
urlBase = 'http://' + project.getPropertyValue('host') + ':' + project.getPropertyValue('port') + '/'
//url = urlBase +'records/' + recordId + '/audits/' + 'query/' + '?status=active&group_by=function_name&aggregate_by=count*request_date&order_by=request_date&limit=100&offset=0'
url = urlBase +'records/' + recordId + '/audits/' + 'query/' + '?status=active&order_by=request_date&limit=100&offset=0'
	
HttpGet request = new HttpGet(url)	
HttpResponse response = new scripts().execute(key, secret, token, token_secret, request)

log.info 'Response: ' + response + '\n'
HttpEntity entity = response.getEntity()
def out = EntityUtils.toString(entity)
log.info 'Response String: ' + out + '\n' 
//def message = new XmlSlurper().parseText(out)
//def messageId = message.Message[0].'@id'
//log.info 'message id: ' + messageId + '\n'
//suite.setPropertyValue('messageId', messageId.toString())
log.info '-'*80 + '\n']]></script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="dae9007e-6ffb-4250-9c0d-bb5561108058" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Demographics" searchProperties="true"><con:settings/><con:testStep type="groovy" name="read_demographics" id="8eb9b1cb-2b6d-4844-8fa0-bf24fa4240e9"><con:settings/><con:config><script>import org.apache.http.HttpResponse
import org.apache.http.HttpEntity;
import org.apache.http.client.methods.HttpGet
import org.apache.http.util.EntityUtils;
import com.soapui.scripts

log.info '-'*80 + '\n'
log.info 'Test Step Name: ' + context.testCase.getTestStepAt(context.getCurrentStepIndex()).getLabel() + '\n'

def project = context.testCase.testSuite.project;
key = project.getPropertyValue('oauth_consumer_key')
secret = project.getPropertyValue('oauth_consumer_secret')
token = project.getPropertyValue('token')
token_secret = project.getPropertyValue('token_secret')
recordId = project.getPropertyValue('recordId')
urlBase = 'http://' + project.getPropertyValue('host') + ':' + project.getPropertyValue('port') + '/'

def url = urlBase + 'records/' + recordId + '/demographics?response_format=' + 'application%2Fjson'
HttpGet request = new HttpGet(url);
HttpResponse response = new scripts().execute(key, secret, token, token_secret, request)

log.info 'Response: ' + response + '\n'
HttpEntity entity = response.getEntity()
def out = EntityUtils.toString(entity)
log.info 'Response String: ' + out + '\n'

log.info '-'*80 + '\n'</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="da1da82c-af25-47c1-a74c-cdcf5f4a73cc" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="RecordSpecificDocument" searchProperties="true"><con:settings/><con:testStep type="groovy" name="record_specific_document" id="8f5f8f9d-75e9-4644-b6e0-8f054ab16655"><con:settings/><con:config><script>import org.apache.http.HttpResponse
import org.apache.http.HttpEntity;
import org.apache.http.client.methods.HttpGet
import org.apache.http.util.EntityUtils
import groovy.util.XmlSlurper
import com.soapui.scripts

log.info '-'*80 + '\n'
log.info 'Test Step Name: ' + context.testCase.getTestStepAt(context.getCurrentStepIndex()).getLabel() + '\n'
	
def project = context.testCase.testSuite.project
def suite = context.testCase.testSuite
key = project.getPropertyValue('oauth_consumer_key')
secret = project.getPropertyValue('oauth_consumer_secret')
token = project.getPropertyValue('token')
token_secret = project.getPropertyValue('token_secret')
//key = 'medications@apps.indivo.org'
//secret = 'medications'
accountId = project.getPropertyValue('account_id')
recordId = project.getPropertyValue('recordId')
//recordId = '4cab53ad-bd94-4efe-a3d8-35b95cfd8773'
//pha = 'medications@apps.indivo.org'
docId = '38286d47-e18f-4e68-a8a9-d9835a5b464e'
urlBase = 'http://' + project.getPropertyValue('host') + ':' + project.getPropertyValue('port') + '/'
url = urlBase +'records/' + recordId + '/documents/' + docId
	
HttpGet request = new HttpGet(url)	
HttpResponse response = new scripts().execute(key, secret, token, token_secret, request)

log.info 'Response: ' + response + '\n'
HttpEntity entity = response.getEntity()
def out = EntityUtils.toString(entity)
log.info 'Response String: ' + out + '\n' 
//def message = new XmlSlurper().parseText(out)
//def messageId = message.Message[0].'@id'
//log.info 'message id: ' + messageId + '\n'
//suite.setPropertyValue('messageId', messageId.toString())
log.info '-'*80 + '\n'</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="fbb4168f-52e7-4b50-8b57-a3293d90ab55" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="RecordDocumentMeta" searchProperties="true"><con:settings/><con:testStep type="groovy" name="record_document_meta" id="fcff8971-799e-4920-86ee-9fbe18fb7c0d"><con:settings/><con:config><script>import org.apache.http.HttpResponse
import org.apache.http.HttpEntity;
import org.apache.http.client.methods.HttpGet
import org.apache.http.util.EntityUtils
import groovy.util.XmlSlurper
import com.soapui.scripts

log.info '-'*80 + '\n'
log.info 'Test Step Name: ' + context.testCase.getTestStepAt(context.getCurrentStepIndex()).getLabel() + '\n'
	
def project = context.testCase.testSuite.project
def suite = context.testCase.testSuite
key = project.getPropertyValue('oauth_consumer_key')
secret = project.getPropertyValue('oauth_consumer_secret')
token = project.getPropertyValue('token')
token_secret = project.getPropertyValue('token_secret')
//key = 'medications@apps.indivo.org'
//secret = 'medications'
accountId = project.getPropertyValue('account_id')
recordId = project.getPropertyValue('recordId')
//recordId = '4cab53ad-bd94-4efe-a3d8-35b95cfd8773'
//pha = 'medications@apps.indivo.org'
docId = '90c0dddc-1ba3-49d3-b2e2-af0bab7c9cfb'
urlBase = 'http://' + project.getPropertyValue('host') + ':' + project.getPropertyValue('port') + '/'
url = urlBase +'records/' + recordId + '/documents/' + docId + '/meta'
	
HttpGet request = new HttpGet(url)	
HttpResponse response = new scripts().execute(key, secret, token, token_secret, request)

log.info 'Response: ' + response + '\n'
HttpEntity entity = response.getEntity()
def out = EntityUtils.toString(entity)
log.info 'Response String: ' + out + '\n' 
//def message = new XmlSlurper().parseText(out)
//def messageId = message.Message[0].'@id'
//log.info 'message id: ' + messageId + '\n'
//suite.setPropertyValue('messageId', messageId.toString())
log.info '-'*80 + '\n'</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="8fb2265f-1c04-4afc-8463-54018f48dfec" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DocumentsByRel" searchProperties="true"><con:settings/><con:testStep type="groovy" name="get_documents_by_rel" id="5cf26b61-612a-480b-98fa-b7d42ac531fc"><con:settings/><con:config><script>import org.apache.http.HttpResponse
import org.apache.http.HttpEntity;
import org.apache.http.client.methods.HttpGet
import org.apache.http.util.EntityUtils
import groovy.util.XmlSlurper
import com.soapui.scripts

log.info '-'*80 + '\n'
log.info 'Test Step Name: ' + context.testCase.getTestStepAt(context.getCurrentStepIndex()).getLabel() + '\n'
	
def project = context.testCase.testSuite.project
def suite = context.testCase.testSuite
key = project.getPropertyValue('oauth_consumer_key')
secret = project.getPropertyValue('oauth_consumer_secret')
token = project.getPropertyValue('token')
token_secret = project.getPropertyValue('token_secret')
//key = 'medications@apps.indivo.org'
//secret = 'medications'
accountId = project.getPropertyValue('account_id')
recordId = project.getPropertyValue('recordId')
//recordId = '4cab53ad-bd94-4efe-a3d8-35b95cfd8773'
//pha = 'medications@apps.indivo.org'
docId = '142cbb6a-c088-4953-befb-24370230e732'
urlBase = 'http://' + project.getPropertyValue('host') + ':' + project.getPropertyValue('port') + '/'
url = urlBase +'records/' + recordId + '/documents/' + docId + '/rels/attachment/' + '?status=active&amp;order_by=created_at&amp;limit=100&amp;offset=0'
	
HttpGet request = new HttpGet(url)	
HttpResponse response = new scripts().execute(key, secret, token, token_secret, request)

log.info 'Response: ' + response + '\n'
HttpEntity entity = response.getEntity()
def out = EntityUtils.toString(entity)
log.info 'Response String: ' + out + '\n' 
//def message = new XmlSlurper().parseText(out)
//def messageId = message.Message[0].'@id'
//log.info 'message id: ' + messageId + '\n'
//suite.setPropertyValue('messageId', messageId.toString())
log.info '-'*80 + '\n'</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="b0f13d7c-390c-4c72-a770-ff81f91ca6b1" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DocumentStatusHisory" searchProperties="true"><con:settings/><con:testStep type="groovy" name="document_status_history" id="cabb2017-9c7f-4bb9-beec-4f1adff11df0"><con:settings/><con:config><script>import org.apache.http.HttpResponse
import org.apache.http.HttpEntity;
import org.apache.http.client.methods.HttpGet
import org.apache.http.util.EntityUtils
import groovy.util.XmlSlurper
import com.soapui.scripts

log.info '-'*80 + '\n'
log.info 'Test Step Name: ' + context.testCase.getTestStepAt(context.getCurrentStepIndex()).getLabel() + '\n'
	
def project = context.testCase.testSuite.project
def suite = context.testCase.testSuite
key = project.getPropertyValue('oauth_consumer_key')
secret = project.getPropertyValue('oauth_consumer_secret')
token = project.getPropertyValue('token')
token_secret = project.getPropertyValue('token_secret')
//key = 'medications@apps.indivo.org'
//secret = 'medications'
accountId = project.getPropertyValue('account_id')
recordId = project.getPropertyValue('recordId')
//recordId = '4cab53ad-bd94-4efe-a3d8-35b95cfd8773'
//pha = 'medications@apps.indivo.org'
docId = '90c0dddc-1ba3-49d3-b2e2-af0bab7c9cfb'
urlBase = 'http://' + project.getPropertyValue('host') + ':' + project.getPropertyValue('port') + '/'
url = urlBase +'records/' + recordId + '/documents/' + docId + '/status-history'
	
HttpGet request = new HttpGet(url)	
HttpResponse response = new scripts().execute(key, secret, token, token_secret, request)

log.info 'Response: ' + response + '\n'
HttpEntity entity = response.getEntity()
def out = EntityUtils.toString(entity)
log.info 'Response String: ' + out + '\n' 
//def message = new XmlSlurper().parseText(out)
//def messageId = message.Message[0].'@id'
//log.info 'message id: ' + messageId + '\n'
//suite.setPropertyValue('messageId', messageId.toString())
log.info '-'*80 + '\n'</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="7760794c-86f2-40a7-bd93-1d5646c374fa" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DocumentVersion" searchProperties="true"><con:settings/><con:testStep type="groovy" name="document_versions" id="157d8718-84e0-424e-b1c4-e8a7e69507cc"><con:settings/><con:config><script>import org.apache.http.HttpResponse
import org.apache.http.HttpEntity;
import org.apache.http.client.methods.HttpGet
import org.apache.http.util.EntityUtils
import groovy.util.XmlSlurper
import com.soapui.scripts

log.info '-'*80 + '\n'
log.info 'Test Step Name: ' + context.testCase.getTestStepAt(context.getCurrentStepIndex()).getLabel() + '\n'
	
def project = context.testCase.testSuite.project
def suite = context.testCase.testSuite
key = project.getPropertyValue('oauth_consumer_key')
secret = project.getPropertyValue('oauth_consumer_secret')
token = project.getPropertyValue('token')
token_secret = project.getPropertyValue('token_secret')
//key = 'medications@apps.indivo.org'
//secret = 'medications'
accountId = project.getPropertyValue('account_id')
recordId = project.getPropertyValue('recordId')
//recordId = '4cab53ad-bd94-4efe-a3d8-35b95cfd8773'
//pha = 'medications@apps.indivo.org'
docId = '8a6ae7b7-e346-4c8e-bf45-47c556ee37b7'
urlBase = 'http://' + project.getPropertyValue('host') + ':' + project.getPropertyValue('port') + '/'
url = urlBase +'records/' + recordId + '/documents/' + docId + '/versions/' + '?status=active&amp;limit=25&amp;order_by=created_at&amp;offset=0'
	
HttpGet request = new HttpGet(url)	
HttpResponse response = new scripts().execute(key, secret, token, token_secret, request)

log.info 'Response: ' + response + '\n'
HttpEntity entity = response.getEntity()
def out = EntityUtils.toString(entity)
log.info 'Response String: ' + out + '\n' 
//def message = new XmlSlurper().parseText(out)
//def messageId = message.Message[0].'@id'
//log.info 'message id: ' + messageId + '\n'
//suite.setPropertyValue('messageId', messageId.toString())
log.info '-'*80 + '\n'</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="f67e9ebe-dcc5-4cd0-85ef-f010c7235795" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="RecordGetOwner" searchProperties="true"><con:settings/><con:testStep type="groovy" name="record_get_owner" id="63965311-47b4-4c97-a06f-fc60a6098146"><con:settings/><con:config><script>import org.apache.http.HttpResponse
import org.apache.http.HttpEntity;
import org.apache.http.client.methods.HttpGet
import org.apache.http.util.EntityUtils
import groovy.util.XmlSlurper
import com.soapui.scripts

log.info '-'*80 + '\n'
log.info 'Test Step Name: ' + context.testCase.getTestStepAt(context.getCurrentStepIndex()).getLabel() + '\n'
	
def project = context.testCase.testSuite.project
def suite = context.testCase.testSuite
key = project.getPropertyValue('oauth_consumer_key')
secret = project.getPropertyValue('oauth_consumer_secret')
token = project.getPropertyValue('token')
token_secret = project.getPropertyValue('token_secret')
//key = 'medications@apps.indivo.org'
//secret = 'medications'
accountId = project.getPropertyValue('account_id')
recordId = project.getPropertyValue('recordId')
//recordId = '015d694c-aae2-4118-b6fb-0c8531f85ffe'

urlBase = 'http://' + project.getPropertyValue('host') + ':' + project.getPropertyValue('port') + '/'
url = urlBase +'records/' + recordId  + '/owner'
	
HttpGet request = new HttpGet(url)	
HttpResponse response = new scripts().execute(key, secret, token, token_secret, request)

log.info 'Response: ' + response + '\n'
HttpEntity entity = response.getEntity()
def out = EntityUtils.toString(entity)
log.info 'Response String: ' + out + '\n' 
//def message = new XmlSlurper().parseText(out)
//def messageId = message.Message[0].'@id'
//log.info 'message id: ' + messageId + '\n'
//suite.setPropertyValue('messageId', messageId.toString())
log.info '-'*80 + '\n'</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="478817a4-5421-412e-ab4b-147438b5a114" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ReportCCR" searchProperties="true"><con:settings/><con:testStep type="groovy" name="report_ccr" id="54eae12f-645e-4f1a-b0ae-13240fd9ed53"><con:settings/><con:config><script>import org.apache.http.HttpResponse
import org.apache.http.HttpEntity;
import org.apache.http.client.methods.HttpGet
import org.apache.http.util.EntityUtils
import groovy.util.XmlSlurper
import com.soapui.scripts

log.info '-'*80 + '\n'
log.info 'Test Step Name: ' + context.testCase.getTestStepAt(context.getCurrentStepIndex()).getLabel() + '\n'
	
def project = context.testCase.testSuite.project
def suite = context.testCase.testSuite
key = project.getPropertyValue('oauth_consumer_key')
secret = project.getPropertyValue('oauth_consumer_secret')
token = project.getPropertyValue('token')
token_secret = project.getPropertyValue('token_secret')
//key = 'medications@apps.indivo.org'
//secret = 'medications'
accountId = project.getPropertyValue('account_id')
recordId = project.getPropertyValue('recordId')
//recordId = '4cab53ad-bd94-4efe-a3d8-35b95cfd8773'

urlBase = 'http://' + project.getPropertyValue('host') + ':' + project.getPropertyValue('port') + '/'
url = urlBase +'records/' + recordId  + '/reports/experimental/ccr'
	
HttpGet request = new HttpGet(url)	
HttpResponse response = new scripts().execute(key, secret, token, token_secret, request)

log.info 'Response: ' + response + '\n'
HttpEntity entity = response.getEntity()
def out = EntityUtils.toString(entity)
log.info 'Response String: ' + out + '\n' 
//def message = new XmlSlurper().parseText(out)
//def messageId = message.Message[0].'@id'
//log.info 'message id: ' + messageId + '\n'
//suite.setPropertyValue('messageId', messageId.toString())
log.info '-'*80 + '\n'</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="ad5b23d0-a477-46d9-be32-a2a783c5cfb0" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="EquipmentList" searchProperties="true"><con:settings/><con:testStep type="groovy" name="equipment_list" id="aa833938-1eef-49ea-b753-72337cd16d2c"><con:settings/><con:config><script>import org.apache.http.HttpResponse
import org.apache.http.HttpEntity;
import org.apache.http.client.methods.HttpGet
import org.apache.http.util.EntityUtils
import groovy.util.XmlSlurper
import com.soapui.scripts

log.info '-'*80 + '\n'
log.info 'Test Step Name: ' + context.testCase.getTestStepAt(context.getCurrentStepIndex()).getLabel() + '\n'
	
def project = context.testCase.testSuite.project
def suite = context.testCase.testSuite
key = project.getPropertyValue('oauth_consumer_key')
secret = project.getPropertyValue('oauth_consumer_secret')
token = project.getPropertyValue('token')
token_secret = project.getPropertyValue('token_secret')
//key = 'medications@apps.indivo.org'
//secret = 'medications'
accountId = project.getPropertyValue('account_id')
recordId = project.getPropertyValue('recordId')
//recordId = '4cab53ad-bd94-4efe-a3d8-35b95cfd8773'

urlBase = 'http://' + project.getPropertyValue('host') + ':' + project.getPropertyValue('port') + '/'
url = urlBase +'records/' + recordId  + '/reports/minimal/equipment/'
	
HttpGet request = new HttpGet(url)	
HttpResponse response = new scripts().execute(key, secret, token, token_secret, request)

log.info 'Response: ' + response + '\n'
HttpEntity entity = response.getEntity()
def out = EntityUtils.toString(entity)
log.info 'Response String: ' + out + '\n' 
//def message = new XmlSlurper().parseText(out)
//def messageId = message.Message[0].'@id'
//log.info 'message id: ' + messageId + '\n'
//suite.setPropertyValue('messageId', messageId.toString())
log.info '-'*80 + '\n'</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="9d7a2e32-4598-441f-ba86-e009c403b036" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="MeasurementList" searchProperties="true"><con:settings/><con:testStep type="groovy" name="measurement_list" id="6d1454fa-5323-4455-a1fc-d63288df6685"><con:settings/><con:config><script>import org.apache.http.HttpResponse
import org.apache.http.HttpEntity;
import org.apache.http.client.methods.HttpGet
import org.apache.http.util.EntityUtils
import groovy.util.XmlSlurper
import com.soapui.scripts

log.info '-'*80 + '\n'
log.info 'Test Step Name: ' + context.testCase.getTestStepAt(context.getCurrentStepIndex()).getLabel() + '\n'
	
def project = context.testCase.testSuite.project
def suite = context.testCase.testSuite
key = project.getPropertyValue('oauth_consumer_key')
secret = project.getPropertyValue('oauth_consumer_secret')
token = project.getPropertyValue('token')
token_secret = project.getPropertyValue('token_secret')
//key = 'medications@apps.indivo.org'
//secret = 'medications'
accountId = project.getPropertyValue('account_id')
recordId = project.getPropertyValue('recordId')
//recordId = '4cab53ad-bd94-4efe-a3d8-35b95cfd8773'

urlBase = 'http://' + project.getPropertyValue('host') + ':' + project.getPropertyValue('port') + '/'
url = urlBase +'records/' + recordId  + '/reports/minimal/measurements/Glucose' + '?status=active&amp;limit=100&amp;offset=0'
	
HttpGet request = new HttpGet(url)	
HttpResponse response = new scripts().execute(key, secret, token, token_secret, request)

log.info 'Response: ' + response + '\n'
HttpEntity entity = response.getEntity()
def out = EntityUtils.toString(entity)
log.info 'Response String: ' + out + '\n' 
//def message = new XmlSlurper().parseText(out)
//def messageId = message.Message[0].'@id'
//log.info 'message id: ' + messageId + '\n'
//suite.setPropertyValue('messageId', messageId.toString())
log.info '-'*80 + '\n'</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="68c64934-50e0-47fd-9eab-2ee092220630" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ProcedureList" searchProperties="true"><con:settings/><con:testStep type="groovy" name="procedure_list" id="284a6003-6557-435f-b1d0-01dd503df5d6"><con:settings/><con:config><script>import org.apache.http.HttpResponse
import org.apache.http.HttpEntity;
import org.apache.http.client.methods.HttpGet
import org.apache.http.util.EntityUtils
import groovy.util.XmlSlurper
import com.soapui.scripts

log.info '-'*80 + '\n'
log.info 'Test Step Name: ' + context.testCase.getTestStepAt(context.getCurrentStepIndex()).getLabel() + '\n'
	
def project = context.testCase.testSuite.project
def suite = context.testCase.testSuite
key = project.getPropertyValue('oauth_consumer_key')
secret = project.getPropertyValue('oauth_consumer_secret')
token = project.getPropertyValue('token')
token_secret = project.getPropertyValue('token_secret')
//key = 'medications@apps.indivo.org'
//secret = 'medications'
accountId = project.getPropertyValue('account_id')
recordId = project.getPropertyValue('recordId')
//recordId = '4cab53ad-bd94-4efe-a3d8-35b95cfd8773'

urlBase = 'http://' + project.getPropertyValue('host') + ':' + project.getPropertyValue('port') + '/'
url = urlBase +'records/' + recordId  + '/reports/minimal/procedures/' + '?status=active&amp;limit=100&amp;offset=0'
	
HttpGet request = new HttpGet(url)	
HttpResponse response = new scripts().execute(key, secret, token, token_secret, request)

log.info 'Response: ' + response + '\n'
HttpEntity entity = response.getEntity()
def out = EntityUtils.toString(entity)
log.info 'Response String: ' + out + '\n' 
//def message = new XmlSlurper().parseText(out)
//def messageId = message.Message[0].'@id'
//log.info 'message id: ' + messageId + '\n'
//suite.setPropertyValue('messageId', messageId.toString())
log.info '-'*80 + '\n'</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="4702d3ef-8637-412f-b4d4-1f35dfe3d628" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="SimpleClinicalNotes" searchProperties="true"><con:settings/><con:testStep type="groovy" name="simple_clinical_notes_list" id="1051206f-1701-4545-8555-4026d486ccea"><con:settings/><con:config><script>import org.apache.http.HttpResponse
import org.apache.http.HttpEntity;
import org.apache.http.client.methods.HttpGet
import org.apache.http.util.EntityUtils
import groovy.util.XmlSlurper
import com.soapui.scripts

log.info '-'*80 + '\n'
log.info 'Test Step Name: ' + context.testCase.getTestStepAt(context.getCurrentStepIndex()).getLabel() + '\n'
	
def project = context.testCase.testSuite.project
def suite = context.testCase.testSuite
key = project.getPropertyValue('oauth_consumer_key')
secret = project.getPropertyValue('oauth_consumer_secret')
token = project.getPropertyValue('token')
token_secret = project.getPropertyValue('token_secret')
//key = 'medications@apps.indivo.org'
//secret = 'medications'
accountId = project.getPropertyValue('account_id')
recordId = project.getPropertyValue('recordId')
//recordId = '4cab53ad-bd94-4efe-a3d8-35b95cfd8773'

urlBase = 'http://' + project.getPropertyValue('host') + ':' + project.getPropertyValue('port') + '/'
url = urlBase +'records/' + recordId  + '/reports/minimal/simple-clinical-notes/' + '?status=active&amp;limit=100&amp;offset=0'
	
HttpGet request = new HttpGet(url)	
HttpResponse response = new scripts().execute(key, secret, token, token_secret, request)

log.info 'Response: ' + response + '\n'
HttpEntity entity = response.getEntity()
def out = EntityUtils.toString(entity)
log.info 'Response String: ' + out + '\n' 
//def message = new XmlSlurper().parseText(out)
//def messageId = message.Message[0].'@id'
//log.info 'message id: ' + messageId + '\n'
//suite.setPropertyValue('messageId', messageId.toString())
log.info '-'*80 + '\n'</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="a70260cf-0f99-4c4c-838e-9e2269782f4c" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="RecordShares" searchProperties="true"><con:settings/><con:testStep type="groovy" name="record_shares" id="e88730f6-1ee0-45b8-ba46-f121ab3beb4b"><con:settings/><con:config><script>import org.apache.http.HttpResponse
import org.apache.http.HttpEntity;
import org.apache.http.client.methods.HttpGet
import org.apache.http.util.EntityUtils
import groovy.util.XmlSlurper
import com.soapui.scripts

log.info '-'*80 + '\n'
log.info 'Test Step Name: ' + context.testCase.getTestStepAt(context.getCurrentStepIndex()).getLabel() + '\n'
	
def project = context.testCase.testSuite.project
def suite = context.testCase.testSuite
key = project.getPropertyValue('oauth_consumer_key')
secret = project.getPropertyValue('oauth_consumer_secret')
token = project.getPropertyValue('token')
token_secret = project.getPropertyValue('token_secret')
//key = 'medications@apps.indivo.org'
//secret = 'medications'
accountId = project.getPropertyValue('account_id')
recordId = project.getPropertyValue('recordId')
//recordId = '4cab53ad-bd94-4efe-a3d8-35b95cfd8773'

urlBase = 'http://' + project.getPropertyValue('host') + ':' + project.getPropertyValue('port') + '/'
url = urlBase +'records/' + recordId  + '/shares/'
	
HttpGet request = new HttpGet(url)	
HttpResponse response = new scripts().execute(key, secret, token, token_secret, request)

log.info 'Response: ' + response + '\n'
HttpEntity entity = response.getEntity()
def out = EntityUtils.toString(entity)
log.info 'Response String: ' + out + '\n' 
//def message = new XmlSlurper().parseText(out)
//def messageId = message.Message[0].'@id'
//log.info 'message id: ' + messageId + '\n'
//suite.setPropertyValue('messageId', messageId.toString())
log.info '-'*80 + '\n'</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="70b69041-e8f6-434f-8a78-0add2e35e839" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="SmartGeneric" searchProperties="true"><con:settings/><con:testStep type="groovy" name="smart_generic" id="2f9ce99e-e940-4d32-8495-13867867ea40"><con:settings/><con:config><script>import org.apache.http.HttpResponse
import org.apache.http.HttpEntity;
import org.apache.http.client.methods.HttpGet
import org.apache.http.util.EntityUtils
import groovy.util.XmlSlurper
import com.soapui.scripts

log.info '-'*80 + '\n'
log.info 'Test Step Name: ' + context.testCase.getTestStepAt(context.getCurrentStepIndex()).getLabel() + '\n'
	
def project = context.testCase.testSuite.project
def suite = context.testCase.testSuite
key = project.getPropertyValue('oauth_consumer_key')
secret = project.getPropertyValue('oauth_consumer_secret')
token = project.getPropertyValue('token')
token_secret = project.getPropertyValue('token_secret')
//key = 'medications@apps.indivo.org'
//secret = 'medications'
accountId = project.getPropertyValue('account_id')
recordId = project.getPropertyValue('recordId')
//recordId = '4cab53ad-bd94-4efe-a3d8-35b95cfd8773'

urlBase = 'http://' + project.getPropertyValue('host') + ':' + project.getPropertyValue('port') + '/'
model = 'lab_results'
url = urlBase +'records/' + recordId  + '/'+ model + '/'
	
HttpGet request = new HttpGet(url)	
HttpResponse response = new scripts().execute(key, secret, token, token_secret, request)

log.info 'Response: ' + response + '\n' 
HttpEntity entity = response.getEntity()
def out = EntityUtils.toString(entity)
log.info 'Response String: ' + out + '\n' 
//def message = new XmlSlurper().parseText(out)
//def messageId = message.Message[0].'@id'
//log.info 'message id: ' + messageId + '\n'
//suite.setPropertyValue('messageId', messageId.toString())
log.info '-'*80 + '\n'</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="8f9eeefc-90fd-4a3d-9e6b-54425c0e18c0" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="SmartAllergies" searchProperties="true"><con:settings/><con:testStep type="groovy" name="smart_allergies" id="f72288a3-b58f-4f38-9677-b84b7e24ef41"><con:settings/><con:config><script>import org.apache.http.HttpResponse
import org.apache.http.HttpEntity;
import org.apache.http.client.methods.HttpGet
import org.apache.http.util.EntityUtils;
import com.soapui.scripts

log.info '-'*80 + '\n'
log.info 'Test Step Name: ' + context.testCase.getTestStepAt(context.getCurrentStepIndex()).getLabel() + '\n'

def project = context.testCase.testSuite.project;
key = project.getPropertyValue('oauth_consumer_key')
secret = project.getPropertyValue('oauth_consumer_secret')
token = project.getPropertyValue('token')
token_secret = project.getPropertyValue('token_secret')
recordId = project.getPropertyValue('recordId')
urlBase = 'http://' + project.getPropertyValue('host') + ':' + project.getPropertyValue('port') + '/'

def url = urlBase + 'records/' + recordId + '/allergies/'
HttpGet request = new HttpGet(url);
HttpResponse response = new scripts().execute(key, secret, token, token_secret, request)

log.info 'Response: ' + response + '\n'
HttpEntity entity = response.getEntity()
def out = EntityUtils.toString(entity)
log.info 'Response String: ' + out + '\n'

log.info '-'*80 + '\n'</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="83a07114-90ed-4118-ae49-66d8fdb44d23" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Autosharelist" searchProperties="true"><con:settings/><con:testStep type="groovy" name="autoshare_list" id="6040c1f1-b3de-4e32-a93d-a5c0d471cada"><con:settings/><con:config><script>import org.apache.http.HttpResponse
import org.apache.http.HttpEntity;
import org.apache.http.client.methods.HttpGet
import org.apache.http.util.EntityUtils;
import com.soapui.scripts

log.info '-'*80 + '\n'
log.info 'Test Step Name: ' + context.testCase.getTestStepAt(context.getCurrentStepIndex()).getLabel() + '\n'

def project = context.testCase.testSuite.project;
key = project.getPropertyValue('oauth_consumer_key')
secret = project.getPropertyValue('oauth_consumer_secret')
token = project.getPropertyValue('token')
token_secret = project.getPropertyValue('token_secret')
recordId = project.getPropertyValue('recordId')
urlBase = 'http://' + project.getPropertyValue('host') + ':' + project.getPropertyValue('port') + '/'

def url = urlBase + 'records/' + recordId + '/autoshare/bytype/' + '?type=Medication'
HttpGet request = new HttpGet(url);
HttpResponse response = new scripts().execute(key, secret, token, token_secret, request)

log.info 'Response: ' + response + '\n'
HttpEntity entity = response.getEntity()
def out = EntityUtils.toString(entity)
log.info 'Response String: ' + out + '\n'

log.info '-'*80 + '\n'</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="8d67ea08-4781-470e-900b-169383bb856f" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="AutoShareListBytype" searchProperties="true"><con:settings/><con:testStep type="groovy" name="autoshare_list_bytype_all" id="5a5b5d91-7f7e-4529-ab56-188c0f794daf"><con:settings/><con:config><script>import org.apache.http.HttpResponse
import org.apache.http.HttpEntity;
import org.apache.http.client.methods.HttpGet
import org.apache.http.util.EntityUtils;
import com.soapui.scripts

log.info '-'*80 + '\n'
log.info 'Test Step Name: ' + context.testCase.getTestStepAt(context.getCurrentStepIndex()).getLabel() + '\n'

def project = context.testCase.testSuite.project;
key = project.getPropertyValue('oauth_consumer_key')
secret = project.getPropertyValue('oauth_consumer_secret')
token = project.getPropertyValue('token')
token_secret = project.getPropertyValue('token_secret')
recordId = project.getPropertyValue('recordId')
urlBase = 'http://' + project.getPropertyValue('host') + ':' + project.getPropertyValue('port') + '/'

def url = urlBase + 'records/' + recordId + '/autoshare/bytype/all' 
HttpGet request = new HttpGet(url);
HttpResponse response = new scripts().execute(key, secret, token, token_secret, request)

log.info 'Response: ' + response + '\n'
HttpEntity entity = response.getEntity()
def out = EntityUtils.toString(entity)
log.info 'Response String: ' + out + '\n'

log.info '-'*80 + '\n'</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="a1b7e3e8-0fa7-48cf-92f9-3cd88d63b952" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="CarenetList" searchProperties="true"><con:settings/><con:testStep type="groovy" name="carenet_list" id="3f366b25-66ab-4802-a680-5e10bb8ee675"><con:settings/><con:config><script>import org.apache.http.HttpResponse
import org.apache.http.HttpEntity;
import org.apache.http.client.methods.HttpGet
import org.apache.http.util.EntityUtils
import groovy.util.XmlSlurper
import com.soapui.scripts

log.info '-'*80 + '\n'
log.info 'Test Step Name: ' + context.testCase.getTestStepAt(context.getCurrentStepIndex()).getLabel() + '\n'

def project = context.testCase.testSuite.project;
key = project.getPropertyValue('oauth_consumer_key')
secret = project.getPropertyValue('oauth_consumer_secret')
token = project.getPropertyValue('token')
token_secret = project.getPropertyValue('token_secret')
recordId = project.getPropertyValue('recordId')
urlBase = 'http://' + project.getPropertyValue('host') + ':' + project.getPropertyValue('port') + '/'
def url = urlBase + 'records/' + recordId + '/carenets/'
HttpGet request = new HttpGet(url);
HttpResponse response = new scripts().execute(key, secret, token, token_secret, request)
log.info 'Response: '+ response + '\n'
HttpEntity entity = response.getEntity()
def out = EntityUtils.toString(entity)
log.info 'Response Out: ' + out + '\n'
//def list = new XmlSlurper().parseText(out)
//def carenetId = list.Carenet[0].@id
//log.info 'Carenet Id: ' + carenetId + '\n'
//project.setPropertyValue('carenetId', carenetId.toString());

log.info '-'*80 + '\n'
</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="f18e1523-940d-4b92-8344-13d921608b6b" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DocumentCarenets" searchProperties="true"><con:settings/><con:testStep type="groovy" name="document_carenets" id="4a994c76-b0d7-452e-9e1a-f4f4ac59fb8a"><con:settings/><con:config><script>import org.apache.http.HttpResponse
import org.apache.http.HttpEntity;
import org.apache.http.client.methods.HttpGet
import org.apache.http.util.EntityUtils
import groovy.util.XmlSlurper
import com.soapui.scripts

log.info '-'*80 + '\n'
log.info 'Test Step Name: ' + context.testCase.getTestStepAt(context.getCurrentStepIndex()).getLabel() + '\n'
	
def project = context.testCase.testSuite.project
def suite = context.testCase.testSuite
key = project.getPropertyValue('oauth_consumer_key')
secret = project.getPropertyValue('oauth_consumer_secret')
token = project.getPropertyValue('token')
token_secret = project.getPropertyValue('token_secret')
//key = 'medications@apps.indivo.org'
//secret = 'medications'
accountId = project.getPropertyValue('account_id')
recordId = project.getPropertyValue('recordId')
//recordId = '4cab53ad-bd94-4efe-a3d8-35b95cfd8773'
//pha = 'medications@apps.indivo.org'
docId = 'dfcc5f74-f5ee-43b4-ab2a-8a8a904ffc7a'
urlBase = 'http://' + project.getPropertyValue('host') + ':' + project.getPropertyValue('port') + '/'
url = urlBase +'records/' + recordId + '/documents/' + docId + '/carenets/'
	
HttpGet request = new HttpGet(url)	
HttpResponse response = new scripts().execute(key, secret, token, token_secret, request)

log.info 'Response: ' + response + '\n'
HttpEntity entity = response.getEntity()
def out = EntityUtils.toString(entity)
log.info 'Response String: ' + out + '\n' 
//def message = new XmlSlurper().parseText(out)
//def messageId = message.Message[0].'@id'
//log.info 'message id: ' + messageId + '\n'
//suite.setPropertyValue('messageId', messageId.toString())
log.info '-'*80 + '\n'</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="c2e80b71-1046-438d-b1c5-c79c9444f95e" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Login" searchProperties="true"><con:settings/><con:testStep type="groovy" name="session_create" id="04a74950-41fa-464f-8718-d9f64c7e60e3"><con:settings/><con:config><script>import org.apache.http.HttpResponse
import org.apache.http.HttpEntity;
import org.apache.http.client.methods.HttpPost
import org.apache.http.impl.client.DefaultHttpClient
import org.apache.http.util.EntityUtils;
import org.apache.commons.httpclient.NameValuePair
import org.apache.http.message.BasicNameValuePair
import org.apache.http.client.entity.UrlEncodedFormEntity
import java.util.ArrayList
import java.net.URLDecoder
import com.soapui.scripts

log.info '-'*80 + '\n'	
log.info 'Test Step Name: ' + context.testCase.getTestStepAt(context.getCurrentStepIndex()).getLabel() + '\n'	
def project = context.testCase.testSuite.project
def suite = context.testCase.testSuite;
key = project.getPropertyValue('oauth_consumer_key')
secret = project.getPropertyValue('oauth_consumer_secret')
urlBase = 'http://' + project.getPropertyValue('host') + ':' + project.getPropertyValue('port') + '/'
url = urlBase + 'oauth/internal/session_create'
HttpPost request = new HttpPost(url);
ArrayList&lt;NameValuePair>  postParameters = new ArrayList&lt;NameValuePair>();
postParameters.add(new BasicNameValuePair("username", "test1"));
postParameters.add(new BasicNameValuePair("password", "password.example"));

request.setEntity(new UrlEncodedFormEntity(postParameters));

HttpResponse response = new scripts().executeNoOAuth(key, secret, request)
HttpEntity entity = response.getEntity()
String responseString = EntityUtils.toString(entity, "UTF-8")
log.info 'Response: ' + responseString
def map = [:]
def data = responseString
data.split("&amp;").each {param ->
     	def nameAndValue = param.split("=")
     	map[nameAndValue[0]] = nameAndValue[1]
	}
token = map.get('oauth_token')
token_secret = map.get('oauth_token_secret')
account_id = map.get('account_id')
//	log.info('token:'+token)
//	log.info('token secret:'+token_secret)
//	log.info('account id:'+ account_id)
suite.setPropertyValue("token", token)
suite.setPropertyValue("token_secret", token_secret)
suite.setPropertyValue("account_id", URLDecoder.decode(account_id, 'utf-8'))
log.info '-'*80 + '\n'	</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="0cdf855d-1739-4020-9569-b719ce884ff2" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="RecordCreate" searchProperties="true"><con:settings/><con:testStep type="groovy" name="record_create" id="ddf71a72-1e15-43c7-90b1-5852f6a63bb6"><con:settings/><con:config><script><![CDATA[import org.apache.http.HttpResponse
import org.apache.http.HttpEntity;
import org.apache.http.client.methods.HttpPost
import org.apache.http.util.EntityUtils
import groovy.util.XmlSlurper
import org.apache.commons.httpclient.NameValuePair
import org.apache.http.message.BasicNameValuePair
import org.apache.http.client.entity.UrlEncodedFormEntity
import org.apache.commons.httpclient.methods.RequestEntity
import org.apache.commons.httpclient.methods.StringRequestEntity
import java.util.ArrayList
import org.apache.http.entity.ByteArrayEntity
import com.soapui.scripts

log.info '-'*80 + '\n'
log.info 'Test Step Name: ' + context.testCase.getTestStepAt(context.getCurrentStepIndex()).getLabel() + '\n'

def project = context.testCase.testSuite.project
def suite = context.testCase.testSuite
//key = project.getPropertyValue('oauth_consumer_key')
//secret = project.getPropertyValue('oauth_consumer_secret')
key = 'sampleadmin_key'
secret = 'sampleadmin_secret'
token = suite.getPropertyValue('token')
token_secret = suite.getPropertyValue('token_secret')
//recordId = project.getPropertyValue('recordId')
rawXml = '''
<Demographics xmlns="http://indivo.org/vocab/xml/documents#">
    <dateOfBirth><![CDATA[1927-12-11]]]]>><![CDATA[</dateOfBirth>
    <gender><![CDATA[female]]]]>><![CDATA[</gender>
    <email><![CDATA[michelle.wilson@example.com]]]]>><![CDATA[</email>
    <preferredLanguage>EN</preferredLanguage>
    <Name>
        <familyName><![CDATA[sudha]]]]>><![CDATA[</familyName>
        <givenName><![CDATA[pack]]]]>><![CDATA[</givenName>
    </Name>
    <Telephone>
        <type>h</type>
        <number><![CDATA[800-853-8117]]]]>><![CDATA[</number>
        <preferred>true</preferred>
    </Telephone>
    <Telephone>
        <type>c</type>
        <number><![CDATA[]]]]>><![CDATA[</number>
    </Telephone>
    <Address>
        <country><![CDATA[USA]]]]>><![CDATA[</country>
        <city><![CDATA[Sapulpa]]]]>><![CDATA[</city>
        <postalCode><![CDATA[74066]]]]>><![CDATA[</postalCode>
        <region><![CDATA[OK]]]]>><![CDATA[</region>
        <street><![CDATA[65 Ridge St]]]]>><![CDATA[</street>
    </Address>
</Demographics>
'''
urlBase = 'http://' + project.getPropertyValue('host') + ':' + project.getPropertyValue('port') + '/'
def url = urlBase + 'records/' 
HttpPost request = new HttpPost(url)
//RequestEntity re = new StringRequestEntity(rawXml, "text/xml", "UTF-8");
HttpEntity en = new ByteArrayEntity(rawXml.getBytes("UTF-8"));
request.setEntity(en)
//request.setEntity(new UrlEncodedFormEntity(postParameters));
//request.setRequestEntity(re);
HttpResponse response = new scripts().executeNoOAuth(key, secret, request)

log.info 'Response: '+ response + '\n'
HttpEntity entity = response.getEntity()
def out = EntityUtils.toString(entity)
log.info 'Response Out: ' + out + '\n'
def list = new XmlSlurper().parseText(out)
def carenetId = list.Carenet[0].@id
log.info 'Carenet Id: ' + carenetId + '\n'
project.setPropertyValue('carenetId', carenetId.toString());

log.info '-'*80 + '\n'
]]></script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="7a089007-256f-4642-ab19-469af619ecc1" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="CarenetDocumentPlacement" searchProperties="true"><con:settings/><con:testStep type="groovy" name="carenet_document_placement" id="de3656ee-b659-4587-b60c-72b07d409a66"><con:settings/><con:config><script>import org.apache.http.HttpResponse
import org.apache.http.HttpEntity;
import org.apache.http.client.methods.HttpPut
import org.apache.http.util.EntityUtils
import groovy.util.XmlSlurper
import com.soapui.scripts

log.info '-'*80 + '\n'
log.info 'Test Step Name: ' + context.testCase.getTestStepAt(context.getCurrentStepIndex()).getLabel() + '\n'

def project = context.testCase.testSuite.project;
key = project.getPropertyValue('oauth_consumer_key')
secret = project.getPropertyValue('oauth_consumer_secret')
token = project.getPropertyValue('token')
token_secret = project.getPropertyValue('token_secret')
recordId = project.getPropertyValue('recordId')
urlBase = 'http://' + project.getPropertyValue('host') + ':' + project.getPropertyValue('port') + '/'
//documentId = '11f8c429-5ce3-4c15-8269-c6af939d1291'
documentId = 'dfcc5f74-f5ee-43b4-ab2a-8a8a904ffc7a'
carenetId = '821d1064-d9a2-42ce-89c3-3ff3008db6d2'
def url = urlBase + 'records/' + recordId + '/documents/' + documentId + '/carenets/' + carenetId
HttpPut request = new HttpPut(url);
HttpResponse response = new scripts().execute(key, secret, token, token_secret, request)
log.info 'Response: '+ response + '\n'
HttpEntity entity = response.getEntity()
def out = EntityUtils.toString(entity)
log.info 'Response Out: ' + out + '\n'

log.info '-'*80 + '\n'
</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="275a098b-8d0b-4d54-93f1-b66532f29e1f" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="CarenetDocumentDelete" searchProperties="true"><con:settings/><con:testStep type="groovy" name="carenet_document_delete" id="1c4e258a-83c2-4346-9571-ad6dec5cb426"><con:settings/><con:config><script>import org.apache.http.HttpResponse
import org.apache.http.HttpEntity;
import org.apache.http.client.methods.HttpDelete
import org.apache.http.util.EntityUtils
import groovy.util.XmlSlurper
import com.soapui.scripts

log.info '-'*80 + '\n'
log.info 'Test Step Name: ' + context.testCase.getTestStepAt(context.getCurrentStepIndex()).getLabel() + '\n'

def project = context.testCase.testSuite.project;
key = project.getPropertyValue('oauth_consumer_key')
secret = project.getPropertyValue('oauth_consumer_secret')
token = project.getPropertyValue('token')
token_secret = project.getPropertyValue('token_secret')
recordId = project.getPropertyValue('recordId')
urlBase = 'http://' + project.getPropertyValue('host') + ':' + project.getPropertyValue('port') + '/'
//documentId = '11f8c429-5ce3-4c15-8269-c6af939d1291'
documentId = 'dfcc5f74-f5ee-43b4-ab2a-8a8a904ffc7a'
carenetId = '821d1064-d9a2-42ce-89c3-3ff3008db6d2'
def url = urlBase + 'records/' + recordId + '/documents/' + documentId + '/carenets/' + carenetId
HttpDelete request = new HttpDelete(url);
HttpResponse response = new scripts().execute(key, secret, token, token_secret, request)
log.info 'Response: '+ response + '\n'
HttpEntity entity = response.getEntity()
def out = EntityUtils.toString(entity)
log.info 'Response Out: ' + out + '\n'

log.info '-'*80 + '\n'
</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="28861e8b-c4d6-4db3-bb0c-5231f0dc46b2" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="record_document_meta" searchProperties="true"><con:settings/><con:testStep type="groovy" name="record_document_meta" id="2f9c1036-594f-443b-bc86-e5299d4e1e4d"><con:settings/><con:config><script>import org.apache.http.HttpResponse
import org.apache.http.HttpEntity;
import org.apache.http.client.methods.HttpGet
import org.apache.http.util.EntityUtils;
import com.soapui.scripts

log.info '-'*80 + '\n'
log.info 'Test Step Name: ' + context.testCase.getTestStepAt(context.getCurrentStepIndex()).getLabel() + '\n'

def project = context.testCase.testSuite.project;
key = project.getPropertyValue('oauth_consumer_key')
secret = project.getPropertyValue('oauth_consumer_secret')
token = project.getPropertyValue('token')
token_secret = project.getPropertyValue('token_secret')
recordId = project.getPropertyValue('recordId')
carenetId = '821d1064-d9a2-42ce-89c3-3ff3008db6d2'
documentId = '11f8c429-5ce3-4c15-8269-c6af939d1291'

urlBase = 'http://' + project.getPropertyValue('host') + ':' + project.getPropertyValue('port') + '/'
def url = urlBase + 'records/' + recordId + '/documents/' + documentId + '/meta' 
HttpGet request = new HttpGet(url);
HttpResponse response = new scripts().execute(key, secret, token, token_secret, request)
log.info 'Response: ' + response + '\n'
HttpEntity entity = response.getEntity()
def out = EntityUtils.toString(entity)
log.info 'Response Out: ' + out + '\n'

log.info '-'*80 + '\n'
</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="ba06e371-d31a-4743-aa10-1cc2c6fe3239" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DocumentSetNevershare" searchProperties="true"><con:settings/><con:testStep type="groovy" name="document_set_nevershare" id="2cc3e14b-561b-48be-9413-0b9037e3fc4b"><con:settings/><con:config><script>import org.apache.http.HttpResponse
import org.apache.http.HttpEntity;
import org.apache.http.client.methods.HttpPut
import org.apache.http.util.EntityUtils;
import com.soapui.scripts

log.info '-'*80 + '\n'
log.info 'Test Step Name: ' + context.testCase.getTestStepAt(context.getCurrentStepIndex()).getLabel() + '\n'

def project = context.testCase.testSuite.project;
key = project.getPropertyValue('oauth_consumer_key')
secret = project.getPropertyValue('oauth_consumer_secret')
token = project.getPropertyValue('token')
token_secret = project.getPropertyValue('token_secret')
recordId = project.getPropertyValue('recordId')
carenetId = '821d1064-d9a2-42ce-89c3-3ff3008db6d2'
documentId = 'dfcc5f74-f5ee-43b4-ab2a-8a8a904ffc7a'

urlBase = 'http://' + project.getPropertyValue('host') + ':' + project.getPropertyValue('port') + '/'
def url = urlBase + 'records/' + recordId + '/documents/' + documentId + '/nevershare' 
HttpPut request = new HttpPut(url);
HttpResponse response = new scripts().execute(key, secret, token, token_secret, request)
log.info 'Response: ' + response + '\n'
HttpEntity entity = response.getEntity()
def out = EntityUtils.toString(entity)
log.info 'Response Out: ' + out + '\n'

log.info '-'*80 + '\n'
</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="34426fd9-cea0-4024-bd60-f47de752340f" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DocumentRemoveNevershare" searchProperties="true"><con:settings/><con:testStep type="groovy" name="document_remove_nevershare" id="572ed01a-f8e0-47ad-ac35-1a4d1186643f"><con:settings/><con:config><script>import org.apache.http.HttpResponse
import org.apache.http.HttpEntity;
import org.apache.http.client.methods.HttpDelete
import org.apache.http.util.EntityUtils;
import com.soapui.scripts

log.info '-'*80 + '\n'
log.info 'Test Step Name: ' + context.testCase.getTestStepAt(context.getCurrentStepIndex()).getLabel() + '\n'

def project = context.testCase.testSuite.project;
key = project.getPropertyValue('oauth_consumer_key')
secret = project.getPropertyValue('oauth_consumer_secret')
token = project.getPropertyValue('token')
token_secret = project.getPropertyValue('token_secret')
recordId = project.getPropertyValue('recordId')
carenetId = '821d1064-d9a2-42ce-89c3-3ff3008db6d2'
documentId = 'dfcc5f74-f5ee-43b4-ab2a-8a8a904ffc7a'

urlBase = 'http://' + project.getPropertyValue('host') + ':' + project.getPropertyValue('port') + '/'
def url = urlBase + 'records/' + recordId + '/documents/' + documentId + '/nevershare' 
HttpDelete request = new HttpDelete(url);
HttpResponse response = new scripts().execute(key, secret, token, token_secret, request)
log.info 'Response: ' + response + '\n'
HttpEntity entity = response.getEntity()
def out = EntityUtils.toString(entity)
log.info 'Response Out: ' + out + '\n'

log.info '-'*80 + '\n'
</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="c430d6d1-115f-4a0b-99f8-b2282452ec71" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DocumentSetStatus" searchProperties="true"><con:settings/><con:testStep type="groovy" name="document_set_status" id="db2d37a1-aca9-40d1-9420-3a86a801a48b"><con:settings/><con:config><script>import org.apache.http.HttpResponse
import org.apache.http.HttpEntity;
import org.apache.http.client.methods.HttpPost
import org.apache.http.util.EntityUtils
import org.apache.commons.httpclient.NameValuePair
import org.apache.http.message.BasicNameValuePair
import org.apache.http.client.entity.UrlEncodedFormEntity
import java.util.ArrayList
import com.soapui.scripts

log.info '-'*80 + '\n'
log.info 'Test Step Name: ' + context.testCase.getTestStepAt(context.getCurrentStepIndex()).getLabel() + '\n'

def project = context.testCase.testSuite.project;
key = project.getPropertyValue('oauth_consumer_key')
secret = project.getPropertyValue('oauth_consumer_secret')
token = project.getPropertyValue('token')
token_secret = project.getPropertyValue('token_secret')
recordId = project.getPropertyValue('recordId')
carenetId = '821d1064-d9a2-42ce-89c3-3ff3008db6d2'
documentId = '97321f22-0cd2-4854-a1e0-2f89432cd7d4'

urlBase = 'http://' + project.getPropertyValue('host') + ':' + project.getPropertyValue('port') + '/'
def url = urlBase + 'records/' + recordId + '/documents/' + documentId + '/set-status' 
HttpPost request = new HttpPost(url)
ArrayList&lt;NameValuePair>  postParameters = new ArrayList&lt;NameValuePair>()
postParameters.add(new BasicNameValuePair("status", "void"));
postParameters.add(new BasicNameValuePair("reason", "set inactive for test"))
request.setEntity(new UrlEncodedFormEntity(postParameters));
HttpResponse response = new scripts().execute(key, secret, token, token_secret, request)
log.info 'Response: ' + response + '\n'
HttpEntity entity = response.getEntity()
def out = EntityUtils.toString(entity)
log.info 'Response Out: ' + out + '\n'

log.info '-'*80 + '\n'
</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="df855b27-06ed-48d4-8345-f44697f695ba" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="RecordSendMessage" searchProperties="true"><con:settings/><con:testStep type="groovy" name="record_send_message" id="96a9b4a5-977a-4515-af9b-2f58da5c4bca"><con:settings/><con:config><script>import org.apache.http.HttpResponse
import org.apache.http.HttpEntity;
import org.apache.http.client.methods.HttpPost
import org.apache.http.util.EntityUtils
import org.apache.commons.httpclient.NameValuePair
import org.apache.http.message.BasicNameValuePair
import org.apache.http.client.entity.UrlEncodedFormEntity
import com.soapui.scripts
import java.util.ArrayList

log.info '-'*80 + '\n'
log.info 'Test Step Name: ' + context.testCase.getTestStepAt(context.getCurrentStepIndex()).getLabel() + '\n'
	
def project = context.testCase.testSuite.project;
def suite = context.testCase.testSuite
//key = project.getPropertyValue('oauth_consumer_key')
//secret = project.getPropertyValue('oauth_consumer_secret')
key = 'sampleadmin_key'
secret = 'sampleadmin_secret'
//token = suite.getPropertyValue('token')
//token_secret = suite.getPropertyValue('token_secret')
recordId = project.getPropertyValue('recordId')
urlBase = 'http://' + project.getPropertyValue('host') + ':' + project.getPropertyValue('port') + '/'
url = urlBase +'records/' + recordId + '/inbox/' + 'Msg002'
	
def request = new HttpPost(url)
ArrayList&lt;NameValuePair>  postParameters = new ArrayList&lt;NameValuePair>();
postParameters.add(new BasicNameValuePair("severity", "low"));
postParameters.add(new BasicNameValuePair("num_attachments", "0"));
postParameters.add(new BasicNameValuePair("body_type", "plaintext"));
postParameters.add(new BasicNameValuePair("subject", "Hello there test message"));
postParameters.add(new BasicNameValuePair("body", "Hey this is a test message for you from a admin"));

request.setEntity(new UrlEncodedFormEntity(postParameters));	
HttpResponse response = new scripts().executeNoOAuth(key, secret, request)

log.info 'Response: ' + response + '\n'
HttpEntity entity = response.getEntity()
def out = EntityUtils.toString(entity)
log.info 'Response String: ' + out + '\n' 

log.info '-'*80 + '\n'</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="c8fb399e-08d8-407f-ac6a-2033b809d25f" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="RecordNotification" searchProperties="true"><con:settings/><con:testStep type="groovy" name="record_notify" id="38a21896-2775-4760-83fd-996f914df7e8"><con:settings/><con:config><script>import org.apache.http.HttpResponse
import org.apache.http.HttpEntity;
import org.apache.http.client.methods.HttpPost
import org.apache.http.util.EntityUtils
import org.apache.commons.httpclient.NameValuePair
import org.apache.http.message.BasicNameValuePair
import org.apache.http.client.entity.UrlEncodedFormEntity
import java.util.ArrayList
import com.soapui.scripts

log.info '-'*80 + '\n'
log.info 'Test Step Name: ' + context.testCase.getTestStepAt(context.getCurrentStepIndex()).getLabel() + '\n'

def project = context.testCase.testSuite.project;
//key = project.getPropertyValue('oauth_consumer_key')
//secret = project.getPropertyValue('oauth_consumer_secret')
key = 'sampleadmin_key'
secret = 'sampleadmin_secret'
//token = project.getPropertyValue('token')
//token_secret = project.getPropertyValue('token_secret')
recordId = project.getPropertyValue('recordId')

urlBase = 'http://' + project.getPropertyValue('host') + ':' + project.getPropertyValue('port') + '/'
def url = urlBase + 'records/' + recordId + '/notifications/' 
HttpPost request = new HttpPost(url)
ArrayList&lt;NameValuePair>  postParameters = new ArrayList&lt;NameValuePair>()
postParameters.add(new BasicNameValuePair("content", "the record has a notification"));
postParameters.add(new BasicNameValuePair("app_url", ""))
postParameters.add(new BasicNameValuePair("document_id", ""))
request.setEntity(new UrlEncodedFormEntity(postParameters));
HttpResponse response = new scripts().executeNoOAuth(key, secret, request)
log.info 'Response: ' + response + '\n'
HttpEntity entity = response.getEntity()
def out = EntityUtils.toString(entity)
log.info 'Response Out: ' + out + '\n'

log.info '-'*80 + '\n'
</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="4a3e4b42-14d1-48c9-885f-892b109d8fa8" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="RecordShareAdd" searchProperties="true"><con:settings/><con:testStep type="groovy" name="record_share_add" id="1d3d7d51-3196-4248-9201-e4a28edc125e"><con:settings/><con:config><script>import org.apache.http.HttpResponse
import org.apache.http.HttpEntity;
import org.apache.http.client.methods.HttpPost
import org.apache.http.util.EntityUtils
import org.apache.commons.httpclient.NameValuePair
import org.apache.http.message.BasicNameValuePair
import org.apache.http.client.entity.UrlEncodedFormEntity
import java.util.ArrayList
import com.soapui.scripts

log.info '-'*80 + '\n'
log.info 'Test Step Name: ' + context.testCase.getTestStepAt(context.getCurrentStepIndex()).getLabel() + '\n'

def project = context.testCase.testSuite.project;
key = project.getPropertyValue('oauth_consumer_key')
secret = project.getPropertyValue('oauth_consumer_secret')
//key = 'sampleadmin_key'
//secret = 'sampleadmin_secret'
token = project.getPropertyValue('token')
token_secret = project.getPropertyValue('token_secret')
recordId = project.getPropertyValue('recordId')
//recordId = 'f277f731-37e3-47ac-b2b2-1043d5a0023f'
urlBase = 'http://' + project.getPropertyValue('host') + ':' + project.getPropertyValue('port') + '/'
def url = urlBase + 'records/' + recordId + '/shares/' 
HttpPost request = new HttpPost(url)
ArrayList&lt;NameValuePair>  postParameters = new ArrayList&lt;NameValuePair>()
postParameters.add(new BasicNameValuePair("account_id", "test1@indivo.org"));
postParameters.add(new BasicNameValuePair("role_label", "Guardian"))
request.setEntity(new UrlEncodedFormEntity(postParameters));
//HttpResponse response = new scripts().executeNoOAuth(key, secret, request)
HttpResponse response = new scripts().execute(key, secret, token, token_secret, request)
log.info 'Response: ' + response + '\n'
HttpEntity entity = response.getEntity()
def out = EntityUtils.toString(entity)
log.info 'Response Out: ' + out + '\n'

log.info '-'*80 + '\n'
</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="715a2493-6a76-451c-a1f1-e50630a6d98a" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="RecordShareDelete" searchProperties="true"><con:settings/><con:testStep type="groovy" name="record_share_delete" id="eb1ecaaf-37ac-45b0-b904-f3a17e7730eb"><con:settings/><con:config><script>import org.apache.http.HttpResponse
import org.apache.http.HttpEntity;
import org.apache.http.client.methods.HttpDelete
import org.apache.http.util.EntityUtils
import groovy.util.XmlSlurper
import com.soapui.scripts

log.info '-'*80 + '\n'
log.info 'Test Step Name: ' + context.testCase.getTestStepAt(context.getCurrentStepIndex()).getLabel() + '\n'

def project = context.testCase.testSuite.project;
key = project.getPropertyValue('oauth_consumer_key')
secret = project.getPropertyValue('oauth_consumer_secret')
token = project.getPropertyValue('token')
token_secret = project.getPropertyValue('token_secret')
urlBase = 'http://' + project.getPropertyValue('host') + ':' + project.getPropertyValue('port') + '/'
recordId = 'f277f731-37e3-47ac-b2b2-1043d5a0023f'
accountId = 'test1@gmail.com'
def url = urlBase + 'records/' + recordId + '/shares/' + accountId
HttpDelete request = new HttpDelete(url);
HttpResponse response = new scripts().execute(key, secret, token, token_secret, request)
log.info 'Response: '+ response + '\n'
HttpEntity entity = response.getEntity()
def out = EntityUtils.toString(entity)
log.info 'Response Out: ' + out + '\n'
def list = new XmlSlurper().parseText(out)
def carenetId = list.Carenet[0].@id
log.info 'Carenet Id: ' + carenetId + '\n'
project.setPropertyValue('carenetId', carenetId.toString());

log.info '-'*80 + '\n'
</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="8ad2281d-6ff2-42ee-b5db-e3bdd4c77154" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="AutoshareCreate" searchProperties="true"><con:settings/><con:testStep type="groovy" name="autoshare_create" id="cdc54580-5f8e-4f0f-a8c7-7970c283c829"><con:settings/><con:config><script>import org.apache.http.HttpResponse
import org.apache.http.HttpEntity;
import org.apache.http.client.methods.HttpPost
import org.apache.http.util.EntityUtils
import org.apache.commons.httpclient.NameValuePair
import org.apache.http.message.BasicNameValuePair
import org.apache.http.client.entity.UrlEncodedFormEntity
import java.util.ArrayList
import com.soapui.scripts

log.info '-'*80 + '\n'
log.info 'Test Step Name: ' + context.testCase.getTestStepAt(context.getCurrentStepIndex()).getLabel() + '\n'

def project = context.testCase.testSuite.project;
key = project.getPropertyValue('oauth_consumer_key')
secret = project.getPropertyValue('oauth_consumer_secret')
//key = 'sampleadmin_key'
//secret = 'sampleadmin_secret'
token = project.getPropertyValue('token')
token_secret = project.getPropertyValue('token_secret')
//recordId = project.getPropertyValue('recordId')
recordId = 'f277f731-37e3-47ac-b2b2-1043d5a0023f'
carenetId = '821d1064-d9a2-42ce-89c3-3ff3008db6d2'
urlBase = 'http://' + project.getPropertyValue('host') + ':' + project.getPropertyValue('port') + '/'
def url = urlBase + 'records/' + recordId +  '/autoshare/carenets/' + carenetId + '/bytype/set' 
HttpPost request = new HttpPost(url)
ArrayList&lt;NameValuePair>  postParameters = new ArrayList&lt;NameValuePair>()
postParameters.add(new BasicNameValuePair("type", "Problem"));
request.setEntity(new UrlEncodedFormEntity(postParameters));
//HttpResponse response = new scripts().executeNoOAuth(key, secret, request)
HttpResponse response = new scripts().execute(key, secret, token, token_secret, request)
log.info 'Response: ' + response + '\n'
HttpEntity entity = response.getEntity()
def out = EntityUtils.toString(entity)
log.info 'Response Out: ' + out + '\n'

log.info '-'*80 + '\n'
</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="5e573717-485e-414d-aba1-b960ba08f66d" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="AutoshareDelete" searchProperties="true"><con:settings/><con:testStep type="groovy" name="autoshare_delete" id="b1ed2e6f-2b5b-40db-83cb-068727fdaaba"><con:settings/><con:config><script>import org.apache.http.HttpResponse
import org.apache.http.HttpEntity;
import org.apache.http.client.methods.HttpPost
import org.apache.http.util.EntityUtils
import org.apache.commons.httpclient.NameValuePair
import org.apache.http.message.BasicNameValuePair
import org.apache.http.client.entity.UrlEncodedFormEntity
import java.util.ArrayList
import com.soapui.scripts

log.info '-'*80 + '\n'
log.info 'Test Step Name: ' + context.testCase.getTestStepAt(context.getCurrentStepIndex()).getLabel() + '\n'

def project = context.testCase.testSuite.project;
key = project.getPropertyValue('oauth_consumer_key')
secret = project.getPropertyValue('oauth_consumer_secret')
//key = 'sampleadmin_key'
//secret = 'sampleadmin_secret'
token = project.getPropertyValue('token')
token_secret = project.getPropertyValue('token_secret')
//recordId = project.getPropertyValue('recordId')
recordId = 'f277f731-37e3-47ac-b2b2-1043d5a0023f'
carenetId = '821d1064-d9a2-42ce-89c3-3ff3008db6d2'
urlBase = 'http://' + project.getPropertyValue('host') + ':' + project.getPropertyValue('port') + '/'
def url = urlBase + 'records/' + recordId +  '/autoshare/carenets/' + carenetId + '/bytype/unset' 
HttpPost request = new HttpPost(url)
ArrayList&lt;NameValuePair>  postParameters = new ArrayList&lt;NameValuePair>()
postParameters.add(new BasicNameValuePair("type", "Problem"));
request.setEntity(new UrlEncodedFormEntity(postParameters));
//HttpResponse response = new scripts().executeNoOAuth(key, secret, request)
HttpResponse response = new scripts().execute(key, secret, token, token_secret, request)
log.info 'Response: ' + response + '\n'
HttpEntity entity = response.getEntity()
def out = EntityUtils.toString(entity)
log.info 'Response Out: ' + out + '\n'

log.info '-'*80 + '\n'
</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="989d9f28-c32d-48c9-b9c7-8decb3e319f7" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="CarenetCreate" searchProperties="true"><con:settings/><con:testStep type="groovy" name="carenet_create" id="412048d5-b6a9-4c8e-b079-1b4fb3a3d8a4"><con:settings/><con:config><script>import org.apache.http.HttpResponse
import org.apache.http.HttpEntity;
import org.apache.http.client.methods.HttpPost
import org.apache.http.util.EntityUtils
import org.apache.commons.httpclient.NameValuePair
import org.apache.http.message.BasicNameValuePair
import org.apache.http.client.entity.UrlEncodedFormEntity
import java.util.ArrayList
import com.soapui.scripts

log.info '-'*80 + '\n'
log.info 'Test Step Name: ' + context.testCase.getTestStepAt(context.getCurrentStepIndex()).getLabel() + '\n'

def project = context.testCase.testSuite.project;
key = project.getPropertyValue('oauth_consumer_key')
secret = project.getPropertyValue('oauth_consumer_secret')
//key = 'sampleadmin_key'
//secret = 'sampleadmin_secret'
token = project.getPropertyValue('token')
token_secret = project.getPropertyValue('token_secret')
recordId = project.getPropertyValue('recordId')
//recordId = 'f277f731-37e3-47ac-b2b2-1043d5a0023f'
//carenetId = '821d1064-d9a2-42ce-89c3-3ff3008db6d2'
urlBase = 'http://' + project.getPropertyValue('host') + ':' + project.getPropertyValue('port') + '/'
def url = urlBase + 'records/' + recordId +  '/carenets/'  
HttpPost request = new HttpPost(url)
ArrayList&lt;NameValuePair>  postParameters = new ArrayList&lt;NameValuePair>()
postParameters.add(new BasicNameValuePair("name", "Test carenet"));
request.setEntity(new UrlEncodedFormEntity(postParameters));
//HttpResponse response = new scripts().executeNoOAuth(key, secret, request)
HttpResponse response = new scripts().execute(key, secret, token, token_secret, request)
log.info 'Response: ' + response + '\n'
HttpEntity entity = response.getEntity()
def out = EntityUtils.toString(entity)
log.info 'Response Out: ' + out + '\n'

log.info '-'*80 + '\n'
</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="c095641e-5276-4831-adb8-2e4a1beae054" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DocumentByRelation" searchProperties="true"><con:settings/><con:testStep type="groovy" name="get_documents_by_rel" id="eb199c76-3072-442e-993e-cb685aafc4ff"><con:settings/><con:config><script>import org.apache.http.HttpResponse
import org.apache.http.HttpEntity;
import org.apache.http.client.methods.HttpGet
import org.apache.http.util.EntityUtils
import groovy.util.XmlSlurper
import com.soapui.scripts

log.info '-'*80 + '\n'
log.info 'Test Step Name: ' + context.testCase.getTestStepAt(context.getCurrentStepIndex()).getLabel() + '\n'
	
def project = context.testCase.testSuite.project
def suite = context.testCase.testSuite
key = project.getPropertyValue('oauth_consumer_key')
secret = project.getPropertyValue('oauth_consumer_secret')
token = project.getPropertyValue('token')
token_secret = project.getPropertyValue('token_secret')
//key = 'medications@apps.indivo.org'
//secret = 'medications'
accountId = project.getPropertyValue('account_id')
recordId = project.getPropertyValue('recordId')
//recordId = '4cab53ad-bd94-4efe-a3d8-35b95cfd8773'
//pha = 'medications@apps.indivo.org'
docId = '2d42c309-016e-4d47-b1f7-8739ecb89f79'
def relation = 'followup'
urlBase = 'http://' + project.getPropertyValue('host') + ':' + project.getPropertyValue('port') + '/'
url = urlBase +'records/' + recordId + '/documents/' + docId + '/rels/' + relation + '/'
	
HttpGet request = new HttpGet(url)	
HttpResponse response = new scripts().execute(key, secret, token, token_secret, request)

log.info 'Response: ' + response + '\n'
HttpEntity entity = response.getEntity()
def out = EntityUtils.toString(entity)
log.info 'Response String: ' + out + '\n' 
//def message = new XmlSlurper().parseText(out)
//def messageId = message.Message[0].'@id'
//log.info 'message id: ' + messageId + '\n'
//suite.setPropertyValue('messageId', messageId.toString())
log.info '-'*80 + '\n'</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="bae24c82-c1de-4807-816e-6c8a2acfae5a" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="LabsList" searchProperties="true"><con:settings/><con:properties/></con:testCase><con:testCase id="43597fd2-f358-4478-8a55-aa1a4cb4abc8" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="RecorsSetOwner" searchProperties="true"><con:settings/><con:testStep type="groovy" name="record_set_owner" id="09106a92-560d-4ea9-8f13-47cb582b0418"><con:settings/><con:config><script>import org.apache.http.HttpResponse
import org.apache.http.HttpEntity;
import org.apache.http.client.methods.HttpPost
import org.apache.http.impl.client.DefaultHttpClient
import org.apache.http.util.EntityUtils;
import org.apache.commons.httpclient.NameValuePair
import org.apache.http.message.BasicNameValuePair
import org.apache.http.client.entity.UrlEncodedFormEntity
import java.util.ArrayList
import java.net.URLDecoder
import org.apache.http.entity.ByteArrayEntity
import org.apache.http.entity.StringEntity
import org.apache.http.entity.InputStreamEntity
import java.io.*
import java.io.InputStream
import com.soapui.scripts

log.info '-'*80 + '\n'	
log.info 'Test Step Name: ' + context.testCase.getTestStepAt(context.getCurrentStepIndex()).getLabel() + '\n'	
def project = context.testCase.testSuite.project
def suite = context.testCase.testSuite;
//key = project.getPropertyValue('oauth_consumer_key')
//secret = project.getPropertyValue('oauth_consumer_secret')
key = 'sampleadmin_key'
secret = 'sampleadmin_secret'
urlBase = 'http://' + project.getPropertyValue('host') + ':' + project.getPropertyValue('port') + '/'
recordId = '4b61c7d8-5c61-4f7c-87bf-252201728a69' 
url = urlBase + 'records/'+ recordId + '/owner'
HttpPost request = new HttpPost(url);
rawXml = 'test1@indivo.org'
HttpEntity en = new ByteArrayEntity(rawXml.getBytes("UTF-8"));
//request.setRequestBody(new ByteArrayEntity(rawXml.getBytes("UTF-8"))
ArrayList&lt;NameValuePair>  postParameters = new ArrayList&lt;NameValuePair>();
//InputStream inputStream=new ByteArrayInputStream(rawXml.getBytes());//init your own inputstream
//InputStreamEntity inputStreamEntity=new InputStreamEntity(inputStream,rawXml.getBytes());
//httppost.setEntity(inputStreamEntity);
request.setEntity(new UrlEncodedFormEntity(postParameters));
//request.setEntity(new StringEntity(rawXml));
request.setEntity(en)
HttpResponse response = new scripts().executeNoOAuth(key, secret, request)
HttpEntity entity = response.getEntity()
String responseString = EntityUtils.toString(entity, "UTF-8")
log.info 'Response: ' + responseString

log.info '-'*80 + '\n'</script></con:config></con:testStep><con:properties/></con:testCase><con:properties><con:property><con:name>token</con:name><con:value>Qi9hYJFKJJxjfdsSPJMN</con:value></con:property><con:property><con:name>token_secret</con:name><con:value>QvQXxP2ZfaRzYngwIZh5</con:value></con:property><con:property><con:name>account_id</con:name><con:value>test1@gmail.com</con:value></con:property></con:properties></con:testSuite><con:testSuite id="7e70b70f-b0da-43b9-9cb9-7cb82b4cec57" name="General"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="f8137094-e058-4220-852d-88a811fc11e8" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="version" searchProperties="true"><con:settings/><con:testStep type="groovy" name="get_version" id="376367a3-478b-4a8d-9904-d1d2d0ea44f9"><con:settings/><con:config><script>import org.apache.http.HttpResponse
import org.apache.http.HttpEntity;
import org.apache.http.client.methods.HttpGet
import org.apache.http.util.EntityUtils
import groovy.util.XmlSlurper
import com.soapui.scripts

log.info '-'*80 + '\n'
log.info 'Test Step Name: ' + context.testCase.getTestStepAt(context.getCurrentStepIndex()).getLabel() + '\n'
	
def project = context.testCase.testSuite.project
def suite = context.testCase.testSuite
key = project.getPropertyValue('oauth_consumer_key')
secret = project.getPropertyValue('oauth_consumer_secret')
token = project.getPropertyValue('token')
token_secret = project.getPropertyValue('token_secret')
//key = 'medications@apps.indivo.org'
//secret = 'medications'
accountId = project.getPropertyValue('account_id')
recordId = project.getPropertyValue('recordId')
//recordId = '4cab53ad-bd94-4efe-a3d8-35b95cfd8773'

urlBase = 'http://' + project.getPropertyValue('host') + ':' + project.getPropertyValue('port') + '/'
url = urlBase +'version' 
	
HttpGet request = new HttpGet(url)	
HttpResponse response = new scripts().execute(key, secret, token, token_secret, request)

log.info 'Response: ' + response + '\n'
HttpEntity entity = response.getEntity()
def out = EntityUtils.toString(entity)
log.info 'Response String: ' + out + '\n' 
//def message = new XmlSlurper().parseText(out)
//def messageId = message.Message[0].'@id'
//log.info 'message id: ' + messageId + '\n'
//suite.setPropertyValue('messageId', messageId.toString())
log.info '-'*80 + '\n'</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="c73ee560-6385-4390-8be2-a55338b71537" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Ontology" searchProperties="true"><con:settings/><con:testStep type="groovy" name="smart_ontology" id="05ae8a22-6c17-435b-b0d8-b33056a4ff44"><con:settings/><con:config><script>import org.apache.http.HttpResponse
import org.apache.http.HttpEntity;
import org.apache.http.client.methods.HttpGet
import org.apache.http.util.EntityUtils
import groovy.util.XmlSlurper
import com.soapui.scripts

log.info '-'*80 + '\n'
log.info 'Test Step Name: ' + context.testCase.getTestStepAt(context.getCurrentStepIndex()).getLabel() + '\n'
	
def project = context.testCase.testSuite.project
def suite = context.testCase.testSuite
key = project.getPropertyValue('oauth_consumer_key')
secret = project.getPropertyValue('oauth_consumer_secret')
token = project.getPropertyValue('token')
token_secret = project.getPropertyValue('token_secret')
//key = 'medications@apps.indivo.org'
//secret = 'medications'
accountId = project.getPropertyValue('account_id')
recordId = project.getPropertyValue('recordId')
//recordId = '4cab53ad-bd94-4efe-a3d8-35b95cfd8773'

urlBase = 'http://' + project.getPropertyValue('host') + ':' + project.getPropertyValue('port') + '/'
url = urlBase +'ontology' 
	
HttpGet request = new HttpGet(url)	
HttpResponse response = new scripts().execute(key, secret, token, token_secret, request)

log.info 'Response: ' + response + '\n'
HttpEntity entity = response.getEntity()
def out = EntityUtils.toString(entity)
log.info 'Response String: ' + out + '\n' 
log.info '-'*80 + '\n'</script></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:testSuite id="8358b9bd-ecbc-410a-92a6-4653d69b15a1" name="Carenet"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="e68e8596-98c7-4624-9636-a39472868aee" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="CarenetAccountList" searchProperties="true"><con:settings/><con:testStep type="groovy" name="carenet_account_list" id="78fcfb1e-d913-4123-a5c5-1bf736c1ba9f"><con:settings/><con:config><script>import org.apache.http.HttpResponse
import org.apache.http.HttpEntity;
import org.apache.http.client.methods.HttpGet
import org.apache.http.util.EntityUtils;
import com.soapui.scripts

log.info '-'*80 + '\n'
log.info 'Test Step Name: ' + context.testCase.getTestStepAt(context.getCurrentStepIndex()).getLabel() + '\n'

def project = context.testCase.testSuite.project
def suite = context.testCase.testSuite

key = project.getPropertyValue('oauth_consumer_key')
secret = project.getPropertyValue('oauth_consumer_secret')
token = project.getPropertyValue('token')
token_secret = project.getPropertyValue('token_secret')
accountId = project.getPropertyValue('account_id')
urlBase = 'http://' + project.getPropertyValue('host') + ':' + project.getPropertyValue('port') + '/'
carenetId = 'd5d30d98-3b3a-4bd2-9015-fd0bba3b43f1'

def url = urlBase + 'carenets/' + carenetId + '/accounts/'
HttpGet request = new HttpGet(url);

HttpResponse response = new scripts().execute(key, secret, token, token_secret, request)
log.info 'Response: ' + response + '\n'
HttpEntity entity = response.getEntity()
def out = EntityUtils.toString(entity)
log.info 'Response String: ' + out + '\n'

log.info '-'*80 + '\n'</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="5275cc51-4070-4c73-832c-9dbc7649b50a" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="CarenetAccountCreate" searchProperties="true"><con:settings/><con:testStep type="groovy" name="carenet_account_create" id="d5dfafe1-a5bb-4ea3-9b19-13b94c36fc26"><con:settings/><con:config><script>import org.apache.http.HttpResponse
import org.apache.http.HttpEntity;
import org.apache.http.client.methods.HttpPost
import org.apache.http.util.EntityUtils
import org.apache.commons.httpclient.NameValuePair
import org.apache.http.message.BasicNameValuePair
import org.apache.http.client.entity.UrlEncodedFormEntity
import java.util.ArrayList
import com.soapui.scripts

log.info '-'*80 + '\n'
log.info 'Test Step Name: ' + context.testCase.getTestStepAt(context.getCurrentStepIndex()).getLabel() + '\n'

def project = context.testCase.testSuite.project
def suite = context.testCase.testSuite

key = project.getPropertyValue('oauth_consumer_key')
secret = project.getPropertyValue('oauth_consumer_secret')
token = project.getPropertyValue('token')
token_secret = project.getPropertyValue('token_secret')
accountId = project.getPropertyValue('account_id')
urlBase = 'http://' + project.getPropertyValue('host') + ':' + project.getPropertyValue('port') + '/'
carenetId = 'f8cc1202-cae8-449f-9c59-54605a0767ba'

def url = urlBase + 'carenets/' + carenetId + '/accounts/'
HttpPost request = new HttpPost(url);
ArrayList&lt;NameValuePair>  postParameters = new ArrayList&lt;NameValuePair>();
postParameters.add(new BasicNameValuePair("write", "true"))
postParameters.add(new BasicNameValuePair("account_id", "test1@indivo.org"))
request.setEntity(new UrlEncodedFormEntity(postParameters))

HttpResponse response = new scripts().execute(key, secret, token, token_secret, request)
log.info 'Response: ' + response + '\n'
HttpEntity entity = response.getEntity()
def out = EntityUtils.toString(entity)
log.info 'Response String: ' + out + '\n'

log.info '-'*80 + '\n'</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="3599ce51-f637-4fa0-8dcb-e95d751fe557" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="CarenetAccountDelete" searchProperties="true"><con:settings/><con:testStep type="groovy" name="carenet_account_delete" id="ed4a91bc-2174-49d4-bf28-b56cf64e3636"><con:settings/><con:config><script>import org.apache.http.HttpResponse
import org.apache.http.HttpEntity;
import org.apache.http.client.methods.HttpDelete
import org.apache.http.util.EntityUtils;
import com.soapui.scripts

log.info '-'*80 + '\n'
log.info 'Test Step Name: ' + context.testCase.getTestStepAt(context.getCurrentStepIndex()).getLabel() + '\n'

def project = context.testCase.testSuite.project
def suite = context.testCase.testSuite

key = project.getPropertyValue('oauth_consumer_key')
secret = project.getPropertyValue('oauth_consumer_secret')
token = project.getPropertyValue('token')
token_secret = project.getPropertyValue('token_secret')
accountId = project.getPropertyValue('account_id')
urlBase = 'http://' + project.getPropertyValue('host') + ':' + project.getPropertyValue('port') + '/'
carenetId = '821d1064-d9a2-42ce-89c3-3ff3008db6d2'
accountId = 'test3@gmail.com'

def url = urlBase + 'carenets/' + carenetId + '/accounts/' + accountId
HttpDelete request = new HttpDelete(url);

HttpResponse response = new scripts().execute(key, secret, token, token_secret, request)
log.info 'Response: ' + response + '\n'
HttpEntity entity = response.getEntity()
def out = EntityUtils.toString(entity)
log.info 'Response String: ' + out + '\n'

log.info '-'*80 + '\n'</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="6c98b4b0-fdc9-4f3c-8931-e942378a61a5" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="CarenetAccountPermissions" searchProperties="true"><con:settings/><con:testStep type="groovy" name="carenet_account_permissions" id="f8c2a100-8b0b-420c-a2f5-405086a100ce"><con:settings/><con:config><script>import org.apache.http.HttpResponse
import org.apache.http.HttpEntity;
import org.apache.http.client.methods.HttpGet
import org.apache.http.util.EntityUtils;
import com.soapui.scripts

log.info '-'*80 + '\n'
log.info 'Test Step Name: ' + context.testCase.getTestStepAt(context.getCurrentStepIndex()).getLabel() + '\n'

def project = context.testCase.testSuite.project
def suite = context.testCase.testSuite

key = project.getPropertyValue('oauth_consumer_key')
secret = project.getPropertyValue('oauth_consumer_secret')
token = project.getPropertyValue('token')
token_secret = project.getPropertyValue('token_secret')
accountId = project.getPropertyValue('account_id')
urlBase = 'http://' + project.getPropertyValue('host') + ':' + project.getPropertyValue('port') + '/'
carenetId = '821d1064-d9a2-42ce-89c3-3ff3008db6d2'
accountId = 'test1@gmail.com'

def url = urlBase + 'carenets/' + carenetId + '/accounts/' + accountId + '/permissions'
HttpGet request = new HttpGet(url);

HttpResponse response = new scripts().execute(key, secret, token, token_secret, request)
log.info 'Response: ' + response + '\n'
HttpEntity entity = response.getEntity()
def out = EntityUtils.toString(entity)
log.info 'Response String: ' + out + '\n'

log.info '-'*80 + '\n'</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="46674b20-0bde-4dd0-8304-c01f12bdda20" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="CarenetAppsList" searchProperties="true"><con:settings/><con:testStep type="groovy" name="carenet_apps_list" id="e823f856-1ce3-4c9b-a1bb-38a246ac08c4"><con:settings/><con:config><script>import org.apache.http.HttpResponse
import org.apache.http.HttpEntity;
import org.apache.http.client.methods.HttpGet
import org.apache.http.util.EntityUtils;
import com.soapui.scripts

log.info '-'*80 + '\n'
log.info 'Test Step Name: ' + context.testCase.getTestStepAt(context.getCurrentStepIndex()).getLabel() + '\n'

def project = context.testCase.testSuite.project;
key = project.getPropertyValue('oauth_consumer_key')
secret = project.getPropertyValue('oauth_consumer_secret')
token = project.getPropertyValue('token')
token_secret = project.getPropertyValue('token_secret')
carenetId = '821d1064-d9a2-42ce-89c3-3ff3008db6d2'

urlBase = 'http://' + project.getPropertyValue('host') + ':' + project.getPropertyValue('port') + '/'
def url = urlBase + 'carenets/' + carenetId + '/apps/'
HttpGet request = new HttpGet(url);
HttpResponse response = new scripts().execute(key, secret, token, token_secret, request)
log.info 'Response: ' + response + '\n'
HttpEntity entity = response.getEntity()
def out = EntityUtils.toString(entity)
log.info 'Response Out: ' + out + '\n'

log.info '-'*80 + '\n'
</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="61a2fb90-3aed-4bfe-98c2-b5f0804c6312" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="CarenetAppsDelete" searchProperties="true"><con:settings/><con:testStep type="groovy" name="carenet_apps_delete" id="347ca33e-7505-4226-9429-6434a77433b6"><con:settings/><con:config><script>import org.apache.http.HttpResponse
import org.apache.http.HttpEntity;
import org.apache.http.client.methods.HttpDelete
import org.apache.http.util.EntityUtils;
import com.soapui.scripts

log.info '-'*80 + '\n'
log.info 'Test Step Name: ' + context.testCase.getTestStepAt(context.getCurrentStepIndex()).getLabel() + '\n'

def project = context.testCase.testSuite.project;
key = project.getPropertyValue('oauth_consumer_key')
secret = project.getPropertyValue('oauth_consumer_secret')
token = project.getPropertyValue('token')
token_secret = project.getPropertyValue('token_secret')
carenetId = '821d1064-d9a2-42ce-89c3-3ff3008db6d2'
pha = 'allergies@apps.indivo.org'

urlBase = 'http://' + project.getPropertyValue('host') + ':' + project.getPropertyValue('port') + '/'
def url = urlBase + 'carenets/' + carenetId + '/apps/' + pha
HttpDelete request = new HttpDelete(url);
HttpResponse response = new scripts().execute(key, secret, token, token_secret, request)
log.info 'Response: ' + response + '\n'
HttpEntity entity = response.getEntity()
def out = EntityUtils.toString(entity)
log.info 'Response Out: ' + out + '\n'

log.info '-'*80 + '\n'
</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="bcd64b2d-0d5b-4df1-b884-ec2d7f7b05d1" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="CarenetAppsCreate" searchProperties="true"><con:settings/><con:testStep type="groovy" name="carenet_apps_create" id="80c9357e-0abc-415b-b67c-4e816aad070c"><con:settings/><con:config><script>import org.apache.http.HttpResponse
import org.apache.http.HttpEntity;
import org.apache.http.client.methods.HttpPut
import org.apache.http.util.EntityUtils;
import com.soapui.scripts

log.info '-'*80 + '\n'
log.info 'Test Step Name: ' + context.testCase.getTestStepAt(context.getCurrentStepIndex()).getLabel() + '\n'

def project = context.testCase.testSuite.project;
key = project.getPropertyValue('oauth_consumer_key')
secret = project.getPropertyValue('oauth_consumer_secret')
token = project.getPropertyValue('token')
token_secret = project.getPropertyValue('token_secret')
carenetId = '821d1064-d9a2-42ce-89c3-3ff3008db6d2'
pha = 'labs@apps.indivo.org'

urlBase = 'http://' + project.getPropertyValue('host') + ':' + project.getPropertyValue('port') + '/'
def url = urlBase + 'carenets/' + carenetId + '/apps/' + pha
HttpPut request = new HttpPut(url);
HttpResponse response = new scripts().execute(key, secret, token, token_secret, request)
log.info 'Response: ' + response + '\n'
HttpEntity entity = response.getEntity()
def out = EntityUtils.toString(entity)
log.info 'Response Out: ' + out + '\n'

log.info '-'*80 + '\n'
</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="54d33219-5a60-4211-a314-4b7627b92efb" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ReadDemographicsCarenet" searchProperties="true"><con:settings/><con:testStep type="groovy" name="read_demographics_carenet" id="573fab16-1a12-41ef-817b-00686d06a569"><con:settings/><con:config><script>import org.apache.http.HttpResponse
import org.apache.http.HttpEntity;
import org.apache.http.client.methods.HttpGet
import org.apache.http.util.EntityUtils;
import com.soapui.scripts

log.info '-'*80 + '\n'
log.info 'Test Step Name: ' + context.testCase.getTestStepAt(context.getCurrentStepIndex()).getLabel() + '\n'

def project = context.testCase.testSuite.project;
key = project.getPropertyValue('oauth_consumer_key')
secret = project.getPropertyValue('oauth_consumer_secret')
token = project.getPropertyValue('token')
token_secret = project.getPropertyValue('token_secret')
carenetId = '821d1064-d9a2-42ce-89c3-3ff3008db6d2'

urlBase = 'http://' + project.getPropertyValue('host') + ':' + project.getPropertyValue('port') + '/'
def url = urlBase + 'carenets/' + carenetId + '/demographics'
HttpGet request = new HttpGet(url);
HttpResponse response = new scripts().execute(key, secret, token, token_secret, request)
log.info 'Response: ' + response + '\n'
HttpEntity entity = response.getEntity()
def out = EntityUtils.toString(entity)
log.info 'Response Out: ' + out + '\n'

log.info '-'*80 + '\n'
</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="3d3780ec-62b0-41d2-aa76-c76b986911b6" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="CarenetDocumentList" searchProperties="true"><con:settings/><con:testStep type="groovy" name="carenet_document_list" id="cda9d1e3-8744-4013-b7c9-7e92d075f941"><con:settings/><con:config><script>import org.apache.http.HttpResponse
import org.apache.http.HttpEntity;
import org.apache.http.client.methods.HttpGet
import org.apache.http.util.EntityUtils;
import com.soapui.scripts

log.info '-'*80 + '\n'
log.info 'Test Step Name: ' + context.testCase.getTestStepAt(context.getCurrentStepIndex()).getLabel() + '\n'

def project = context.testCase.testSuite.project;
key = project.getPropertyValue('oauth_consumer_key')
secret = project.getPropertyValue('oauth_consumer_secret')
token = project.getPropertyValue('token')
token_secret = project.getPropertyValue('token_secret')
carenetId = '821d1064-d9a2-42ce-89c3-3ff3008db6d2'

urlBase = 'http://' + project.getPropertyValue('host') + ':' + project.getPropertyValue('port') + '/'
def url = urlBase + 'carenets/' + carenetId + '/documents/'
HttpGet request = new HttpGet(url);
HttpResponse response = new scripts().execute(key, secret, token, token_secret, request)
log.info 'Response: ' + response + '\n'
HttpEntity entity = response.getEntity()
def out = EntityUtils.toString(entity)
log.info 'Response Out: ' + out + '\n'

log.info '-'*80 + '\n'
</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="ad79bdd9-5bff-4fc5-8a97-33e82add8418" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="CarenetRecord" searchProperties="true"><con:settings/><con:testStep type="groovy" name="carenet_record" id="c71e025b-d81a-469d-a534-9d08e9fd870d"><con:settings/><con:config><script>import org.apache.http.HttpResponse
import org.apache.http.HttpEntity;
import org.apache.http.client.methods.HttpGet
import org.apache.http.util.EntityUtils;
import com.soapui.scripts

log.info '-'*80 + '\n'
log.info 'Test Step Name: ' + context.testCase.getTestStepAt(context.getCurrentStepIndex()).getLabel() + '\n'

def project = context.testCase.testSuite.project;
key = project.getPropertyValue('oauth_consumer_key')
secret = project.getPropertyValue('oauth_consumer_secret')
token = project.getPropertyValue('token')
token_secret = project.getPropertyValue('token_secret')
carenetId = '821d1064-d9a2-42ce-89c3-3ff3008db6d2'

urlBase = 'http://' + project.getPropertyValue('host') + ':' + project.getPropertyValue('port') + '/'
def url = urlBase + 'carenets/' + carenetId + '/record'
HttpGet request = new HttpGet(url);
HttpResponse response = new scripts().execute(key, secret, token, token_secret, request)
log.info 'Response: ' + response + '\n'
HttpEntity entity = response.getEntity()
def out = EntityUtils.toString(entity)
log.info 'Response Out: ' + out + '\n'

log.info '-'*80 + '\n'
</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="f0999b3a-fd50-44fc-b2f0-db7661e186b2" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="CarenetRename" searchProperties="true"><con:settings/><con:testStep type="groovy" name="carenet_rename" id="662f66f0-7071-4ad4-8f8b-adae2d62b2ba"><con:settings/><con:config><script>import org.apache.http.HttpResponse
import org.apache.http.HttpEntity;
import org.apache.http.client.methods.HttpPost
import org.apache.http.util.EntityUtils
import org.apache.commons.httpclient.NameValuePair
import org.apache.http.message.BasicNameValuePair
import org.apache.http.client.entity.UrlEncodedFormEntity
import java.util.ArrayList
import com.soapui.scripts

log.info '-'*80 + '\n'
log.info 'Test Step Name: ' + context.testCase.getTestStepAt(context.getCurrentStepIndex()).getLabel() + '\n'

def project = context.testCase.testSuite.project
def suite = context.testCase.testSuite

key = project.getPropertyValue('oauth_consumer_key')
secret = project.getPropertyValue('oauth_consumer_secret')
token = project.getPropertyValue('token')
token_secret = project.getPropertyValue('token_secret')
accountId = project.getPropertyValue('account_id')
urlBase = 'http://' + project.getPropertyValue('host') + ':' + project.getPropertyValue('port') + '/'
carenetId = '821d1064-d9a2-42ce-89c3-3ff3008db6d2'

def url = urlBase + 'carenets/' + carenetId + '/rename'
HttpPost request = new HttpPost(url);
ArrayList&lt;NameValuePair>  postParameters = new ArrayList&lt;NameValuePair>();
postParameters.add(new BasicNameValuePair("name", "Famil-new"))
request.setEntity(new UrlEncodedFormEntity(postParameters))

HttpResponse response = new scripts().execute(key, secret, token, token_secret, request)
log.info 'Response: ' + response + '\n'
HttpEntity entity = response.getEntity()
def out = EntityUtils.toString(entity)
log.info 'Response String: ' + out + '\n'

log.info '-'*80 + '\n'</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="b57c2dc0-725a-4719-a37a-fd02e58ed7d6" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="CarenetEquipmentList" searchProperties="true"><con:settings/><con:testStep type="groovy" name="carenet_equipment_list" id="7c64947e-8e2c-410f-8698-a04968be19fb"><con:settings/><con:config><script>import org.apache.http.HttpResponse
import org.apache.http.HttpEntity;
import org.apache.http.client.methods.HttpGet
import org.apache.http.util.EntityUtils
import groovy.util.XmlSlurper
import com.soapui.scripts

log.info '-'*80 + '\n'
log.info 'Test Step Name: ' + context.testCase.getTestStepAt(context.getCurrentStepIndex()).getLabel() + '\n'
	
def project = context.testCase.testSuite.project
def suite = context.testCase.testSuite
key = project.getPropertyValue('oauth_consumer_key')
secret = project.getPropertyValue('oauth_consumer_secret')
token = project.getPropertyValue('token')
token_secret = project.getPropertyValue('token_secret')
accountId = project.getPropertyValue('account_id')
recordId = project.getPropertyValue('recordId')
carenetId = '821d1064-d9a2-42ce-89c3-3ff3008db6d2'

urlBase = 'http://' + project.getPropertyValue('host') + ':' + project.getPropertyValue('port') + '/'
url = urlBase +'carenets/' + carenetId  + '/reports/minimal/equipment/'
	
HttpGet request = new HttpGet(url)	
HttpResponse response = new scripts().execute(key, secret, token, token_secret, request)

log.info 'Response: ' + response + '\n'
HttpEntity entity = response.getEntity()
def out = EntityUtils.toString(entity)
log.info 'Response String: ' + out + '\n' 
log.info '-'*80 + '\n'</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="c90d82ba-96ec-4666-bd36-a96f61280473" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="CarenetMeasurementList" searchProperties="true"><con:settings/><con:testStep type="groovy" name="carenet_measurement_list" id="f0c8526a-6d28-4a15-b3eb-6192998e777f"><con:settings/><con:config><script>import org.apache.http.HttpResponse
import org.apache.http.HttpEntity;
import org.apache.http.client.methods.HttpGet
import org.apache.http.util.EntityUtils
import groovy.util.XmlSlurper
import com.soapui.scripts

log.info '-'*80 + '\n'
log.info 'Test Step Name: ' + context.testCase.getTestStepAt(context.getCurrentStepIndex()).getLabel() + '\n'
	
def project = context.testCase.testSuite.project
def suite = context.testCase.testSuite
key = project.getPropertyValue('oauth_consumer_key')
secret = project.getPropertyValue('oauth_consumer_secret')
token = project.getPropertyValue('token')
token_secret = project.getPropertyValue('token_secret')
accountId = project.getPropertyValue('account_id')
recordId = project.getPropertyValue('recordId')
carenetId = '821d1064-d9a2-42ce-89c3-3ff3008db6d2'

urlBase = 'http://' + project.getPropertyValue('host') + ':' + project.getPropertyValue('port') + '/'
url = urlBase +'carenets/' + carenetId  + '/reports/minimal/measurements/'+'3141-9/' + '?status=active&amp;limit=100&amp;offset=0'
	
HttpGet request = new HttpGet(url)	
HttpResponse response = new scripts().execute(key, secret, token, token_secret, request)

log.info 'Response: ' + response + '\n'
HttpEntity entity = response.getEntity()
def out = EntityUtils.toString(entity)
log.info 'Response String: ' + out + '\n' 
//def message = new XmlSlurper().parseText(out)
//def messageId = message.Message[0].'@id'
//log.info 'message id: ' + messageId + '\n'
//suite.setPropertyValue('messageId', messageId.toString())
log.info '-'*80 + '\n'</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="562f76a5-aa6c-4dfd-95ed-83f566aa2058" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="CarenetProcedureList" searchProperties="true"><con:settings/><con:testStep type="groovy" name="carenet_procedure_list" id="4275c69f-0ba1-460a-96f0-3bdee14e352b"><con:settings/><con:config><script>import org.apache.http.HttpResponse
import org.apache.http.HttpEntity;
import org.apache.http.client.methods.HttpGet
import org.apache.http.util.EntityUtils
import groovy.util.XmlSlurper
import com.soapui.scripts

log.info '-'*80 + '\n'
log.info 'Test Step Name: ' + context.testCase.getTestStepAt(context.getCurrentStepIndex()).getLabel() + '\n'
	
def project = context.testCase.testSuite.project
def suite = context.testCase.testSuite
key = project.getPropertyValue('oauth_consumer_key')
secret = project.getPropertyValue('oauth_consumer_secret')
token = project.getPropertyValue('token')
token_secret = project.getPropertyValue('token_secret')
accountId = project.getPropertyValue('account_id')
recordId = project.getPropertyValue('recordId')
carenetId = '821d1064-d9a2-42ce-89c3-3ff3008db6d2'

urlBase = 'http://' + project.getPropertyValue('host') + ':' + project.getPropertyValue('port') + '/'
url = urlBase +'carenets/' + carenetId  + '/reports/minimal/procedures/' + '?status=active&amp;limit=100&amp;offset=0'
	
HttpGet request = new HttpGet(url)	
HttpResponse response = new scripts().execute(key, secret, token, token_secret, request)

log.info 'Response: ' + response + '\n'
HttpEntity entity = response.getEntity()
def out = EntityUtils.toString(entity)
log.info 'Response String: ' + out + '\n' 
log.info '-'*80 + '\n'</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="ec3c37ba-2528-44c6-ac85-411f3066094b" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="CarenetSimpleClinicalNotes" searchProperties="true"><con:settings/><con:testStep type="groovy" name="carenet_simple_clinical_notes_list" id="f502ce0c-c3b4-4099-83a0-b38931008906"><con:settings/><con:config><script>import org.apache.http.HttpResponse
import org.apache.http.HttpEntity;
import org.apache.http.client.methods.HttpGet
import org.apache.http.util.EntityUtils
import groovy.util.XmlSlurper
import com.soapui.scripts

log.info '-'*80 + '\n'
log.info 'Test Step Name: ' + context.testCase.getTestStepAt(context.getCurrentStepIndex()).getLabel() + '\n'
	
def project = context.testCase.testSuite.project
def suite = context.testCase.testSuite
key = project.getPropertyValue('oauth_consumer_key')
secret = project.getPropertyValue('oauth_consumer_secret')
token = project.getPropertyValue('token')
token_secret = project.getPropertyValue('token_secret')
accountId = project.getPropertyValue('account_id')
recordId = project.getPropertyValue('recordId')
carenetId = '821d1064-d9a2-42ce-89c3-3ff3008db6d2'

urlBase = 'http://' + project.getPropertyValue('host') + ':' + project.getPropertyValue('port') + '/'
url = urlBase +'carenets/' + carenetId  + '/reports/minimal/simple-clinical-notes/' + '?status=active&amp;limit=100&amp;offset=0'
	
HttpGet request = new HttpGet(url)	
HttpResponse response = new scripts().execute(key, secret, token, token_secret, request)

log.info 'Response: ' + response + '\n'
HttpEntity entity = response.getEntity()
def out = EntityUtils.toString(entity)
log.info 'Response String: ' + out + '\n' 
log.info '-'*80 + '\n'</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="a8940cc7-81b4-4744-8079-9ca6e3d71616" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="CarenetGenericList" searchProperties="true"><con:settings/><con:testStep type="groovy" name="carenet_generic_list" id="7646c568-8148-4613-9f45-27a817998640"><con:settings/><con:config><script>import org.apache.http.HttpResponse
import org.apache.http.HttpEntity;
import org.apache.http.client.methods.HttpGet
import org.apache.http.util.EntityUtils
import groovy.util.XmlSlurper
import com.soapui.scripts

log.info '-'*80 + '\n'
log.info 'Test Step Name: ' + context.testCase.getTestStepAt(context.getCurrentStepIndex()).getLabel() + '\n'
	
def project = context.testCase.testSuite.project
def suite = context.testCase.testSuite
key = project.getPropertyValue('oauth_consumer_key')
secret = project.getPropertyValue('oauth_consumer_secret')
token = project.getPropertyValue('token')
token_secret = project.getPropertyValue('token_secret')
accountId = project.getPropertyValue('account_id')
recordId = project.getPropertyValue('recordId')
carenetId = '821d1064-d9a2-42ce-89c3-3ff3008db6d2'
model = 'Problem'
urlBase = 'http://' + project.getPropertyValue('host') + ':' + project.getPropertyValue('port') + '/'
url = urlBase +'carenets/' + carenetId  + '/reports/' + model + '/' + '?status=active&amp;limit=100&amp;offset=0' + '&amp;response_format=' + 'application%2Fjson'
	
HttpGet request = new HttpGet(url)	
HttpResponse response = new scripts().execute(key, secret, token, token_secret, request)

log.info 'Response: ' + response + '\n'
HttpEntity entity = response.getEntity()
def out = EntityUtils.toString(entity)
log.info 'Response String: ' + out + '\n' 
log.info '-'*80 + '\n'</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="e7d0736a-243c-455b-bd1f-df2d9656601b" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="CarenetCreate" searchProperties="true"><con:settings/><con:testStep type="groovy" name="carenet_create" id="5bfcc9d2-89ba-4c02-80d3-36cce00edaac"><con:settings/><con:config><script>import org.apache.http.HttpResponse
import org.apache.http.HttpEntity;
import org.apache.http.client.methods.HttpPost
import org.apache.http.util.EntityUtils
import org.apache.commons.httpclient.NameValuePair
import org.apache.http.message.BasicNameValuePair
import org.apache.http.client.entity.UrlEncodedFormEntity
import java.util.ArrayList
import com.soapui.scripts

log.info '-'*80 + '\n'
log.info 'Test Step Name: ' + context.testCase.getTestStepAt(context.getCurrentStepIndex()).getLabel() + '\n'

def project = context.testCase.testSuite.project
def suite = context.testCase.testSuite

key = project.getPropertyValue('oauth_consumer_key')
secret = project.getPropertyValue('oauth_consumer_secret')
token = project.getPropertyValue('token')
token_secret = project.getPropertyValue('token_secret')
accountId = project.getPropertyValue('account_id')
urlBase = 'http://' + project.getPropertyValue('host') + ':' + project.getPropertyValue('port') + '/'
recordId = project.getPropertyValue('recordId')

def url = urlBase + 'records/' + recordId + '/carenets/' 
HttpPost request = new HttpPost(url);
ArrayList&lt;NameValuePair>  postParameters = new ArrayList&lt;NameValuePair>();
postParameters.add(new BasicNameValuePair("name", "Sudha-carenet"))
request.setEntity(new UrlEncodedFormEntity(postParameters))

HttpResponse response = new scripts().execute(key, secret, token, token_secret, request)
log.info 'Response: ' + response + '\n'
HttpEntity entity = response.getEntity()
def out = EntityUtils.toString(entity)
log.info 'Response String: ' + out + '\n'

log.info '-'*80 + '\n'
</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="80387702-e5c1-4580-9809-ba3023ec3abd" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="CarenetDocument" searchProperties="true"><con:settings/><con:testStep type="groovy" name="carenet_document" id="4bcc6ef6-aa12-4324-b279-e4854190d264"><con:settings/><con:config><script>import org.apache.http.HttpResponse
import org.apache.http.HttpEntity;
import org.apache.http.client.methods.HttpGet
import org.apache.http.util.EntityUtils;
import com.soapui.scripts

log.info '-'*80 + '\n'
log.info 'Test Step Name: ' + context.testCase.getTestStepAt(context.getCurrentStepIndex()).getLabel() + '\n'

def project = context.testCase.testSuite.project;
key = project.getPropertyValue('oauth_consumer_key')
secret = project.getPropertyValue('oauth_consumer_secret')
token = project.getPropertyValue('token')
token_secret = project.getPropertyValue('token_secret')
carenetId = '821d1064-d9a2-42ce-89c3-3ff3008db6d2'
documentId = '11f8c429-5ce3-4c15-8269-c6af939d1291'

urlBase = 'http://' + project.getPropertyValue('host') + ':' + project.getPropertyValue('port') + '/'
def url = urlBase + 'carenets/' + carenetId + '/documents/' + documentId
HttpGet request = new HttpGet(url);
HttpResponse response = new scripts().execute(key, secret, token, token_secret, request)
log.info 'Response: ' + response + '\n'
HttpEntity entity = response.getEntity()
def out = EntityUtils.toString(entity)
log.info 'Response Out: ' + out + '\n'

log.info '-'*80 + '\n'
</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="46c56b89-011d-46e0-96cf-c1c718c44cde" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="CarenetDocumentMeta" searchProperties="true"><con:settings/><con:testStep type="groovy" name="carenet_document_meta" id="97281978-29c5-4be1-a079-6502e5919b7c"><con:settings/><con:config><script>import org.apache.http.HttpResponse
import org.apache.http.HttpEntity;
import org.apache.http.client.methods.HttpGet
import org.apache.http.util.EntityUtils;
import com.soapui.scripts

log.info '-'*80 + '\n'
log.info 'Test Step Name: ' + context.testCase.getTestStepAt(context.getCurrentStepIndex()).getLabel() + '\n'

def project = context.testCase.testSuite.project;
key = project.getPropertyValue('oauth_consumer_key')
secret = project.getPropertyValue('oauth_consumer_secret')
token = project.getPropertyValue('token')
token_secret = project.getPropertyValue('token_secret')
carenetId = '821d1064-d9a2-42ce-89c3-3ff3008db6d2'
documentId = '11f8c429-5ce3-4c15-8269-c6af939d1291'

urlBase = 'http://' + project.getPropertyValue('host') + ':' + project.getPropertyValue('port') + '/'
def url = urlBase + 'carenets/' + carenetId + '/documents/' + documentId + '/meta'
HttpGet request = new HttpGet(url);
HttpResponse response = new scripts().execute(key, secret, token, token_secret, request)
log.info 'Response: ' + response + '\n'
HttpEntity entity = response.getEntity()
def out = EntityUtils.toString(entity)
log.info 'Response Out: ' + out + '\n'

log.info '-'*80 + '\n'
</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="4a70145f-410b-4b7a-8c72-e85900d036f5" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="CarenetDelete" searchProperties="true"><con:settings/><con:testStep type="groovy" name="carenet_delete" id="1916911d-fe4d-497a-9112-941e33d1ec8f"><con:settings/><con:config><script>import org.apache.http.HttpResponse
import org.apache.http.HttpEntity;
import org.apache.http.client.methods.HttpDelete
import org.apache.http.util.EntityUtils;
import com.soapui.scripts

log.info '-'*80 + '\n'
log.info 'Test Step Name: ' + context.testCase.getTestStepAt(context.getCurrentStepIndex()).getLabel() + '\n'

def project = context.testCase.testSuite.project;
key = project.getPropertyValue('oauth_consumer_key')
secret = project.getPropertyValue('oauth_consumer_secret')
token = project.getPropertyValue('token')
token_secret = project.getPropertyValue('token_secret')
carenetId = '683138df-29ff-4b7e-84cd-95c218815284'
//documentId = '11f8c429-5ce3-4c15-8269-c6af939d1291'

urlBase = 'http://' + project.getPropertyValue('host') + ':' + project.getPropertyValue('port') + '/'
def url = urlBase + 'carenets/' + carenetId 
HttpDelete request = new HttpDelete(url);
HttpResponse response = new scripts().execute(key, secret, token, token_secret, request)
log.info 'Response: ' + response + '\n'
HttpEntity entity = response.getEntity()
def out = EntityUtils.toString(entity)
log.info 'Response Out: ' + out + '\n'

log.info '-'*80 + '\n'
</script></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:testSuite id="e2e0c715-a5e7-47d1-8813-bc920370c4ce" name="Reports"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="25915b46-d032-4ba8-b5f5-c795a99115e3" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Problems" searchProperties="true"><con:settings/><con:testStep type="groovy" name="genericlistproblem" id="495e87d5-2d22-4921-bd4d-17b35f816120"><con:settings/><con:config><script>import org.apache.http.HttpResponse
import org.apache.http.HttpEntity;
import org.apache.http.client.methods.HttpGet
import org.apache.http.util.EntityUtils
import groovy.util.XmlSlurper
import com.soapui.scripts

log.info '-'*80 + '\n'
log.info 'Test Step Name: ' + context.testCase.getTestStepAt(context.getCurrentStepIndex()).getLabel() + '\n'
	
def project = context.testCase.testSuite.project
def suite = context.testCase.testSuite
key = project.getPropertyValue('oauth_consumer_key')
secret = project.getPropertyValue('oauth_consumer_secret')
token = project.getPropertyValue('token')
token_secret = project.getPropertyValue('token_secret')
//key = 'medications@apps.indivo.org'
//secret = 'medications'
accountId = project.getPropertyValue('account_id')
recordId = project.getPropertyValue('recordId')
//recordId = '4cab53ad-bd94-4efe-a3d8-35b95cfd8773'

urlBase = 'http://' + project.getPropertyValue('host') + ':' + project.getPropertyValue('port') + '/'
url = urlBase +'records/' + recordId  + '/reports/Problem/'+'?status=active&amp;order_by=&amp;limit=200&amp;offset=0&amp;response_format=application/json'
	
HttpGet request = new HttpGet(url)	
HttpResponse response = new scripts().execute(key, secret, token, token_secret, request)

log.info 'Response: ' + response + '\n'
HttpEntity entity = response.getEntity()
def out = EntityUtils.toString(entity)
log.info 'Response String: ' + out + '\n' 
//def message = new XmlSlurper().parseText(out)
//def messageId = message.Message[0].'@id'
//log.info 'message id: ' + messageId + '\n'
//suite.setPropertyValue('messageId', messageId.toString())
log.info '-'*80 + '\n'</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="8900e35d-7c71-487b-b899-92b34c57f972" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Medication" searchProperties="true"><con:settings/><con:testStep type="groovy" name="genericListMedication" id="b0aafd3f-e1d1-4873-8d1b-4ba29062931c"><con:settings/><con:config><script>import org.apache.http.HttpResponse
import org.apache.http.HttpEntity;
import org.apache.http.client.methods.HttpGet
import org.apache.http.util.EntityUtils
import groovy.util.XmlSlurper
import com.soapui.scripts

log.info '-'*80 + '\n'
log.info 'Test Step Name: ' + context.testCase.getTestStepAt(context.getCurrentStepIndex()).getLabel() + '\n'
	
def project = context.testCase.testSuite.project
def suite = context.testCase.testSuite
key = project.getPropertyValue('oauth_consumer_key')
secret = project.getPropertyValue('oauth_consumer_secret')
token = project.getPropertyValue('token')
token_secret = project.getPropertyValue('token_secret')
//key = 'medications@apps.indivo.org'
//secret = 'medications'
accountId = project.getPropertyValue('account_id')
recordId = project.getPropertyValue('recordId')
//recordId = '4cab53ad-bd94-4efe-a3d8-35b95cfd8773'

urlBase = 'http://' + project.getPropertyValue('host') + ':' + project.getPropertyValue('port') + '/'
url = urlBase +'records/' + recordId  + '/reports/Medication/'+'?status=active&amp;order_by=&amp;limit=200&amp;offset=0&amp;response_format=application/json'
	
HttpGet request = new HttpGet(url)	
HttpResponse response = new scripts().execute(key, secret, token, token_secret, request)

log.info 'Response: ' + response + '\n'
HttpEntity entity = response.getEntity()

def out = EntityUtils.toString(entity)
log.info 'Response String: ' + out + '\n' 
//def message = new XmlSlurper().parseText(out)
//def messageId = message.Message[0].'@id'
//log.info 'message id: ' + messageId + '\n'
//suite.setPropertyValue('messageId', messageId.toString())
log.info '-'*80 + '\n'</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="12f98e96-fb90-4327-85a1-7bcde73aad96" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Immunization" searchProperties="true"><con:settings/><con:testStep type="groovy" name="genericListImmunization" id="73f96c42-402d-4d8a-ba06-7765e7967ce4"><con:settings/><con:config><script><![CDATA[import org.apache.http.HttpResponse
import org.apache.http.HttpEntity;
import org.apache.http.client.methods.HttpGet
import org.apache.http.util.EntityUtils
import groovy.util.XmlSlurper
import com.soapui.scripts

log.info '-'*80 + '\n'
log.info 'Test Step Name: ' + context.testCase.getTestStepAt(context.getCurrentStepIndex()).getLabel() + '\n'
	
def project = context.testCase.testSuite.project
def suite = context.testCase.testSuite
key = project.getPropertyValue('oauth_consumer_key')
secret = project.getPropertyValue('oauth_consumer_secret')
token = project.getPropertyValue('token')
token_secret = project.getPropertyValue('token_secret')
//key = 'medications@apps.indivo.org'
//secret = 'medications'
accountId = project.getPropertyValue('account_id')
recordId = project.getPropertyValue('recordId')
//recordId = '4cab53ad-bd94-4efe-a3d8-35b95cfd8773'

urlBase = 'http://' + project.getPropertyValue('host') + ':' + project.getPropertyValue('port') + '/'
//url = urlBase +'records/' + recordId  + '/reports/Immunization/'+'?status=active&order_by=&limit=200&offset=0&response_format=application/json'
url = urlBase +'records/' + recordId  + '/reports/Immunization/'+'?administration_status_title=notAdministered&group_by=product_name_title&aggregate_by=count*product_name_title&status=active&date_range=date*2012-01-01T00:00:00Z*2012-01-31T00:00:00Z&order_by=&limit=200&offset=0&response_format=application/json'	
HttpGet request = new HttpGet(url)	
HttpResponse response = new scripts().execute(key, secret, token, token_secret, request)

log.info 'Response: ' + response + '\n'
HttpEntity entity = response.getEntity()
def out = EntityUtils.toString(entity)
log.info 'Response String: ' + out + '\n' 
log.info '-'*80 + '\n']]></script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="13652640-bd0c-4cb1-8842-d6c59abfcd94" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Equipment" searchProperties="true"><con:settings/><con:testStep type="groovy" name="genericlistequipment" id="74e1c786-b158-4611-9903-a081ddbfe028"><con:settings/><con:config><script>import org.apache.http.HttpResponse
import org.apache.http.HttpEntity;
import org.apache.http.client.methods.HttpGet
import org.apache.http.util.EntityUtils
import groovy.util.XmlSlurper
import com.soapui.scripts

log.info '-'*80 + '\n'
log.info 'Test Step Name: ' + context.testCase.getTestStepAt(context.getCurrentStepIndex()).getLabel() + '\n'
	
def project = context.testCase.testSuite.project
def suite = context.testCase.testSuite
key = project.getPropertyValue('oauth_consumer_key')
secret = project.getPropertyValue('oauth_consumer_secret')
token = project.getPropertyValue('token')
token_secret = project.getPropertyValue('token_secret')
//key = 'medications@apps.indivo.org'
//secret = 'medications'
accountId = project.getPropertyValue('account_id')
recordId = project.getPropertyValue('recordId')
//recordId = '4cab53ad-bd94-4efe-a3d8-35b95cfd8773'

urlBase = 'http://' + project.getPropertyValue('host') + ':' + project.getPropertyValue('port') + '/'
url = urlBase +'records/' + recordId  + '/reports/Equipment/'+'?status=active&amp;order_by=&amp;limit=200&amp;offset=0&amp;response_format=application/xml'
	
HttpGet request = new HttpGet(url)	
HttpResponse response = new scripts().execute(key, secret, token, token_secret, request)

log.info 'Response: ' + response + '\n'
HttpEntity entity = response.getEntity()
def out = EntityUtils.toString(entity)
log.info 'Response String: ' + out + '\n' 
log.info '-'*80 + '\n'</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="cf7bf780-cccf-4a26-9470-7a80b3823fd3" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Procedure" searchProperties="true"><con:settings/><con:testStep type="groovy" name="genericlistProcedure" id="f4a2de7e-441d-4cd1-8ca9-c00bb767e270"><con:settings/><con:config><script>import org.apache.http.HttpResponse
import org.apache.http.HttpEntity;
import org.apache.http.client.methods.HttpGet
import org.apache.http.util.EntityUtils
import groovy.util.XmlSlurper
import com.soapui.scripts

log.info '-'*80 + '\n'
log.info 'Test Step Name: ' + context.testCase.getTestStepAt(context.getCurrentStepIndex()).getLabel() + '\n'
	
def project = context.testCase.testSuite.project
def suite = context.testCase.testSuite
key = project.getPropertyValue('oauth_consumer_key')
secret = project.getPropertyValue('oauth_consumer_secret')
token = project.getPropertyValue('token')
token_secret = project.getPropertyValue('token_secret')
//key = 'medications@apps.indivo.org'
//secret = 'medications'
accountId = project.getPropertyValue('account_id')
recordId = project.getPropertyValue('recordId')
//recordId = '4cab53ad-bd94-4efe-a3d8-35b95cfd8773'

urlBase = 'http://' + project.getPropertyValue('host') + ':' + project.getPropertyValue('port') + '/'
url = urlBase +'records/' + recordId  + '/reports/Procedure/'+'?status=active&amp;order_by=&amp;limit=200&amp;offset=0&amp;response_format=application/xml'
	
HttpGet request = new HttpGet(url)	
HttpResponse response = new scripts().execute(key, secret, token, token_secret, request)

log.info 'Response: ' + response + '\n'
HttpEntity entity = response.getEntity()
def out = EntityUtils.toString(entity)
log.info 'Response String: ' + out + '\n' 
log.info '-'*80 + '\n'</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="65b7f994-55d4-4980-8585-7dd6e1d38fc3" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="SimpleClinicalNote" searchProperties="true"><con:settings/><con:testStep type="groovy" name="genericListSimpleClinicalNote" id="077c39b0-254e-4243-a1e2-6fd5a68a9a85"><con:settings/><con:config><script>import org.apache.http.HttpResponse
import org.apache.http.HttpEntity;
import org.apache.http.client.methods.HttpGet
import org.apache.http.util.EntityUtils
import groovy.util.XmlSlurper
import com.soapui.scripts

log.info '-'*80 + '\n'
log.info 'Test Step Name: ' + context.testCase.getTestStepAt(context.getCurrentStepIndex()).getLabel() + '\n'
	
def project = context.testCase.testSuite.project
def suite = context.testCase.testSuite
key = project.getPropertyValue('oauth_consumer_key')
secret = project.getPropertyValue('oauth_consumer_secret')
token = project.getPropertyValue('token')
token_secret = project.getPropertyValue('token_secret')
//key = 'medications@apps.indivo.org'
//secret = 'medications'
accountId = project.getPropertyValue('account_id')
recordId = project.getPropertyValue('recordId')
//recordId = '4cab53ad-bd94-4efe-a3d8-35b95cfd8773'

urlBase = 'http://' + project.getPropertyValue('host') + ':' + project.getPropertyValue('port') + '/'
url = urlBase +'records/' + recordId  + '/reports/SimpleClinicalNote/'+'?status=active&amp;order_by=&amp;limit=200&amp;offset=0&amp;response_format=application/xml'
	
HttpGet request = new HttpGet(url)	
HttpResponse response = new scripts().execute(key, secret, token, token_secret, request)

log.info 'Response: ' + response + '\n'
HttpEntity entity = response.getEntity()
def out = EntityUtils.toString(entity)
log.info 'Response String: ' + out + '\n' 
log.info '-'*80 + '\n'</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="e529f804-abe1-4ff1-a2c4-9e25207d45c3" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="VitalSign" searchProperties="true"><con:settings/><con:testStep type="groovy" name="genericListVitalSigns" id="4a694df9-033a-4e66-a709-75f6a50f31f5"><con:settings/><con:config><script>import org.apache.http.HttpResponse
import org.apache.http.HttpEntity;
import org.apache.http.client.methods.HttpGet
import org.apache.http.util.EntityUtils
import groovy.util.XmlSlurper
import com.soapui.scripts

log.info '-'*80 + '\n'
log.info 'Test Step Name: ' + context.testCase.getTestStepAt(context.getCurrentStepIndex()).getLabel() + '\n'
	
def project = context.testCase.testSuite.project
def suite = context.testCase.testSuite
key = project.getPropertyValue('oauth_consumer_key')
secret = project.getPropertyValue('oauth_consumer_secret')
token = project.getPropertyValue('token')
token_secret = project.getPropertyValue('token_secret')
//key = 'medications@apps.indivo.org'
//secret = 'medications'
accountId = project.getPropertyValue('account_id')
recordId = project.getPropertyValue('recordId')
//recordId = '4cab53ad-bd94-4efe-a3d8-35b95cfd8773'

urlBase = 'http://' + project.getPropertyValue('host') + ':' + project.getPropertyValue('port') + '/'
url = urlBase +'records/' + recordId  + '/reports/VitalSigns/'+'?status=active&amp;order_by=date&amp;limit=200&amp;offset=0&amp;response_format=application/json'
	
HttpGet request = new HttpGet(url)	
HttpResponse response = new scripts().execute(key, secret, token, token_secret, request)

log.info 'Response: ' + response + '\n'
HttpEntity entity = response.getEntity()
def out = EntityUtils.toString(entity)
log.info 'Response String: ' + out + '\n' 
log.info '-'*80 + '\n'</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="1a37ca1d-a9a8-403c-a898-3cf02c8ee05f" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Allergies" searchProperties="true"><con:settings/><con:testStep type="groovy" name="genericlistAllergies" id="d39cba88-7f56-427f-bb58-56965f188bc1"><con:settings/><con:config><script>import org.apache.http.HttpResponse
import org.apache.http.HttpEntity;
import org.apache.http.client.methods.HttpGet
import org.apache.http.util.EntityUtils
import groovy.util.XmlSlurper
import com.soapui.scripts

log.info '-'*80 + '\n'
log.info 'Test Step Name: ' + context.testCase.getTestStepAt(context.getCurrentStepIndex()).getLabel() + '\n'
	
def project = context.testCase.testSuite.project
def suite = context.testCase.testSuite
key = project.getPropertyValue('oauth_consumer_key')
secret = project.getPropertyValue('oauth_consumer_secret')
token = project.getPropertyValue('token')
token_secret = project.getPropertyValue('token_secret')
//key = 'medications@apps.indivo.org'
//secret = 'medications'
accountId = project.getPropertyValue('account_id')
recordId = project.getPropertyValue('recordId')
//recordId = '4cab53ad-bd94-4efe-a3d8-35b95cfd8773'

urlBase = 'http://' + project.getPropertyValue('host') + ':' + project.getPropertyValue('port') + '/'
url = urlBase +'records/' + recordId  + '/reports/Allergy/'+'?status=active&amp;order_by=&amp;limit=200&amp;offset=0&amp;response_format=application/json'
	
HttpGet request = new HttpGet(url)	
HttpResponse response = new scripts().execute(key, secret, token, token_secret, request)

log.info 'Response: ' + response + '\n'
HttpEntity entity = response.getEntity()
def out = EntityUtils.toString(entity)
log.info 'Response String: ' + out + '\n' 
log.info '-'*80 + '\n'</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="82a0d598-74d4-4778-a9bc-500889f45824" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="FeverWatch" searchProperties="true"><con:settings/><con:testStep type="groovy" name="genericListFeverWatch" id="9517f954-4c37-4c9a-af5c-07b5d6512edc"><con:settings/><con:config><script>import org.apache.http.HttpResponse
import org.apache.http.HttpEntity;
import org.apache.http.client.methods.HttpGet
import org.apache.http.util.EntityUtils
import groovy.util.XmlSlurper
import com.soapui.scripts

log.info '-'*80 + '\n'
log.info 'Test Step Name: ' + context.testCase.getTestStepAt(context.getCurrentStepIndex()).getLabel() + '\n'
	
def project = context.testCase.testSuite.project
def suite = context.testCase.testSuite
key = project.getPropertyValue('oauth_consumer_key')
secret = project.getPropertyValue('oauth_consumer_secret')
token = project.getPropertyValue('token')
token_secret = project.getPropertyValue('token_secret')
//key = 'medications@apps.indivo.org'
//secret = 'medications'
accountId = project.getPropertyValue('account_id')
recordId = project.getPropertyValue('recordId')
//recordId = '4cab53ad-bd94-4efe-a3d8-35b95cfd8773'

urlBase = 'http://' + project.getPropertyValue('host') + ':' + project.getPropertyValue('port') + '/'
url = urlBase +'records/' + recordId  + '/reports/FeverWatch/'+'?status=active&amp;order_by=&amp;limit=200&amp;offset=0&amp;response_format=application/json'
	
HttpGet request = new HttpGet(url)	
HttpResponse response = new scripts().execute(key, secret, token, token_secret, request)

log.info 'Response: ' + response + '\n'
HttpEntity entity = response.getEntity()
def out = EntityUtils.toString(entity)
log.info 'Response String: ' + out + '\n' 
log.info '-'*80 + '\n'</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="8cba2321-abb8-42d7-8e7d-dda966a4226b" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="HelImmunization" searchProperties="true"><con:settings/><con:testStep type="groovy" name="genericListHelImmunization" id="bedbf60f-5d05-47ef-b0c9-169592c15e08"><con:settings/><con:config><script><![CDATA[import org.apache.http.HttpResponse
import org.apache.http.HttpEntity;
import org.apache.http.client.methods.HttpGet
import org.apache.http.util.EntityUtils
import groovy.util.XmlSlurper
import com.soapui.scripts

log.info '-'*80 + '\n'
log.info 'Test Step Name: ' + context.testCase.getTestStepAt(context.getCurrentStepIndex()).getLabel() + '\n'
	
def project = context.testCase.testSuite.project
def suite = context.testCase.testSuite
key = project.getPropertyValue('oauth_consumer_key')
secret = project.getPropertyValue('oauth_consumer_secret')
token = project.getPropertyValue('token')
token_secret = project.getPropertyValue('token_secret')
//key = 'medications@apps.indivo.org'
//secret = 'medications'
accountId = project.getPropertyValue('account_id')
recordId = project.getPropertyValue('recordId')
//recordId = '4cab53ad-bd94-4efe-a3d8-35b95cfd8773'

urlBase = 'http://' + project.getPropertyValue('host') + ':' + project.getPropertyValue('port') + '/'
url = urlBase +'records/' + recordId  + '/reports/HelImmunization/'+'?status=active&order_by=&limit=200&offset=0&response_format=application/json'
//url = urlBase +'records/' + recordId  + '/reports/Immunization/'+'?administration_status_title=notAdministered&group_by=product_name_title&aggregate_by=count*product_name_title&status=active&date_range=date*2012-01-01T00:00:00Z*2012-01-31T00:00:00Z&order_by=&limit=200&offset=0&response_format=application/json'	
HttpGet request = new HttpGet(url)	
HttpResponse response = new scripts().execute(key, secret, token, token_secret, request)

log.info 'Response: ' + response + '\n'
HttpEntity entity = response.getEntity()
def out = EntityUtils.toString(entity)
log.info 'Response String: ' + out + '\n' 
log.info '-'*80 + '\n']]></script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="12bcdf69-ea1f-4add-a7b7-9ea6fa1e39aa" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="HelLabResult" searchProperties="true"><con:settings/><con:testStep type="groovy" name="HelLabResultgenericList" id="d89efd33-e8dd-4573-a1f7-a3e00e3561b0"><con:settings/><con:config><script><![CDATA[import org.apache.http.HttpResponse
import org.apache.http.HttpEntity;
import org.apache.http.client.methods.HttpGet
import org.apache.http.util.EntityUtils
import groovy.util.XmlSlurper
import com.soapui.scripts

log.info '-'*80 + '\n'
log.info 'Test Step Name: ' + context.testCase.getTestStepAt(context.getCurrentStepIndex()).getLabel() + '\n'
	
def project = context.testCase.testSuite.project
def suite = context.testCase.testSuite
key = project.getPropertyValue('oauth_consumer_key')
secret = project.getPropertyValue('oauth_consumer_secret')
token = project.getPropertyValue('token')
token_secret = project.getPropertyValue('token_secret')
//key = 'medications@apps.indivo.org'
//secret = 'medications'
accountId = project.getPropertyValue('account_id')
recordId = project.getPropertyValue('recordId')
//recordId = '4cab53ad-bd94-4efe-a3d8-35b95cfd8773'

urlBase = 'http://' + project.getPropertyValue('host') + ':' + project.getPropertyValue('port') + '/'
url = urlBase +'records/' + recordId  + '/reports/HelLabResult/'+'?status=active&order_by=&limit=200&offset=0&response_format=application/json'
//url = urlBase +'records/' + recordId  + '/reports/Immunization/'+'?administration_status_title=notAdministered&group_by=product_name_title&aggregate_by=count*product_name_title&status=active&date_range=date*2012-01-01T00:00:00Z*2012-01-31T00:00:00Z&order_by=&limit=200&offset=0&response_format=application/json'	
HttpGet request = new HttpGet(url)	
HttpResponse response = new scripts().execute(key, secret, token, token_secret, request)

log.info 'Response: ' + response + '\n'
HttpEntity entity = response.getEntity()
def out = EntityUtils.toString(entity)
log.info 'Response String: ' + out + '\n' 
log.info '-'*80 + '\n']]></script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="498b6e69-0260-4307-9c20-f1d2cdc979b8" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="HelVitalSigns" searchProperties="true"><con:settings/><con:testStep type="groovy" name="HelVitalSignsgenericList" id="957b1b3b-cfe5-4bac-9f4b-00df3dca4dca"><con:settings/><con:config><script><![CDATA[import org.apache.http.HttpResponse
import org.apache.http.HttpEntity;
import org.apache.http.client.methods.HttpGet
import org.apache.http.util.EntityUtils
import groovy.util.XmlSlurper
import com.soapui.scripts

log.info '-'*80 + '\n'
log.info 'Test Step Name: ' + context.testCase.getTestStepAt(context.getCurrentStepIndex()).getLabel() + '\n'
	
def project = context.testCase.testSuite.project
def suite = context.testCase.testSuite
key = project.getPropertyValue('oauth_consumer_key')
secret = project.getPropertyValue('oauth_consumer_secret')
token = project.getPropertyValue('token')
token_secret = project.getPropertyValue('token_secret')
//key = 'medications@apps.indivo.org'
//secret = 'medications'
accountId = project.getPropertyValue('account_id')
recordId = project.getPropertyValue('recordId')
//recordId = '4cab53ad-bd94-4efe-a3d8-35b95cfd8773'

urlBase = 'http://' + project.getPropertyValue('host') + ':' + project.getPropertyValue('port') + '/'
url = urlBase +'records/' + recordId  + '/reports/HelVitalSigns/'+'?status=active&order_by=&limit=200&offset=0&response_format=application/xml'
//url = urlBase +'records/' + recordId  + '/reports/Immunization/'+'?administration_status_title=notAdministered&group_by=product_name_title&aggregate_by=count*product_name_title&status=active&date_range=date*2012-01-01T00:00:00Z*2012-01-31T00:00:00Z&order_by=&limit=200&offset=0&response_format=application/json'	
HttpGet request = new HttpGet(url)	
HttpResponse response = new scripts().execute(key, secret, token, token_secret, request)

log.info 'Response: ' + response + '\n'
HttpEntity entity = response.getEntity()
def out = EntityUtils.toString(entity)
log.info 'Response String: ' + out + '\n' 
log.info '-'*80 + '\n']]></script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="6affbf66-0eef-493a-97fc-4888755a558b" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="HealthScore" searchProperties="true"><con:settings/><con:testStep type="groovy" name="healthScore_genericlist" id="225851c4-53a9-42d0-a5cf-34284737cad3"><con:settings/><con:config><script><![CDATA[import org.apache.http.HttpResponse
import org.apache.http.HttpEntity;
import org.apache.http.client.methods.HttpGet
import org.apache.http.util.EntityUtils
import groovy.util.XmlSlurper
import com.soapui.scripts

log.info '-'*80 + '\n'
log.info 'Test Step Name: ' + context.testCase.getTestStepAt(context.getCurrentStepIndex()).getLabel() + '\n'
	
def project = context.testCase.testSuite.project
def suite = context.testCase.testSuite
key = project.getPropertyValue('oauth_consumer_key')
secret = project.getPropertyValue('oauth_consumer_secret')
token = project.getPropertyValue('token')
token_secret = project.getPropertyValue('token_secret')
//key = 'medications@apps.indivo.org'
//secret = 'medications'
accountId = project.getPropertyValue('account_id')
recordId = project.getPropertyValue('recordId')
//recordId = '4cab53ad-bd94-4efe-a3d8-35b95cfd8773'

urlBase = 'http://' + project.getPropertyValue('host') + ':' + project.getPropertyValue('port') + '/'
url = urlBase +'records/' + recordId  + '/reports/HealthScore/'+'?name=GHA&status=active&order_by=-created_at&limit=1&offset=0&response_format=application/xml'
//url = urlBase +'records/' + recordId  + '/reports/Immunization/'+'?administration_status_title=notAdministered&group_by=product_name_title&aggregate_by=count*product_name_title&status=active&date_range=date*2012-01-01T00:00:00Z*2012-01-31T00:00:00Z&order_by=&limit=200&offset=0&response_format=application/json'	
HttpGet request = new HttpGet(url)	
HttpResponse response = new scripts().execute(key, secret, token, token_secret, request)

log.info 'Response: ' + response + '\n'
HttpEntity entity = response.getEntity()
def out = EntityUtils.toString(entity)
log.info 'Response String: ' + out + '\n' 
log.info '-'*80 + '\n']]></script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="7e676d05-86cc-49e2-b6c0-36ef1c889a92" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="HelPrescription" searchProperties="true"><con:settings/><con:testStep type="groovy" name="prescription GenericList" id="15e61716-0eab-443e-8b78-d3c1dd79cc64"><con:settings/><con:config><script><![CDATA[import org.apache.http.HttpResponse
import org.apache.http.HttpEntity;
import org.apache.http.client.methods.HttpGet
import org.apache.http.util.EntityUtils
import groovy.util.XmlSlurper
import com.soapui.scripts

log.info '-'*80 + '\n'
log.info 'Test Step Name: ' + context.testCase.getTestStepAt(context.getCurrentStepIndex()).getLabel() + '\n'
	
def project = context.testCase.testSuite.project
def suite = context.testCase.testSuite
key = project.getPropertyValue('oauth_consumer_key')
secret = project.getPropertyValue('oauth_consumer_secret')
token = project.getPropertyValue('token')
token_secret = project.getPropertyValue('token_secret')
//key = 'medications@apps.indivo.org'
//secret = 'medications'
accountId = project.getPropertyValue('account_id')
recordId = project.getPropertyValue('recordId')
//recordId = '4cab53ad-bd94-4efe-a3d8-35b95cfd8773'

urlBase = 'http://' + project.getPropertyValue('host') + ':' + project.getPropertyValue('port') + '/'
url = urlBase +'records/' + recordId  + '/reports/HelPrescription/'+'?status=active&order_by=&limit=200&offset=0&response_format=application/xml'
//url = urlBase +'records/' + recordId  + '/reports/Immunization/'+'?administration_status_title=notAdministered&group_by=product_name_title&aggregate_by=count*product_name_title&status=active&date_range=date*2012-01-01T00:00:00Z*2012-01-31T00:00:00Z&order_by=&limit=200&offset=0&response_format=application/json'	
HttpGet request = new HttpGet(url)	
HttpResponse response = new scripts().execute(key, secret, token, token_secret, request)

log.info 'Response: ' + response + '\n'
HttpEntity entity = response.getEntity()
def out = EntityUtils.toString(entity)
log.info 'Response String: ' + out + '\n' 
log.info '-'*80 + '\n']]></script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="358b3e8c-37e8-4e38-be63-259c19cab421" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Question" searchProperties="true"><con:settings/><con:testStep type="groovy" name="genListQuestion" id="29d52ff1-ce25-4056-8ac8-8583f03b0099"><con:settings/><con:config><script><![CDATA[import org.apache.http.HttpResponse
import org.apache.http.HttpEntity;
import org.apache.http.client.methods.HttpGet
import org.apache.http.util.EntityUtils
import groovy.util.XmlSlurper
import com.soapui.scripts

log.info '-'*80 + '\n'
log.info 'Test Step Name: ' + context.testCase.getTestStepAt(context.getCurrentStepIndex()).getLabel() + '\n'
	
def project = context.testCase.testSuite.project
def suite = context.testCase.testSuite
key = project.getPropertyValue('oauth_consumer_key')
secret = project.getPropertyValue('oauth_consumer_secret')
token = project.getPropertyValue('token')
token_secret = project.getPropertyValue('token_secret')
//key = 'medications@apps.indivo.org'
//secret = 'medications'
accountId = project.getPropertyValue('account_id')
recordId = project.getPropertyValue('recordId')
//recordId = '4cab53ad-bd94-4efe-a3d8-35b95cfd8773'

urlBase = 'http://' + project.getPropertyValue('host') + ':' + project.getPropertyValue('port') + '/'
url = urlBase +'records/' + recordId  + '/reports/Question/'+'?status=active&order_by=&limit=200&offset=0&response_format=application/xml'
//url = urlBase +'records/' + recordId  + '/reports/Immunization/'+'?administration_status_title=notAdministered&group_by=product_name_title&aggregate_by=count*product_name_title&status=active&date_range=date*2012-01-01T00:00:00Z*2012-01-31T00:00:00Z&order_by=&limit=200&offset=0&response_format=application/json'	
HttpGet request = new HttpGet(url)	
HttpResponse response = new scripts().execute(key, secret, token, token_secret, request)

log.info 'Response: ' + response + '\n'
HttpEntity entity = response.getEntity()
def out = EntityUtils.toString(entity)
log.info 'Response String: ' + out + '\n' 
log.info '-'*80 + '\n']]></script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="d359c6f8-e860-49c7-8693-320881b49adf" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="vitaproblem" searchProperties="true"><con:settings/><con:testStep type="groovy" name="genlist_vitaproblem" id="93f2ea9f-993b-48a3-8aa0-71b2d65e44b2"><con:settings/><con:config><script><![CDATA[import org.apache.http.HttpResponse
import org.apache.http.HttpEntity;
import org.apache.http.client.methods.HttpGet
import org.apache.http.util.EntityUtils
import groovy.util.XmlSlurper
import com.soapui.scripts

log.info '-'*80 + '\n'
log.info 'Test Step Name: ' + context.testCase.getTestStepAt(context.getCurrentStepIndex()).getLabel() + '\n'
	
def project = context.testCase.testSuite.project
def suite = context.testCase.testSuite
key = project.getPropertyValue('oauth_consumer_key')
secret = project.getPropertyValue('oauth_consumer_secret')
token = project.getPropertyValue('token')
token_secret = project.getPropertyValue('token_secret')
//key = 'medications@apps.indivo.org'
//secret = 'medications'
accountId = project.getPropertyValue('account_id')
recordId = project.getPropertyValue('recordId')
//recordId = '4cab53ad-bd94-4efe-a3d8-35b95cfd8773'

urlBase = 'http://' + project.getPropertyValue('host') + ':' + project.getPropertyValue('port') + '/'
url = urlBase +'records/' + recordId  + '/reports/VitaProblem/'+'?status=active&order_by=&limit=200&offset=0&response_format=application/xml'
//url = urlBase +'records/' + recordId  + '/reports/Immunization/'+'?administration_status_title=notAdministered&group_by=product_name_title&aggregate_by=count*product_name_title&status=active&date_range=date*2012-01-01T00:00:00Z*2012-01-31T00:00:00Z&order_by=&limit=200&offset=0&response_format=application/json'	
HttpGet request = new HttpGet(url)	
HttpResponse response = new scripts().execute(key, secret, token, token_secret, request)

log.info 'Response: ' + response + '\n'
HttpEntity entity = response.getEntity()
def out = EntityUtils.toString(entity)
log.info 'Response String: ' + out + '\n' 
log.info '-'*80 + '\n']]></script></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:properties><con:property><con:name>oauth_consumer_key</con:name><con:value>chrome</con:value></con:property><con:property><con:name>oauth_consumer_secret</con:name><con:value>chrome</con:value></con:property><con:property><con:name>token</con:name><con:value>rmfTKFVcXVsGPAhP0MZx</con:value></con:property><con:property><con:name>token_secret</con:name><con:value>WfA5Tbj2K9g2qlnzidbw</con:value></con:property><con:property><con:name>account_id</con:name><con:value>johnsmith@indivo.org</con:value></con:property><con:property><con:name>host</con:name><con:value>localhost</con:value></con:property><con:property><con:name>port</con:name><con:value>8000</con:value></con:property><con:property><con:name>recordId</con:name><con:value>c333675f-4c81-4953-b1c3-ef1e2c9a3581</con:value></con:property><con:property><con:name>carenetId</con:name><con:value/></con:property></con:properties><con:wssContainer/><con:oAuth2ProfileContainer><con:oAuth2Profile><con:name>Indivo</con:name><con:accessToken>dYXswvqEQbYAAAAAAAAAKEprzMta_vwQiaBmaFtG4UGWS2ysDqbjybQ03olwo89X",</con:accessToken><con:accessTokenPosition>HEADER</con:accessTokenPosition><con:oAuth2Flow>AUTHORIZATION_CODE_GRANT</con:oAuth2Flow><con:refreshAccessTokenMethod>AUTOMATIC</con:refreshAccessTokenMethod><con:accessTokenStatus xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/><con:accessTokenStartingStatus>ENTERED_MANUALLY</con:accessTokenStartingStatus><con:manualAccessTokenExpirationTime/><con:manualAccessTokenExpirationTimeUnit>SECONDS</con:manualAccessTokenExpirationTimeUnit></con:oAuth2Profile></con:oAuth2ProfileContainer><con:sensitiveInformation/></con:soapui-project>